
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model ApplicationLog
 * 
 */
export type ApplicationLog = $Result.DefaultSelection<Prisma.$ApplicationLogPayload>
/**
 * Model AuditLog
 * 
 */
export type AuditLog = $Result.DefaultSelection<Prisma.$AuditLogPayload>
/**
 * Model Company
 * 
 */
export type Company = $Result.DefaultSelection<Prisma.$CompanyPayload>
/**
 * Model CompanyAdditionalInfo
 * 
 */
export type CompanyAdditionalInfo = $Result.DefaultSelection<Prisma.$CompanyAdditionalInfoPayload>
/**
 * Model User
 * 
 */
export type User = $Result.DefaultSelection<Prisma.$UserPayload>
/**
 * Model RefreshToken
 * 
 */
export type RefreshToken = $Result.DefaultSelection<Prisma.$RefreshTokenPayload>
/**
 * Model SecurityRule
 * 
 */
export type SecurityRule = $Result.DefaultSelection<Prisma.$SecurityRulePayload>
/**
 * Model SecurityRuleWiseMenuPermission
 * 
 */
export type SecurityRuleWiseMenuPermission = $Result.DefaultSelection<Prisma.$SecurityRuleWiseMenuPermissionPayload>
/**
 * Model SecurityGroup
 * 
 */
export type SecurityGroup = $Result.DefaultSelection<Prisma.$SecurityGroupPayload>
/**
 * Model SecurityGroupRule
 * 
 */
export type SecurityGroupRule = $Result.DefaultSelection<Prisma.$SecurityGroupRulePayload>
/**
 * Model UserGroup
 * 
 */
export type UserGroup = $Result.DefaultSelection<Prisma.$UserGroupPayload>
/**
 * Model Menu
 * 
 */
export type Menu = $Result.DefaultSelection<Prisma.$MenuPayload>
/**
 * Model Product
 * 
 */
export type Product = $Result.DefaultSelection<Prisma.$ProductPayload>
/**
 * Model Category
 * 
 */
export type Category = $Result.DefaultSelection<Prisma.$CategoryPayload>
/**
 * Model Subcategory
 * 
 */
export type Subcategory = $Result.DefaultSelection<Prisma.$SubcategoryPayload>
/**
 * Model Brand
 * 
 */
export type Brand = $Result.DefaultSelection<Prisma.$BrandPayload>
/**
 * Model ProductAttribute
 * 
 */
export type ProductAttribute = $Result.DefaultSelection<Prisma.$ProductAttributePayload>
/**
 * Model ProductVariant
 * 
 */
export type ProductVariant = $Result.DefaultSelection<Prisma.$ProductVariantPayload>
/**
 * Model Seller
 * 
 */
export type Seller = $Result.DefaultSelection<Prisma.$SellerPayload>
/**
 * Model Review
 * 
 */
export type Review = $Result.DefaultSelection<Prisma.$ReviewPayload>
/**
 * Model Customer
 * 
 */
export type Customer = $Result.DefaultSelection<Prisma.$CustomerPayload>
/**
 * Model CustomerRefreshToken
 * 
 */
export type CustomerRefreshToken = $Result.DefaultSelection<Prisma.$CustomerRefreshTokenPayload>
/**
 * Model Order
 * 
 */
export type Order = $Result.DefaultSelection<Prisma.$OrderPayload>
/**
 * Model OrderItem
 * 
 */
export type OrderItem = $Result.DefaultSelection<Prisma.$OrderItemPayload>
/**
 * Model StockMovement
 * 
 */
export type StockMovement = $Result.DefaultSelection<Prisma.$StockMovementPayload>
/**
 * Model UserSettings
 * 
 */
export type UserSettings = $Result.DefaultSelection<Prisma.$UserSettingsPayload>
/**
 * Model CustomerAddress
 * 
 */
export type CustomerAddress = $Result.DefaultSelection<Prisma.$CustomerAddressPayload>
/**
 * Model PendingOrder
 * 
 */
export type PendingOrder = $Result.DefaultSelection<Prisma.$PendingOrderPayload>
/**
 * Model PaymentTransaction
 * 
 */
export type PaymentTransaction = $Result.DefaultSelection<Prisma.$PaymentTransactionPayload>
/**
 * Model Wishlist
 * 
 */
export type Wishlist = $Result.DefaultSelection<Prisma.$WishlistPayload>
/**
 * Model Banner
 * 
 */
export type Banner = $Result.DefaultSelection<Prisma.$BannerPayload>
/**
 * Model SpecialOffer
 * 
 */
export type SpecialOffer = $Result.DefaultSelection<Prisma.$SpecialOfferPayload>
/**
 * Model Coupon
 * 
 */
export type Coupon = $Result.DefaultSelection<Prisma.$CouponPayload>
/**
 * Model ShippingCharge
 * 
 */
export type ShippingCharge = $Result.DefaultSelection<Prisma.$ShippingChargePayload>
/**
 * Model Page
 * 
 */
export type Page = $Result.DefaultSelection<Prisma.$PagePayload>
/**
 * Model PageSection
 * 
 */
export type PageSection = $Result.DefaultSelection<Prisma.$PageSectionPayload>
/**
 * Model Faq
 * 
 */
export type Faq = $Result.DefaultSelection<Prisma.$FaqPayload>

/**
 * Enums
 */
export namespace $Enums {
  export const OrderStatus: {
  PENDING: 'PENDING',
  PROCESSING: 'PROCESSING',
  SHIPPED: 'SHIPPED',
  DELIVERED: 'DELIVERED',
  CANCELLED: 'CANCELLED',
  RETURNED: 'RETURNED'
};

export type OrderStatus = (typeof OrderStatus)[keyof typeof OrderStatus]


export const PaymentStatus: {
  PENDING: 'PENDING',
  PAID: 'PAID',
  FAILED: 'FAILED',
  REFUNDED: 'REFUNDED'
};

export type PaymentStatus = (typeof PaymentStatus)[keyof typeof PaymentStatus]


export const MovementType: {
  PURCHASE: 'PURCHASE',
  SALE: 'SALE',
  RETURN: 'RETURN',
  ADJUSTMENT: 'ADJUSTMENT',
  DAMAGE: 'DAMAGE'
};

export type MovementType = (typeof MovementType)[keyof typeof MovementType]

}

export type OrderStatus = $Enums.OrderStatus

export const OrderStatus: typeof $Enums.OrderStatus

export type PaymentStatus = $Enums.PaymentStatus

export const PaymentStatus: typeof $Enums.PaymentStatus

export type MovementType = $Enums.MovementType

export const MovementType: typeof $Enums.MovementType

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more ApplicationLogs
 * const applicationLogs = await prisma.applicationLog.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more ApplicationLogs
   * const applicationLogs = await prisma.applicationLog.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;


  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.applicationLog`: Exposes CRUD operations for the **ApplicationLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ApplicationLogs
    * const applicationLogs = await prisma.applicationLog.findMany()
    * ```
    */
  get applicationLog(): Prisma.ApplicationLogDelegate<ExtArgs>;

  /**
   * `prisma.auditLog`: Exposes CRUD operations for the **AuditLog** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more AuditLogs
    * const auditLogs = await prisma.auditLog.findMany()
    * ```
    */
  get auditLog(): Prisma.AuditLogDelegate<ExtArgs>;

  /**
   * `prisma.company`: Exposes CRUD operations for the **Company** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Companies
    * const companies = await prisma.company.findMany()
    * ```
    */
  get company(): Prisma.CompanyDelegate<ExtArgs>;

  /**
   * `prisma.companyAdditionalInfo`: Exposes CRUD operations for the **CompanyAdditionalInfo** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CompanyAdditionalInfos
    * const companyAdditionalInfos = await prisma.companyAdditionalInfo.findMany()
    * ```
    */
  get companyAdditionalInfo(): Prisma.CompanyAdditionalInfoDelegate<ExtArgs>;

  /**
   * `prisma.user`: Exposes CRUD operations for the **User** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Users
    * const users = await prisma.user.findMany()
    * ```
    */
  get user(): Prisma.UserDelegate<ExtArgs>;

  /**
   * `prisma.refreshToken`: Exposes CRUD operations for the **RefreshToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more RefreshTokens
    * const refreshTokens = await prisma.refreshToken.findMany()
    * ```
    */
  get refreshToken(): Prisma.RefreshTokenDelegate<ExtArgs>;

  /**
   * `prisma.securityRule`: Exposes CRUD operations for the **SecurityRule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SecurityRules
    * const securityRules = await prisma.securityRule.findMany()
    * ```
    */
  get securityRule(): Prisma.SecurityRuleDelegate<ExtArgs>;

  /**
   * `prisma.securityRuleWiseMenuPermission`: Exposes CRUD operations for the **SecurityRuleWiseMenuPermission** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SecurityRuleWiseMenuPermissions
    * const securityRuleWiseMenuPermissions = await prisma.securityRuleWiseMenuPermission.findMany()
    * ```
    */
  get securityRuleWiseMenuPermission(): Prisma.SecurityRuleWiseMenuPermissionDelegate<ExtArgs>;

  /**
   * `prisma.securityGroup`: Exposes CRUD operations for the **SecurityGroup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SecurityGroups
    * const securityGroups = await prisma.securityGroup.findMany()
    * ```
    */
  get securityGroup(): Prisma.SecurityGroupDelegate<ExtArgs>;

  /**
   * `prisma.securityGroupRule`: Exposes CRUD operations for the **SecurityGroupRule** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SecurityGroupRules
    * const securityGroupRules = await prisma.securityGroupRule.findMany()
    * ```
    */
  get securityGroupRule(): Prisma.SecurityGroupRuleDelegate<ExtArgs>;

  /**
   * `prisma.userGroup`: Exposes CRUD operations for the **UserGroup** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserGroups
    * const userGroups = await prisma.userGroup.findMany()
    * ```
    */
  get userGroup(): Prisma.UserGroupDelegate<ExtArgs>;

  /**
   * `prisma.menu`: Exposes CRUD operations for the **Menu** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Menus
    * const menus = await prisma.menu.findMany()
    * ```
    */
  get menu(): Prisma.MenuDelegate<ExtArgs>;

  /**
   * `prisma.product`: Exposes CRUD operations for the **Product** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Products
    * const products = await prisma.product.findMany()
    * ```
    */
  get product(): Prisma.ProductDelegate<ExtArgs>;

  /**
   * `prisma.category`: Exposes CRUD operations for the **Category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Categories
    * const categories = await prisma.category.findMany()
    * ```
    */
  get category(): Prisma.CategoryDelegate<ExtArgs>;

  /**
   * `prisma.subcategory`: Exposes CRUD operations for the **Subcategory** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Subcategories
    * const subcategories = await prisma.subcategory.findMany()
    * ```
    */
  get subcategory(): Prisma.SubcategoryDelegate<ExtArgs>;

  /**
   * `prisma.brand`: Exposes CRUD operations for the **Brand** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Brands
    * const brands = await prisma.brand.findMany()
    * ```
    */
  get brand(): Prisma.BrandDelegate<ExtArgs>;

  /**
   * `prisma.productAttribute`: Exposes CRUD operations for the **ProductAttribute** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductAttributes
    * const productAttributes = await prisma.productAttribute.findMany()
    * ```
    */
  get productAttribute(): Prisma.ProductAttributeDelegate<ExtArgs>;

  /**
   * `prisma.productVariant`: Exposes CRUD operations for the **ProductVariant** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ProductVariants
    * const productVariants = await prisma.productVariant.findMany()
    * ```
    */
  get productVariant(): Prisma.ProductVariantDelegate<ExtArgs>;

  /**
   * `prisma.seller`: Exposes CRUD operations for the **Seller** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Sellers
    * const sellers = await prisma.seller.findMany()
    * ```
    */
  get seller(): Prisma.SellerDelegate<ExtArgs>;

  /**
   * `prisma.review`: Exposes CRUD operations for the **Review** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Reviews
    * const reviews = await prisma.review.findMany()
    * ```
    */
  get review(): Prisma.ReviewDelegate<ExtArgs>;

  /**
   * `prisma.customer`: Exposes CRUD operations for the **Customer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Customers
    * const customers = await prisma.customer.findMany()
    * ```
    */
  get customer(): Prisma.CustomerDelegate<ExtArgs>;

  /**
   * `prisma.customerRefreshToken`: Exposes CRUD operations for the **CustomerRefreshToken** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CustomerRefreshTokens
    * const customerRefreshTokens = await prisma.customerRefreshToken.findMany()
    * ```
    */
  get customerRefreshToken(): Prisma.CustomerRefreshTokenDelegate<ExtArgs>;

  /**
   * `prisma.order`: Exposes CRUD operations for the **Order** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Orders
    * const orders = await prisma.order.findMany()
    * ```
    */
  get order(): Prisma.OrderDelegate<ExtArgs>;

  /**
   * `prisma.orderItem`: Exposes CRUD operations for the **OrderItem** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more OrderItems
    * const orderItems = await prisma.orderItem.findMany()
    * ```
    */
  get orderItem(): Prisma.OrderItemDelegate<ExtArgs>;

  /**
   * `prisma.stockMovement`: Exposes CRUD operations for the **StockMovement** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more StockMovements
    * const stockMovements = await prisma.stockMovement.findMany()
    * ```
    */
  get stockMovement(): Prisma.StockMovementDelegate<ExtArgs>;

  /**
   * `prisma.userSettings`: Exposes CRUD operations for the **UserSettings** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more UserSettings
    * const userSettings = await prisma.userSettings.findMany()
    * ```
    */
  get userSettings(): Prisma.UserSettingsDelegate<ExtArgs>;

  /**
   * `prisma.customerAddress`: Exposes CRUD operations for the **CustomerAddress** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more CustomerAddresses
    * const customerAddresses = await prisma.customerAddress.findMany()
    * ```
    */
  get customerAddress(): Prisma.CustomerAddressDelegate<ExtArgs>;

  /**
   * `prisma.pendingOrder`: Exposes CRUD operations for the **PendingOrder** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PendingOrders
    * const pendingOrders = await prisma.pendingOrder.findMany()
    * ```
    */
  get pendingOrder(): Prisma.PendingOrderDelegate<ExtArgs>;

  /**
   * `prisma.paymentTransaction`: Exposes CRUD operations for the **PaymentTransaction** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PaymentTransactions
    * const paymentTransactions = await prisma.paymentTransaction.findMany()
    * ```
    */
  get paymentTransaction(): Prisma.PaymentTransactionDelegate<ExtArgs>;

  /**
   * `prisma.wishlist`: Exposes CRUD operations for the **Wishlist** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Wishlists
    * const wishlists = await prisma.wishlist.findMany()
    * ```
    */
  get wishlist(): Prisma.WishlistDelegate<ExtArgs>;

  /**
   * `prisma.banner`: Exposes CRUD operations for the **Banner** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Banners
    * const banners = await prisma.banner.findMany()
    * ```
    */
  get banner(): Prisma.BannerDelegate<ExtArgs>;

  /**
   * `prisma.specialOffer`: Exposes CRUD operations for the **SpecialOffer** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more SpecialOffers
    * const specialOffers = await prisma.specialOffer.findMany()
    * ```
    */
  get specialOffer(): Prisma.SpecialOfferDelegate<ExtArgs>;

  /**
   * `prisma.coupon`: Exposes CRUD operations for the **Coupon** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Coupons
    * const coupons = await prisma.coupon.findMany()
    * ```
    */
  get coupon(): Prisma.CouponDelegate<ExtArgs>;

  /**
   * `prisma.shippingCharge`: Exposes CRUD operations for the **ShippingCharge** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more ShippingCharges
    * const shippingCharges = await prisma.shippingCharge.findMany()
    * ```
    */
  get shippingCharge(): Prisma.ShippingChargeDelegate<ExtArgs>;

  /**
   * `prisma.page`: Exposes CRUD operations for the **Page** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Pages
    * const pages = await prisma.page.findMany()
    * ```
    */
  get page(): Prisma.PageDelegate<ExtArgs>;

  /**
   * `prisma.pageSection`: Exposes CRUD operations for the **PageSection** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more PageSections
    * const pageSections = await prisma.pageSection.findMany()
    * ```
    */
  get pageSection(): Prisma.PageSectionDelegate<ExtArgs>;

  /**
   * `prisma.faq`: Exposes CRUD operations for the **Faq** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Faqs
    * const faqs = await prisma.faq.findMany()
    * ```
    */
  get faq(): Prisma.FaqDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql



  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.22.0
   * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */


  export import JsonObject = runtime.JsonObject
  export import JsonArray = runtime.JsonArray
  export import JsonValue = runtime.JsonValue
  export import InputJsonObject = runtime.InputJsonObject
  export import InputJsonArray = runtime.InputJsonArray
  export import InputJsonValue = runtime.InputJsonValue

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    ApplicationLog: 'ApplicationLog',
    AuditLog: 'AuditLog',
    Company: 'Company',
    CompanyAdditionalInfo: 'CompanyAdditionalInfo',
    User: 'User',
    RefreshToken: 'RefreshToken',
    SecurityRule: 'SecurityRule',
    SecurityRuleWiseMenuPermission: 'SecurityRuleWiseMenuPermission',
    SecurityGroup: 'SecurityGroup',
    SecurityGroupRule: 'SecurityGroupRule',
    UserGroup: 'UserGroup',
    Menu: 'Menu',
    Product: 'Product',
    Category: 'Category',
    Subcategory: 'Subcategory',
    Brand: 'Brand',
    ProductAttribute: 'ProductAttribute',
    ProductVariant: 'ProductVariant',
    Seller: 'Seller',
    Review: 'Review',
    Customer: 'Customer',
    CustomerRefreshToken: 'CustomerRefreshToken',
    Order: 'Order',
    OrderItem: 'OrderItem',
    StockMovement: 'StockMovement',
    UserSettings: 'UserSettings',
    CustomerAddress: 'CustomerAddress',
    PendingOrder: 'PendingOrder',
    PaymentTransaction: 'PaymentTransaction',
    Wishlist: 'Wishlist',
    Banner: 'Banner',
    SpecialOffer: 'SpecialOffer',
    Coupon: 'Coupon',
    ShippingCharge: 'ShippingCharge',
    Page: 'Page',
    PageSection: 'PageSection',
    Faq: 'Faq'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "applicationLog" | "auditLog" | "company" | "companyAdditionalInfo" | "user" | "refreshToken" | "securityRule" | "securityRuleWiseMenuPermission" | "securityGroup" | "securityGroupRule" | "userGroup" | "menu" | "product" | "category" | "subcategory" | "brand" | "productAttribute" | "productVariant" | "seller" | "review" | "customer" | "customerRefreshToken" | "order" | "orderItem" | "stockMovement" | "userSettings" | "customerAddress" | "pendingOrder" | "paymentTransaction" | "wishlist" | "banner" | "specialOffer" | "coupon" | "shippingCharge" | "page" | "pageSection" | "faq"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      ApplicationLog: {
        payload: Prisma.$ApplicationLogPayload<ExtArgs>
        fields: Prisma.ApplicationLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ApplicationLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ApplicationLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>
          }
          findFirst: {
            args: Prisma.ApplicationLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ApplicationLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>
          }
          findMany: {
            args: Prisma.ApplicationLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>[]
          }
          create: {
            args: Prisma.ApplicationLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>
          }
          createMany: {
            args: Prisma.ApplicationLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ApplicationLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>
          }
          update: {
            args: Prisma.ApplicationLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>
          }
          deleteMany: {
            args: Prisma.ApplicationLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ApplicationLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ApplicationLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ApplicationLogPayload>
          }
          aggregate: {
            args: Prisma.ApplicationLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateApplicationLog>
          }
          groupBy: {
            args: Prisma.ApplicationLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<ApplicationLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.ApplicationLogCountArgs<ExtArgs>
            result: $Utils.Optional<ApplicationLogCountAggregateOutputType> | number
          }
        }
      }
      AuditLog: {
        payload: Prisma.$AuditLogPayload<ExtArgs>
        fields: Prisma.AuditLogFieldRefs
        operations: {
          findUnique: {
            args: Prisma.AuditLogFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.AuditLogFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findFirst: {
            args: Prisma.AuditLogFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.AuditLogFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          findMany: {
            args: Prisma.AuditLogFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>[]
          }
          create: {
            args: Prisma.AuditLogCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          createMany: {
            args: Prisma.AuditLogCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.AuditLogDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          update: {
            args: Prisma.AuditLogUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          deleteMany: {
            args: Prisma.AuditLogDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.AuditLogUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.AuditLogUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$AuditLogPayload>
          }
          aggregate: {
            args: Prisma.AuditLogAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateAuditLog>
          }
          groupBy: {
            args: Prisma.AuditLogGroupByArgs<ExtArgs>
            result: $Utils.Optional<AuditLogGroupByOutputType>[]
          }
          count: {
            args: Prisma.AuditLogCountArgs<ExtArgs>
            result: $Utils.Optional<AuditLogCountAggregateOutputType> | number
          }
        }
      }
      Company: {
        payload: Prisma.$CompanyPayload<ExtArgs>
        fields: Prisma.CompanyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findFirst: {
            args: Prisma.CompanyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          findMany: {
            args: Prisma.CompanyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>[]
          }
          create: {
            args: Prisma.CompanyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          createMany: {
            args: Prisma.CompanyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CompanyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          update: {
            args: Prisma.CompanyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          deleteMany: {
            args: Prisma.CompanyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyPayload>
          }
          aggregate: {
            args: Prisma.CompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompany>
          }
          groupBy: {
            args: Prisma.CompanyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyCountAggregateOutputType> | number
          }
        }
      }
      CompanyAdditionalInfo: {
        payload: Prisma.$CompanyAdditionalInfoPayload<ExtArgs>
        fields: Prisma.CompanyAdditionalInfoFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CompanyAdditionalInfoFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CompanyAdditionalInfoFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>
          }
          findFirst: {
            args: Prisma.CompanyAdditionalInfoFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CompanyAdditionalInfoFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>
          }
          findMany: {
            args: Prisma.CompanyAdditionalInfoFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>[]
          }
          create: {
            args: Prisma.CompanyAdditionalInfoCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>
          }
          createMany: {
            args: Prisma.CompanyAdditionalInfoCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CompanyAdditionalInfoDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>
          }
          update: {
            args: Prisma.CompanyAdditionalInfoUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>
          }
          deleteMany: {
            args: Prisma.CompanyAdditionalInfoDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CompanyAdditionalInfoUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CompanyAdditionalInfoUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CompanyAdditionalInfoPayload>
          }
          aggregate: {
            args: Prisma.CompanyAdditionalInfoAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompanyAdditionalInfo>
          }
          groupBy: {
            args: Prisma.CompanyAdditionalInfoGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyAdditionalInfoGroupByOutputType>[]
          }
          count: {
            args: Prisma.CompanyAdditionalInfoCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyAdditionalInfoCountAggregateOutputType> | number
          }
        }
      }
      User: {
        payload: Prisma.$UserPayload<ExtArgs>
        fields: Prisma.UserFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findFirst: {
            args: Prisma.UserFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          findMany: {
            args: Prisma.UserFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>[]
          }
          create: {
            args: Prisma.UserCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          createMany: {
            args: Prisma.UserCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          update: {
            args: Prisma.UserUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          deleteMany: {
            args: Prisma.UserDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserPayload>
          }
          aggregate: {
            args: Prisma.UserAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser>
          }
          groupBy: {
            args: Prisma.UserGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserCountArgs<ExtArgs>
            result: $Utils.Optional<UserCountAggregateOutputType> | number
          }
        }
      }
      RefreshToken: {
        payload: Prisma.$RefreshTokenPayload<ExtArgs>
        fields: Prisma.RefreshTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.RefreshTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.RefreshTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findFirst: {
            args: Prisma.RefreshTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.RefreshTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          findMany: {
            args: Prisma.RefreshTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>[]
          }
          create: {
            args: Prisma.RefreshTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          createMany: {
            args: Prisma.RefreshTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.RefreshTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          update: {
            args: Prisma.RefreshTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          deleteMany: {
            args: Prisma.RefreshTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.RefreshTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.RefreshTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$RefreshTokenPayload>
          }
          aggregate: {
            args: Prisma.RefreshTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRefreshToken>
          }
          groupBy: {
            args: Prisma.RefreshTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.RefreshTokenCountArgs<ExtArgs>
            result: $Utils.Optional<RefreshTokenCountAggregateOutputType> | number
          }
        }
      }
      SecurityRule: {
        payload: Prisma.$SecurityRulePayload<ExtArgs>
        fields: Prisma.SecurityRuleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SecurityRuleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SecurityRuleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>
          }
          findFirst: {
            args: Prisma.SecurityRuleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SecurityRuleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>
          }
          findMany: {
            args: Prisma.SecurityRuleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>[]
          }
          create: {
            args: Prisma.SecurityRuleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>
          }
          createMany: {
            args: Prisma.SecurityRuleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SecurityRuleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>
          }
          update: {
            args: Prisma.SecurityRuleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>
          }
          deleteMany: {
            args: Prisma.SecurityRuleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SecurityRuleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SecurityRuleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRulePayload>
          }
          aggregate: {
            args: Prisma.SecurityRuleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSecurityRule>
          }
          groupBy: {
            args: Prisma.SecurityRuleGroupByArgs<ExtArgs>
            result: $Utils.Optional<SecurityRuleGroupByOutputType>[]
          }
          count: {
            args: Prisma.SecurityRuleCountArgs<ExtArgs>
            result: $Utils.Optional<SecurityRuleCountAggregateOutputType> | number
          }
        }
      }
      SecurityRuleWiseMenuPermission: {
        payload: Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>
        fields: Prisma.SecurityRuleWiseMenuPermissionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SecurityRuleWiseMenuPermissionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SecurityRuleWiseMenuPermissionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>
          }
          findFirst: {
            args: Prisma.SecurityRuleWiseMenuPermissionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SecurityRuleWiseMenuPermissionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>
          }
          findMany: {
            args: Prisma.SecurityRuleWiseMenuPermissionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>[]
          }
          create: {
            args: Prisma.SecurityRuleWiseMenuPermissionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>
          }
          createMany: {
            args: Prisma.SecurityRuleWiseMenuPermissionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SecurityRuleWiseMenuPermissionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>
          }
          update: {
            args: Prisma.SecurityRuleWiseMenuPermissionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>
          }
          deleteMany: {
            args: Prisma.SecurityRuleWiseMenuPermissionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SecurityRuleWiseMenuPermissionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SecurityRuleWiseMenuPermissionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityRuleWiseMenuPermissionPayload>
          }
          aggregate: {
            args: Prisma.SecurityRuleWiseMenuPermissionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSecurityRuleWiseMenuPermission>
          }
          groupBy: {
            args: Prisma.SecurityRuleWiseMenuPermissionGroupByArgs<ExtArgs>
            result: $Utils.Optional<SecurityRuleWiseMenuPermissionGroupByOutputType>[]
          }
          count: {
            args: Prisma.SecurityRuleWiseMenuPermissionCountArgs<ExtArgs>
            result: $Utils.Optional<SecurityRuleWiseMenuPermissionCountAggregateOutputType> | number
          }
        }
      }
      SecurityGroup: {
        payload: Prisma.$SecurityGroupPayload<ExtArgs>
        fields: Prisma.SecurityGroupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SecurityGroupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SecurityGroupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>
          }
          findFirst: {
            args: Prisma.SecurityGroupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SecurityGroupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>
          }
          findMany: {
            args: Prisma.SecurityGroupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>[]
          }
          create: {
            args: Prisma.SecurityGroupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>
          }
          createMany: {
            args: Prisma.SecurityGroupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SecurityGroupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>
          }
          update: {
            args: Prisma.SecurityGroupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>
          }
          deleteMany: {
            args: Prisma.SecurityGroupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SecurityGroupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SecurityGroupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupPayload>
          }
          aggregate: {
            args: Prisma.SecurityGroupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSecurityGroup>
          }
          groupBy: {
            args: Prisma.SecurityGroupGroupByArgs<ExtArgs>
            result: $Utils.Optional<SecurityGroupGroupByOutputType>[]
          }
          count: {
            args: Prisma.SecurityGroupCountArgs<ExtArgs>
            result: $Utils.Optional<SecurityGroupCountAggregateOutputType> | number
          }
        }
      }
      SecurityGroupRule: {
        payload: Prisma.$SecurityGroupRulePayload<ExtArgs>
        fields: Prisma.SecurityGroupRuleFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SecurityGroupRuleFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SecurityGroupRuleFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>
          }
          findFirst: {
            args: Prisma.SecurityGroupRuleFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SecurityGroupRuleFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>
          }
          findMany: {
            args: Prisma.SecurityGroupRuleFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>[]
          }
          create: {
            args: Prisma.SecurityGroupRuleCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>
          }
          createMany: {
            args: Prisma.SecurityGroupRuleCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SecurityGroupRuleDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>
          }
          update: {
            args: Prisma.SecurityGroupRuleUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>
          }
          deleteMany: {
            args: Prisma.SecurityGroupRuleDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SecurityGroupRuleUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SecurityGroupRuleUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SecurityGroupRulePayload>
          }
          aggregate: {
            args: Prisma.SecurityGroupRuleAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSecurityGroupRule>
          }
          groupBy: {
            args: Prisma.SecurityGroupRuleGroupByArgs<ExtArgs>
            result: $Utils.Optional<SecurityGroupRuleGroupByOutputType>[]
          }
          count: {
            args: Prisma.SecurityGroupRuleCountArgs<ExtArgs>
            result: $Utils.Optional<SecurityGroupRuleCountAggregateOutputType> | number
          }
        }
      }
      UserGroup: {
        payload: Prisma.$UserGroupPayload<ExtArgs>
        fields: Prisma.UserGroupFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserGroupFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserGroupFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>
          }
          findFirst: {
            args: Prisma.UserGroupFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserGroupFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>
          }
          findMany: {
            args: Prisma.UserGroupFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>[]
          }
          create: {
            args: Prisma.UserGroupCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>
          }
          createMany: {
            args: Prisma.UserGroupCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserGroupDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>
          }
          update: {
            args: Prisma.UserGroupUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>
          }
          deleteMany: {
            args: Prisma.UserGroupDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserGroupUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserGroupUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserGroupPayload>
          }
          aggregate: {
            args: Prisma.UserGroupAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserGroup>
          }
          groupBy: {
            args: Prisma.UserGroupGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserGroupGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserGroupCountArgs<ExtArgs>
            result: $Utils.Optional<UserGroupCountAggregateOutputType> | number
          }
        }
      }
      Menu: {
        payload: Prisma.$MenuPayload<ExtArgs>
        fields: Prisma.MenuFieldRefs
        operations: {
          findUnique: {
            args: Prisma.MenuFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.MenuFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>
          }
          findFirst: {
            args: Prisma.MenuFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.MenuFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>
          }
          findMany: {
            args: Prisma.MenuFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>[]
          }
          create: {
            args: Prisma.MenuCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>
          }
          createMany: {
            args: Prisma.MenuCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.MenuDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>
          }
          update: {
            args: Prisma.MenuUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>
          }
          deleteMany: {
            args: Prisma.MenuDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.MenuUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.MenuUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$MenuPayload>
          }
          aggregate: {
            args: Prisma.MenuAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateMenu>
          }
          groupBy: {
            args: Prisma.MenuGroupByArgs<ExtArgs>
            result: $Utils.Optional<MenuGroupByOutputType>[]
          }
          count: {
            args: Prisma.MenuCountArgs<ExtArgs>
            result: $Utils.Optional<MenuCountAggregateOutputType> | number
          }
        }
      }
      Product: {
        payload: Prisma.$ProductPayload<ExtArgs>
        fields: Prisma.ProductFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findFirst: {
            args: Prisma.ProductFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          findMany: {
            args: Prisma.ProductFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>[]
          }
          create: {
            args: Prisma.ProductCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          createMany: {
            args: Prisma.ProductCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProductDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          update: {
            args: Prisma.ProductUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          deleteMany: {
            args: Prisma.ProductDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductPayload>
          }
          aggregate: {
            args: Prisma.ProductAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct>
          }
          groupBy: {
            args: Prisma.ProductGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductCountArgs<ExtArgs>
            result: $Utils.Optional<ProductCountAggregateOutputType> | number
          }
        }
      }
      Category: {
        payload: Prisma.$CategoryPayload<ExtArgs>
        fields: Prisma.CategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findFirst: {
            args: Prisma.CategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          findMany: {
            args: Prisma.CategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>[]
          }
          create: {
            args: Prisma.CategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          createMany: {
            args: Prisma.CategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          update: {
            args: Prisma.CategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          deleteMany: {
            args: Prisma.CategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CategoryPayload>
          }
          aggregate: {
            args: Prisma.CategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCategory>
          }
          groupBy: {
            args: Prisma.CategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<CategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.CategoryCountArgs<ExtArgs>
            result: $Utils.Optional<CategoryCountAggregateOutputType> | number
          }
        }
      }
      Subcategory: {
        payload: Prisma.$SubcategoryPayload<ExtArgs>
        fields: Prisma.SubcategoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SubcategoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubcategoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SubcategoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubcategoryPayload>
          }
          findFirst: {
            args: Prisma.SubcategoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubcategoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SubcategoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubcategoryPayload>
          }
          findMany: {
            args: Prisma.SubcategoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubcategoryPayload>[]
          }
          create: {
            args: Prisma.SubcategoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubcategoryPayload>
          }
          createMany: {
            args: Prisma.SubcategoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SubcategoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubcategoryPayload>
          }
          update: {
            args: Prisma.SubcategoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubcategoryPayload>
          }
          deleteMany: {
            args: Prisma.SubcategoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SubcategoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SubcategoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SubcategoryPayload>
          }
          aggregate: {
            args: Prisma.SubcategoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSubcategory>
          }
          groupBy: {
            args: Prisma.SubcategoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<SubcategoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.SubcategoryCountArgs<ExtArgs>
            result: $Utils.Optional<SubcategoryCountAggregateOutputType> | number
          }
        }
      }
      Brand: {
        payload: Prisma.$BrandPayload<ExtArgs>
        fields: Prisma.BrandFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BrandFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BrandFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          findFirst: {
            args: Prisma.BrandFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BrandFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          findMany: {
            args: Prisma.BrandFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>[]
          }
          create: {
            args: Prisma.BrandCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          createMany: {
            args: Prisma.BrandCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.BrandDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          update: {
            args: Prisma.BrandUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          deleteMany: {
            args: Prisma.BrandDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BrandUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BrandUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BrandPayload>
          }
          aggregate: {
            args: Prisma.BrandAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBrand>
          }
          groupBy: {
            args: Prisma.BrandGroupByArgs<ExtArgs>
            result: $Utils.Optional<BrandGroupByOutputType>[]
          }
          count: {
            args: Prisma.BrandCountArgs<ExtArgs>
            result: $Utils.Optional<BrandCountAggregateOutputType> | number
          }
        }
      }
      ProductAttribute: {
        payload: Prisma.$ProductAttributePayload<ExtArgs>
        fields: Prisma.ProductAttributeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductAttributeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductAttributeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>
          }
          findFirst: {
            args: Prisma.ProductAttributeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductAttributeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>
          }
          findMany: {
            args: Prisma.ProductAttributeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>[]
          }
          create: {
            args: Prisma.ProductAttributeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>
          }
          createMany: {
            args: Prisma.ProductAttributeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProductAttributeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>
          }
          update: {
            args: Prisma.ProductAttributeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>
          }
          deleteMany: {
            args: Prisma.ProductAttributeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductAttributeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductAttributeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductAttributePayload>
          }
          aggregate: {
            args: Prisma.ProductAttributeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductAttribute>
          }
          groupBy: {
            args: Prisma.ProductAttributeGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductAttributeGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductAttributeCountArgs<ExtArgs>
            result: $Utils.Optional<ProductAttributeCountAggregateOutputType> | number
          }
        }
      }
      ProductVariant: {
        payload: Prisma.$ProductVariantPayload<ExtArgs>
        fields: Prisma.ProductVariantFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ProductVariantFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ProductVariantFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          findFirst: {
            args: Prisma.ProductVariantFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ProductVariantFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          findMany: {
            args: Prisma.ProductVariantFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>[]
          }
          create: {
            args: Prisma.ProductVariantCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          createMany: {
            args: Prisma.ProductVariantCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ProductVariantDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          update: {
            args: Prisma.ProductVariantUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          deleteMany: {
            args: Prisma.ProductVariantDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ProductVariantUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ProductVariantUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ProductVariantPayload>
          }
          aggregate: {
            args: Prisma.ProductVariantAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProductVariant>
          }
          groupBy: {
            args: Prisma.ProductVariantGroupByArgs<ExtArgs>
            result: $Utils.Optional<ProductVariantGroupByOutputType>[]
          }
          count: {
            args: Prisma.ProductVariantCountArgs<ExtArgs>
            result: $Utils.Optional<ProductVariantCountAggregateOutputType> | number
          }
        }
      }
      Seller: {
        payload: Prisma.$SellerPayload<ExtArgs>
        fields: Prisma.SellerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SellerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SellerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerPayload>
          }
          findFirst: {
            args: Prisma.SellerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SellerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerPayload>
          }
          findMany: {
            args: Prisma.SellerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerPayload>[]
          }
          create: {
            args: Prisma.SellerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerPayload>
          }
          createMany: {
            args: Prisma.SellerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SellerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerPayload>
          }
          update: {
            args: Prisma.SellerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerPayload>
          }
          deleteMany: {
            args: Prisma.SellerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SellerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SellerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SellerPayload>
          }
          aggregate: {
            args: Prisma.SellerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSeller>
          }
          groupBy: {
            args: Prisma.SellerGroupByArgs<ExtArgs>
            result: $Utils.Optional<SellerGroupByOutputType>[]
          }
          count: {
            args: Prisma.SellerCountArgs<ExtArgs>
            result: $Utils.Optional<SellerCountAggregateOutputType> | number
          }
        }
      }
      Review: {
        payload: Prisma.$ReviewPayload<ExtArgs>
        fields: Prisma.ReviewFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ReviewFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ReviewFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findFirst: {
            args: Prisma.ReviewFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ReviewFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          findMany: {
            args: Prisma.ReviewFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>[]
          }
          create: {
            args: Prisma.ReviewCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          createMany: {
            args: Prisma.ReviewCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ReviewDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          update: {
            args: Prisma.ReviewUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          deleteMany: {
            args: Prisma.ReviewDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ReviewUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ReviewUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ReviewPayload>
          }
          aggregate: {
            args: Prisma.ReviewAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateReview>
          }
          groupBy: {
            args: Prisma.ReviewGroupByArgs<ExtArgs>
            result: $Utils.Optional<ReviewGroupByOutputType>[]
          }
          count: {
            args: Prisma.ReviewCountArgs<ExtArgs>
            result: $Utils.Optional<ReviewCountAggregateOutputType> | number
          }
        }
      }
      Customer: {
        payload: Prisma.$CustomerPayload<ExtArgs>
        fields: Prisma.CustomerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findFirst: {
            args: Prisma.CustomerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          findMany: {
            args: Prisma.CustomerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>[]
          }
          create: {
            args: Prisma.CustomerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          createMany: {
            args: Prisma.CustomerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CustomerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          update: {
            args: Prisma.CustomerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          deleteMany: {
            args: Prisma.CustomerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CustomerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerPayload>
          }
          aggregate: {
            args: Prisma.CustomerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomer>
          }
          groupBy: {
            args: Prisma.CustomerGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerCountAggregateOutputType> | number
          }
        }
      }
      CustomerRefreshToken: {
        payload: Prisma.$CustomerRefreshTokenPayload<ExtArgs>
        fields: Prisma.CustomerRefreshTokenFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerRefreshTokenFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerRefreshTokenPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerRefreshTokenFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerRefreshTokenPayload>
          }
          findFirst: {
            args: Prisma.CustomerRefreshTokenFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerRefreshTokenPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerRefreshTokenFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerRefreshTokenPayload>
          }
          findMany: {
            args: Prisma.CustomerRefreshTokenFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerRefreshTokenPayload>[]
          }
          create: {
            args: Prisma.CustomerRefreshTokenCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerRefreshTokenPayload>
          }
          createMany: {
            args: Prisma.CustomerRefreshTokenCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CustomerRefreshTokenDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerRefreshTokenPayload>
          }
          update: {
            args: Prisma.CustomerRefreshTokenUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerRefreshTokenPayload>
          }
          deleteMany: {
            args: Prisma.CustomerRefreshTokenDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerRefreshTokenUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CustomerRefreshTokenUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerRefreshTokenPayload>
          }
          aggregate: {
            args: Prisma.CustomerRefreshTokenAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomerRefreshToken>
          }
          groupBy: {
            args: Prisma.CustomerRefreshTokenGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerRefreshTokenGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerRefreshTokenCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerRefreshTokenCountAggregateOutputType> | number
          }
        }
      }
      Order: {
        payload: Prisma.$OrderPayload<ExtArgs>
        fields: Prisma.OrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findFirst: {
            args: Prisma.OrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          findMany: {
            args: Prisma.OrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>[]
          }
          create: {
            args: Prisma.OrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          createMany: {
            args: Prisma.OrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.OrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          update: {
            args: Prisma.OrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          deleteMany: {
            args: Prisma.OrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderPayload>
          }
          aggregate: {
            args: Prisma.OrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrder>
          }
          groupBy: {
            args: Prisma.OrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderCountArgs<ExtArgs>
            result: $Utils.Optional<OrderCountAggregateOutputType> | number
          }
        }
      }
      OrderItem: {
        payload: Prisma.$OrderItemPayload<ExtArgs>
        fields: Prisma.OrderItemFieldRefs
        operations: {
          findUnique: {
            args: Prisma.OrderItemFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.OrderItemFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findFirst: {
            args: Prisma.OrderItemFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.OrderItemFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          findMany: {
            args: Prisma.OrderItemFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>[]
          }
          create: {
            args: Prisma.OrderItemCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          createMany: {
            args: Prisma.OrderItemCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.OrderItemDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          update: {
            args: Prisma.OrderItemUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          deleteMany: {
            args: Prisma.OrderItemDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.OrderItemUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.OrderItemUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$OrderItemPayload>
          }
          aggregate: {
            args: Prisma.OrderItemAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateOrderItem>
          }
          groupBy: {
            args: Prisma.OrderItemGroupByArgs<ExtArgs>
            result: $Utils.Optional<OrderItemGroupByOutputType>[]
          }
          count: {
            args: Prisma.OrderItemCountArgs<ExtArgs>
            result: $Utils.Optional<OrderItemCountAggregateOutputType> | number
          }
        }
      }
      StockMovement: {
        payload: Prisma.$StockMovementPayload<ExtArgs>
        fields: Prisma.StockMovementFieldRefs
        operations: {
          findUnique: {
            args: Prisma.StockMovementFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.StockMovementFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>
          }
          findFirst: {
            args: Prisma.StockMovementFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.StockMovementFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>
          }
          findMany: {
            args: Prisma.StockMovementFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>[]
          }
          create: {
            args: Prisma.StockMovementCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>
          }
          createMany: {
            args: Prisma.StockMovementCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.StockMovementDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>
          }
          update: {
            args: Prisma.StockMovementUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>
          }
          deleteMany: {
            args: Prisma.StockMovementDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.StockMovementUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.StockMovementUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$StockMovementPayload>
          }
          aggregate: {
            args: Prisma.StockMovementAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateStockMovement>
          }
          groupBy: {
            args: Prisma.StockMovementGroupByArgs<ExtArgs>
            result: $Utils.Optional<StockMovementGroupByOutputType>[]
          }
          count: {
            args: Prisma.StockMovementCountArgs<ExtArgs>
            result: $Utils.Optional<StockMovementCountAggregateOutputType> | number
          }
        }
      }
      UserSettings: {
        payload: Prisma.$UserSettingsPayload<ExtArgs>
        fields: Prisma.UserSettingsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.UserSettingsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.UserSettingsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          findFirst: {
            args: Prisma.UserSettingsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.UserSettingsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          findMany: {
            args: Prisma.UserSettingsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>[]
          }
          create: {
            args: Prisma.UserSettingsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          createMany: {
            args: Prisma.UserSettingsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.UserSettingsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          update: {
            args: Prisma.UserSettingsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          deleteMany: {
            args: Prisma.UserSettingsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.UserSettingsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.UserSettingsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$UserSettingsPayload>
          }
          aggregate: {
            args: Prisma.UserSettingsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUserSettings>
          }
          groupBy: {
            args: Prisma.UserSettingsGroupByArgs<ExtArgs>
            result: $Utils.Optional<UserSettingsGroupByOutputType>[]
          }
          count: {
            args: Prisma.UserSettingsCountArgs<ExtArgs>
            result: $Utils.Optional<UserSettingsCountAggregateOutputType> | number
          }
        }
      }
      CustomerAddress: {
        payload: Prisma.$CustomerAddressPayload<ExtArgs>
        fields: Prisma.CustomerAddressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CustomerAddressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerAddressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CustomerAddressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerAddressPayload>
          }
          findFirst: {
            args: Prisma.CustomerAddressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerAddressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CustomerAddressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerAddressPayload>
          }
          findMany: {
            args: Prisma.CustomerAddressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerAddressPayload>[]
          }
          create: {
            args: Prisma.CustomerAddressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerAddressPayload>
          }
          createMany: {
            args: Prisma.CustomerAddressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CustomerAddressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerAddressPayload>
          }
          update: {
            args: Prisma.CustomerAddressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerAddressPayload>
          }
          deleteMany: {
            args: Prisma.CustomerAddressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CustomerAddressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CustomerAddressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CustomerAddressPayload>
          }
          aggregate: {
            args: Prisma.CustomerAddressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCustomerAddress>
          }
          groupBy: {
            args: Prisma.CustomerAddressGroupByArgs<ExtArgs>
            result: $Utils.Optional<CustomerAddressGroupByOutputType>[]
          }
          count: {
            args: Prisma.CustomerAddressCountArgs<ExtArgs>
            result: $Utils.Optional<CustomerAddressCountAggregateOutputType> | number
          }
        }
      }
      PendingOrder: {
        payload: Prisma.$PendingOrderPayload<ExtArgs>
        fields: Prisma.PendingOrderFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PendingOrderFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendingOrderPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PendingOrderFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendingOrderPayload>
          }
          findFirst: {
            args: Prisma.PendingOrderFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendingOrderPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PendingOrderFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendingOrderPayload>
          }
          findMany: {
            args: Prisma.PendingOrderFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendingOrderPayload>[]
          }
          create: {
            args: Prisma.PendingOrderCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendingOrderPayload>
          }
          createMany: {
            args: Prisma.PendingOrderCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PendingOrderDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendingOrderPayload>
          }
          update: {
            args: Prisma.PendingOrderUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendingOrderPayload>
          }
          deleteMany: {
            args: Prisma.PendingOrderDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PendingOrderUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PendingOrderUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PendingOrderPayload>
          }
          aggregate: {
            args: Prisma.PendingOrderAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePendingOrder>
          }
          groupBy: {
            args: Prisma.PendingOrderGroupByArgs<ExtArgs>
            result: $Utils.Optional<PendingOrderGroupByOutputType>[]
          }
          count: {
            args: Prisma.PendingOrderCountArgs<ExtArgs>
            result: $Utils.Optional<PendingOrderCountAggregateOutputType> | number
          }
        }
      }
      PaymentTransaction: {
        payload: Prisma.$PaymentTransactionPayload<ExtArgs>
        fields: Prisma.PaymentTransactionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PaymentTransactionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PaymentTransactionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          findFirst: {
            args: Prisma.PaymentTransactionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PaymentTransactionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          findMany: {
            args: Prisma.PaymentTransactionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>[]
          }
          create: {
            args: Prisma.PaymentTransactionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          createMany: {
            args: Prisma.PaymentTransactionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PaymentTransactionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          update: {
            args: Prisma.PaymentTransactionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          deleteMany: {
            args: Prisma.PaymentTransactionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PaymentTransactionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PaymentTransactionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PaymentTransactionPayload>
          }
          aggregate: {
            args: Prisma.PaymentTransactionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePaymentTransaction>
          }
          groupBy: {
            args: Prisma.PaymentTransactionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PaymentTransactionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PaymentTransactionCountArgs<ExtArgs>
            result: $Utils.Optional<PaymentTransactionCountAggregateOutputType> | number
          }
        }
      }
      Wishlist: {
        payload: Prisma.$WishlistPayload<ExtArgs>
        fields: Prisma.WishlistFieldRefs
        operations: {
          findUnique: {
            args: Prisma.WishlistFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WishlistPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.WishlistFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WishlistPayload>
          }
          findFirst: {
            args: Prisma.WishlistFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WishlistPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.WishlistFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WishlistPayload>
          }
          findMany: {
            args: Prisma.WishlistFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WishlistPayload>[]
          }
          create: {
            args: Prisma.WishlistCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WishlistPayload>
          }
          createMany: {
            args: Prisma.WishlistCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.WishlistDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WishlistPayload>
          }
          update: {
            args: Prisma.WishlistUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WishlistPayload>
          }
          deleteMany: {
            args: Prisma.WishlistDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.WishlistUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.WishlistUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$WishlistPayload>
          }
          aggregate: {
            args: Prisma.WishlistAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateWishlist>
          }
          groupBy: {
            args: Prisma.WishlistGroupByArgs<ExtArgs>
            result: $Utils.Optional<WishlistGroupByOutputType>[]
          }
          count: {
            args: Prisma.WishlistCountArgs<ExtArgs>
            result: $Utils.Optional<WishlistCountAggregateOutputType> | number
          }
        }
      }
      Banner: {
        payload: Prisma.$BannerPayload<ExtArgs>
        fields: Prisma.BannerFieldRefs
        operations: {
          findUnique: {
            args: Prisma.BannerFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.BannerFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>
          }
          findFirst: {
            args: Prisma.BannerFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.BannerFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>
          }
          findMany: {
            args: Prisma.BannerFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>[]
          }
          create: {
            args: Prisma.BannerCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>
          }
          createMany: {
            args: Prisma.BannerCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.BannerDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>
          }
          update: {
            args: Prisma.BannerUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>
          }
          deleteMany: {
            args: Prisma.BannerDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.BannerUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.BannerUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$BannerPayload>
          }
          aggregate: {
            args: Prisma.BannerAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBanner>
          }
          groupBy: {
            args: Prisma.BannerGroupByArgs<ExtArgs>
            result: $Utils.Optional<BannerGroupByOutputType>[]
          }
          count: {
            args: Prisma.BannerCountArgs<ExtArgs>
            result: $Utils.Optional<BannerCountAggregateOutputType> | number
          }
        }
      }
      SpecialOffer: {
        payload: Prisma.$SpecialOfferPayload<ExtArgs>
        fields: Prisma.SpecialOfferFieldRefs
        operations: {
          findUnique: {
            args: Prisma.SpecialOfferFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpecialOfferPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.SpecialOfferFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpecialOfferPayload>
          }
          findFirst: {
            args: Prisma.SpecialOfferFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpecialOfferPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.SpecialOfferFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpecialOfferPayload>
          }
          findMany: {
            args: Prisma.SpecialOfferFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpecialOfferPayload>[]
          }
          create: {
            args: Prisma.SpecialOfferCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpecialOfferPayload>
          }
          createMany: {
            args: Prisma.SpecialOfferCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.SpecialOfferDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpecialOfferPayload>
          }
          update: {
            args: Prisma.SpecialOfferUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpecialOfferPayload>
          }
          deleteMany: {
            args: Prisma.SpecialOfferDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.SpecialOfferUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.SpecialOfferUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$SpecialOfferPayload>
          }
          aggregate: {
            args: Prisma.SpecialOfferAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateSpecialOffer>
          }
          groupBy: {
            args: Prisma.SpecialOfferGroupByArgs<ExtArgs>
            result: $Utils.Optional<SpecialOfferGroupByOutputType>[]
          }
          count: {
            args: Prisma.SpecialOfferCountArgs<ExtArgs>
            result: $Utils.Optional<SpecialOfferCountAggregateOutputType> | number
          }
        }
      }
      Coupon: {
        payload: Prisma.$CouponPayload<ExtArgs>
        fields: Prisma.CouponFieldRefs
        operations: {
          findUnique: {
            args: Prisma.CouponFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CouponPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.CouponFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CouponPayload>
          }
          findFirst: {
            args: Prisma.CouponFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CouponPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.CouponFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CouponPayload>
          }
          findMany: {
            args: Prisma.CouponFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CouponPayload>[]
          }
          create: {
            args: Prisma.CouponCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CouponPayload>
          }
          createMany: {
            args: Prisma.CouponCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.CouponDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CouponPayload>
          }
          update: {
            args: Prisma.CouponUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CouponPayload>
          }
          deleteMany: {
            args: Prisma.CouponDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.CouponUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.CouponUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$CouponPayload>
          }
          aggregate: {
            args: Prisma.CouponAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCoupon>
          }
          groupBy: {
            args: Prisma.CouponGroupByArgs<ExtArgs>
            result: $Utils.Optional<CouponGroupByOutputType>[]
          }
          count: {
            args: Prisma.CouponCountArgs<ExtArgs>
            result: $Utils.Optional<CouponCountAggregateOutputType> | number
          }
        }
      }
      ShippingCharge: {
        payload: Prisma.$ShippingChargePayload<ExtArgs>
        fields: Prisma.ShippingChargeFieldRefs
        operations: {
          findUnique: {
            args: Prisma.ShippingChargeFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingChargePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.ShippingChargeFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingChargePayload>
          }
          findFirst: {
            args: Prisma.ShippingChargeFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingChargePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.ShippingChargeFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingChargePayload>
          }
          findMany: {
            args: Prisma.ShippingChargeFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingChargePayload>[]
          }
          create: {
            args: Prisma.ShippingChargeCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingChargePayload>
          }
          createMany: {
            args: Prisma.ShippingChargeCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.ShippingChargeDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingChargePayload>
          }
          update: {
            args: Prisma.ShippingChargeUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingChargePayload>
          }
          deleteMany: {
            args: Prisma.ShippingChargeDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.ShippingChargeUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.ShippingChargeUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$ShippingChargePayload>
          }
          aggregate: {
            args: Prisma.ShippingChargeAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateShippingCharge>
          }
          groupBy: {
            args: Prisma.ShippingChargeGroupByArgs<ExtArgs>
            result: $Utils.Optional<ShippingChargeGroupByOutputType>[]
          }
          count: {
            args: Prisma.ShippingChargeCountArgs<ExtArgs>
            result: $Utils.Optional<ShippingChargeCountAggregateOutputType> | number
          }
        }
      }
      Page: {
        payload: Prisma.$PagePayload<ExtArgs>
        fields: Prisma.PageFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PageFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagePayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PageFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagePayload>
          }
          findFirst: {
            args: Prisma.PageFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagePayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PageFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagePayload>
          }
          findMany: {
            args: Prisma.PageFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagePayload>[]
          }
          create: {
            args: Prisma.PageCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagePayload>
          }
          createMany: {
            args: Prisma.PageCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PageDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagePayload>
          }
          update: {
            args: Prisma.PageUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagePayload>
          }
          deleteMany: {
            args: Prisma.PageDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PageUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PageUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PagePayload>
          }
          aggregate: {
            args: Prisma.PageAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePage>
          }
          groupBy: {
            args: Prisma.PageGroupByArgs<ExtArgs>
            result: $Utils.Optional<PageGroupByOutputType>[]
          }
          count: {
            args: Prisma.PageCountArgs<ExtArgs>
            result: $Utils.Optional<PageCountAggregateOutputType> | number
          }
        }
      }
      PageSection: {
        payload: Prisma.$PageSectionPayload<ExtArgs>
        fields: Prisma.PageSectionFieldRefs
        operations: {
          findUnique: {
            args: Prisma.PageSectionFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PageSectionPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.PageSectionFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PageSectionPayload>
          }
          findFirst: {
            args: Prisma.PageSectionFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PageSectionPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.PageSectionFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PageSectionPayload>
          }
          findMany: {
            args: Prisma.PageSectionFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PageSectionPayload>[]
          }
          create: {
            args: Prisma.PageSectionCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PageSectionPayload>
          }
          createMany: {
            args: Prisma.PageSectionCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.PageSectionDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PageSectionPayload>
          }
          update: {
            args: Prisma.PageSectionUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PageSectionPayload>
          }
          deleteMany: {
            args: Prisma.PageSectionDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.PageSectionUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.PageSectionUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$PageSectionPayload>
          }
          aggregate: {
            args: Prisma.PageSectionAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregatePageSection>
          }
          groupBy: {
            args: Prisma.PageSectionGroupByArgs<ExtArgs>
            result: $Utils.Optional<PageSectionGroupByOutputType>[]
          }
          count: {
            args: Prisma.PageSectionCountArgs<ExtArgs>
            result: $Utils.Optional<PageSectionCountAggregateOutputType> | number
          }
        }
      }
      Faq: {
        payload: Prisma.$FaqPayload<ExtArgs>
        fields: Prisma.FaqFieldRefs
        operations: {
          findUnique: {
            args: Prisma.FaqFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaqPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.FaqFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaqPayload>
          }
          findFirst: {
            args: Prisma.FaqFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaqPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.FaqFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaqPayload>
          }
          findMany: {
            args: Prisma.FaqFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaqPayload>[]
          }
          create: {
            args: Prisma.FaqCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaqPayload>
          }
          createMany: {
            args: Prisma.FaqCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.FaqDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaqPayload>
          }
          update: {
            args: Prisma.FaqUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaqPayload>
          }
          deleteMany: {
            args: Prisma.FaqDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.FaqUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.FaqUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$FaqPayload>
          }
          aggregate: {
            args: Prisma.FaqAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateFaq>
          }
          groupBy: {
            args: Prisma.FaqGroupByArgs<ExtArgs>
            result: $Utils.Optional<FaqGroupByOutputType>[]
          }
          count: {
            args: Prisma.FaqCountArgs<ExtArgs>
            result: $Utils.Optional<FaqCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CompanyCountOutputType
   */

  export type CompanyCountOutputType = {
    CompanyAdditionalInfo: number
  }

  export type CompanyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    CompanyAdditionalInfo?: boolean | CompanyCountOutputTypeCountCompanyAdditionalInfoArgs
  }

  // Custom InputTypes
  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyCountOutputType
     */
    select?: CompanyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountCompanyAdditionalInfoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyAdditionalInfoWhereInput
  }


  /**
   * Count Type UserCountOutputType
   */

  export type UserCountOutputType = {
    UserGroups: number
    UserSettings: number
    RefreshToken: number
  }

  export type UserCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UserGroups?: boolean | UserCountOutputTypeCountUserGroupsArgs
    UserSettings?: boolean | UserCountOutputTypeCountUserSettingsArgs
    RefreshToken?: boolean | UserCountOutputTypeCountRefreshTokenArgs
  }

  // Custom InputTypes
  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserCountOutputType
     */
    select?: UserCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserGroupWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountUserSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSettingsWhereInput
  }

  /**
   * UserCountOutputType without action
   */
  export type UserCountOutputTypeCountRefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
  }


  /**
   * Count Type SecurityRuleCountOutputType
   */

  export type SecurityRuleCountOutputType = {
    SecurityRuleWiseMenuPermissions: number
    SecurityGroupRules: number
  }

  export type SecurityRuleCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SecurityRuleWiseMenuPermissions?: boolean | SecurityRuleCountOutputTypeCountSecurityRuleWiseMenuPermissionsArgs
    SecurityGroupRules?: boolean | SecurityRuleCountOutputTypeCountSecurityGroupRulesArgs
  }

  // Custom InputTypes
  /**
   * SecurityRuleCountOutputType without action
   */
  export type SecurityRuleCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleCountOutputType
     */
    select?: SecurityRuleCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SecurityRuleCountOutputType without action
   */
  export type SecurityRuleCountOutputTypeCountSecurityRuleWiseMenuPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityRuleWiseMenuPermissionWhereInput
  }

  /**
   * SecurityRuleCountOutputType without action
   */
  export type SecurityRuleCountOutputTypeCountSecurityGroupRulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityGroupRuleWhereInput
  }


  /**
   * Count Type SecurityGroupCountOutputType
   */

  export type SecurityGroupCountOutputType = {
    SecurityGroupRules: number
    UserGroups: number
  }

  export type SecurityGroupCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SecurityGroupRules?: boolean | SecurityGroupCountOutputTypeCountSecurityGroupRulesArgs
    UserGroups?: boolean | SecurityGroupCountOutputTypeCountUserGroupsArgs
  }

  // Custom InputTypes
  /**
   * SecurityGroupCountOutputType without action
   */
  export type SecurityGroupCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupCountOutputType
     */
    select?: SecurityGroupCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SecurityGroupCountOutputType without action
   */
  export type SecurityGroupCountOutputTypeCountSecurityGroupRulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityGroupRuleWhereInput
  }

  /**
   * SecurityGroupCountOutputType without action
   */
  export type SecurityGroupCountOutputTypeCountUserGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserGroupWhereInput
  }


  /**
   * Count Type ProductCountOutputType
   */

  export type ProductCountOutputType = {
    attributes: number
    variants: number
    reviews: number
    Wishlist: number
  }

  export type ProductCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    attributes?: boolean | ProductCountOutputTypeCountAttributesArgs
    variants?: boolean | ProductCountOutputTypeCountVariantsArgs
    reviews?: boolean | ProductCountOutputTypeCountReviewsArgs
    Wishlist?: boolean | ProductCountOutputTypeCountWishlistArgs
  }

  // Custom InputTypes
  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductCountOutputType
     */
    select?: ProductCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountAttributesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductAttributeWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountVariantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductVariantWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountReviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
  }

  /**
   * ProductCountOutputType without action
   */
  export type ProductCountOutputTypeCountWishlistArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WishlistWhereInput
  }


  /**
   * Count Type CategoryCountOutputType
   */

  export type CategoryCountOutputType = {
    subcategories: number
    products: number
  }

  export type CategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subcategories?: boolean | CategoryCountOutputTypeCountSubcategoriesArgs
    products?: boolean | CategoryCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CategoryCountOutputType
     */
    select?: CategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountSubcategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubcategoryWhereInput
  }

  /**
   * CategoryCountOutputType without action
   */
  export type CategoryCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type SubcategoryCountOutputType
   */

  export type SubcategoryCountOutputType = {
    products: number
  }

  export type SubcategoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | SubcategoryCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * SubcategoryCountOutputType without action
   */
  export type SubcategoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SubcategoryCountOutputType
     */
    select?: SubcategoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SubcategoryCountOutputType without action
   */
  export type SubcategoryCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type BrandCountOutputType
   */

  export type BrandCountOutputType = {
    products: number
  }

  export type BrandCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | BrandCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the BrandCountOutputType
     */
    select?: BrandCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * BrandCountOutputType without action
   */
  export type BrandCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type SellerCountOutputType
   */

  export type SellerCountOutputType = {
    products: number
    companies: number
  }

  export type SellerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | SellerCountOutputTypeCountProductsArgs
    companies?: boolean | SellerCountOutputTypeCountCompaniesArgs
  }

  // Custom InputTypes
  /**
   * SellerCountOutputType without action
   */
  export type SellerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SellerCountOutputType
     */
    select?: SellerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SellerCountOutputType without action
   */
  export type SellerCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }

  /**
   * SellerCountOutputType without action
   */
  export type SellerCountOutputTypeCountCompaniesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
  }


  /**
   * Count Type CustomerCountOutputType
   */

  export type CustomerCountOutputType = {
    orders: number
    refresh_tokens: number
    addresses: number
    Wishlist: number
    PendingOrder: number
  }

  export type CustomerCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | CustomerCountOutputTypeCountOrdersArgs
    refresh_tokens?: boolean | CustomerCountOutputTypeCountRefresh_tokensArgs
    addresses?: boolean | CustomerCountOutputTypeCountAddressesArgs
    Wishlist?: boolean | CustomerCountOutputTypeCountWishlistArgs
    PendingOrder?: boolean | CustomerCountOutputTypeCountPendingOrderArgs
  }

  // Custom InputTypes
  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerCountOutputType
     */
    select?: CustomerCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountOrdersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountRefresh_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerRefreshTokenWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountAddressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerAddressWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountWishlistArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WishlistWhereInput
  }

  /**
   * CustomerCountOutputType without action
   */
  export type CustomerCountOutputTypeCountPendingOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PendingOrderWhereInput
  }


  /**
   * Count Type OrderCountOutputType
   */

  export type OrderCountOutputType = {
    orderItems: number
    PaymentTransaction: number
  }

  export type OrderCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orderItems?: boolean | OrderCountOutputTypeCountOrderItemsArgs
    PaymentTransaction?: boolean | OrderCountOutputTypeCountPaymentTransactionArgs
  }

  // Custom InputTypes
  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderCountOutputType
     */
    select?: OrderCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountOrderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
  }

  /**
   * OrderCountOutputType without action
   */
  export type OrderCountOutputTypeCountPaymentTransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentTransactionWhereInput
  }


  /**
   * Count Type SpecialOfferCountOutputType
   */

  export type SpecialOfferCountOutputType = {
    products: number
  }

  export type SpecialOfferCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | SpecialOfferCountOutputTypeCountProductsArgs
  }

  // Custom InputTypes
  /**
   * SpecialOfferCountOutputType without action
   */
  export type SpecialOfferCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialOfferCountOutputType
     */
    select?: SpecialOfferCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * SpecialOfferCountOutputType without action
   */
  export type SpecialOfferCountOutputTypeCountProductsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
  }


  /**
   * Count Type CouponCountOutputType
   */

  export type CouponCountOutputType = {
    Order: number
    PendingOrder: number
  }

  export type CouponCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Order?: boolean | CouponCountOutputTypeCountOrderArgs
    PendingOrder?: boolean | CouponCountOutputTypeCountPendingOrderArgs
  }

  // Custom InputTypes
  /**
   * CouponCountOutputType without action
   */
  export type CouponCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CouponCountOutputType
     */
    select?: CouponCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CouponCountOutputType without action
   */
  export type CouponCountOutputTypeCountOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
  }

  /**
   * CouponCountOutputType without action
   */
  export type CouponCountOutputTypeCountPendingOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PendingOrderWhereInput
  }


  /**
   * Count Type PageCountOutputType
   */

  export type PageCountOutputType = {
    sections: number
  }

  export type PageCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sections?: boolean | PageCountOutputTypeCountSectionsArgs
  }

  // Custom InputTypes
  /**
   * PageCountOutputType without action
   */
  export type PageCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PageCountOutputType
     */
    select?: PageCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * PageCountOutputType without action
   */
  export type PageCountOutputTypeCountSectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PageSectionWhereInput
  }


  /**
   * Models
   */

  /**
   * Model ApplicationLog
   */

  export type AggregateApplicationLog = {
    _count: ApplicationLogCountAggregateOutputType | null
    _min: ApplicationLogMinAggregateOutputType | null
    _max: ApplicationLogMaxAggregateOutputType | null
  }

  export type ApplicationLogMinAggregateOutputType = {
    id: string | null
    level: string | null
    message: string | null
    timestamp: Date | null
  }

  export type ApplicationLogMaxAggregateOutputType = {
    id: string | null
    level: string | null
    message: string | null
    timestamp: Date | null
  }

  export type ApplicationLogCountAggregateOutputType = {
    id: number
    level: number
    message: number
    meta: number
    timestamp: number
    _all: number
  }


  export type ApplicationLogMinAggregateInputType = {
    id?: true
    level?: true
    message?: true
    timestamp?: true
  }

  export type ApplicationLogMaxAggregateInputType = {
    id?: true
    level?: true
    message?: true
    timestamp?: true
  }

  export type ApplicationLogCountAggregateInputType = {
    id?: true
    level?: true
    message?: true
    meta?: true
    timestamp?: true
    _all?: true
  }

  export type ApplicationLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApplicationLog to aggregate.
     */
    where?: ApplicationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationLogs to fetch.
     */
    orderBy?: ApplicationLogOrderByWithRelationInput | ApplicationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ApplicationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ApplicationLogs
    **/
    _count?: true | ApplicationLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ApplicationLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ApplicationLogMaxAggregateInputType
  }

  export type GetApplicationLogAggregateType<T extends ApplicationLogAggregateArgs> = {
        [P in keyof T & keyof AggregateApplicationLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateApplicationLog[P]>
      : GetScalarType<T[P], AggregateApplicationLog[P]>
  }




  export type ApplicationLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ApplicationLogWhereInput
    orderBy?: ApplicationLogOrderByWithAggregationInput | ApplicationLogOrderByWithAggregationInput[]
    by: ApplicationLogScalarFieldEnum[] | ApplicationLogScalarFieldEnum
    having?: ApplicationLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ApplicationLogCountAggregateInputType | true
    _min?: ApplicationLogMinAggregateInputType
    _max?: ApplicationLogMaxAggregateInputType
  }

  export type ApplicationLogGroupByOutputType = {
    id: string
    level: string
    message: string
    meta: JsonValue
    timestamp: Date
    _count: ApplicationLogCountAggregateOutputType | null
    _min: ApplicationLogMinAggregateOutputType | null
    _max: ApplicationLogMaxAggregateOutputType | null
  }

  type GetApplicationLogGroupByPayload<T extends ApplicationLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ApplicationLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ApplicationLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ApplicationLogGroupByOutputType[P]>
            : GetScalarType<T[P], ApplicationLogGroupByOutputType[P]>
        }
      >
    >


  export type ApplicationLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    level?: boolean
    message?: boolean
    meta?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["applicationLog"]>


  export type ApplicationLogSelectScalar = {
    id?: boolean
    level?: boolean
    message?: boolean
    meta?: boolean
    timestamp?: boolean
  }


  export type $ApplicationLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ApplicationLog"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      level: string
      message: string
      meta: Prisma.JsonValue
      timestamp: Date
    }, ExtArgs["result"]["applicationLog"]>
    composites: {}
  }

  type ApplicationLogGetPayload<S extends boolean | null | undefined | ApplicationLogDefaultArgs> = $Result.GetResult<Prisma.$ApplicationLogPayload, S>

  type ApplicationLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ApplicationLogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ApplicationLogCountAggregateInputType | true
    }

  export interface ApplicationLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ApplicationLog'], meta: { name: 'ApplicationLog' } }
    /**
     * Find zero or one ApplicationLog that matches the filter.
     * @param {ApplicationLogFindUniqueArgs} args - Arguments to find a ApplicationLog
     * @example
     * // Get one ApplicationLog
     * const applicationLog = await prisma.applicationLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ApplicationLogFindUniqueArgs>(args: SelectSubset<T, ApplicationLogFindUniqueArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ApplicationLog that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ApplicationLogFindUniqueOrThrowArgs} args - Arguments to find a ApplicationLog
     * @example
     * // Get one ApplicationLog
     * const applicationLog = await prisma.applicationLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ApplicationLogFindUniqueOrThrowArgs>(args: SelectSubset<T, ApplicationLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ApplicationLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogFindFirstArgs} args - Arguments to find a ApplicationLog
     * @example
     * // Get one ApplicationLog
     * const applicationLog = await prisma.applicationLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ApplicationLogFindFirstArgs>(args?: SelectSubset<T, ApplicationLogFindFirstArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ApplicationLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogFindFirstOrThrowArgs} args - Arguments to find a ApplicationLog
     * @example
     * // Get one ApplicationLog
     * const applicationLog = await prisma.applicationLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ApplicationLogFindFirstOrThrowArgs>(args?: SelectSubset<T, ApplicationLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ApplicationLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ApplicationLogs
     * const applicationLogs = await prisma.applicationLog.findMany()
     * 
     * // Get first 10 ApplicationLogs
     * const applicationLogs = await prisma.applicationLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const applicationLogWithIdOnly = await prisma.applicationLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ApplicationLogFindManyArgs>(args?: SelectSubset<T, ApplicationLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ApplicationLog.
     * @param {ApplicationLogCreateArgs} args - Arguments to create a ApplicationLog.
     * @example
     * // Create one ApplicationLog
     * const ApplicationLog = await prisma.applicationLog.create({
     *   data: {
     *     // ... data to create a ApplicationLog
     *   }
     * })
     * 
     */
    create<T extends ApplicationLogCreateArgs>(args: SelectSubset<T, ApplicationLogCreateArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ApplicationLogs.
     * @param {ApplicationLogCreateManyArgs} args - Arguments to create many ApplicationLogs.
     * @example
     * // Create many ApplicationLogs
     * const applicationLog = await prisma.applicationLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ApplicationLogCreateManyArgs>(args?: SelectSubset<T, ApplicationLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ApplicationLog.
     * @param {ApplicationLogDeleteArgs} args - Arguments to delete one ApplicationLog.
     * @example
     * // Delete one ApplicationLog
     * const ApplicationLog = await prisma.applicationLog.delete({
     *   where: {
     *     // ... filter to delete one ApplicationLog
     *   }
     * })
     * 
     */
    delete<T extends ApplicationLogDeleteArgs>(args: SelectSubset<T, ApplicationLogDeleteArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ApplicationLog.
     * @param {ApplicationLogUpdateArgs} args - Arguments to update one ApplicationLog.
     * @example
     * // Update one ApplicationLog
     * const applicationLog = await prisma.applicationLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ApplicationLogUpdateArgs>(args: SelectSubset<T, ApplicationLogUpdateArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ApplicationLogs.
     * @param {ApplicationLogDeleteManyArgs} args - Arguments to filter ApplicationLogs to delete.
     * @example
     * // Delete a few ApplicationLogs
     * const { count } = await prisma.applicationLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ApplicationLogDeleteManyArgs>(args?: SelectSubset<T, ApplicationLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ApplicationLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ApplicationLogs
     * const applicationLog = await prisma.applicationLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ApplicationLogUpdateManyArgs>(args: SelectSubset<T, ApplicationLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ApplicationLog.
     * @param {ApplicationLogUpsertArgs} args - Arguments to update or create a ApplicationLog.
     * @example
     * // Update or create a ApplicationLog
     * const applicationLog = await prisma.applicationLog.upsert({
     *   create: {
     *     // ... data to create a ApplicationLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ApplicationLog we want to update
     *   }
     * })
     */
    upsert<T extends ApplicationLogUpsertArgs>(args: SelectSubset<T, ApplicationLogUpsertArgs<ExtArgs>>): Prisma__ApplicationLogClient<$Result.GetResult<Prisma.$ApplicationLogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ApplicationLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogCountArgs} args - Arguments to filter ApplicationLogs to count.
     * @example
     * // Count the number of ApplicationLogs
     * const count = await prisma.applicationLog.count({
     *   where: {
     *     // ... the filter for the ApplicationLogs we want to count
     *   }
     * })
    **/
    count<T extends ApplicationLogCountArgs>(
      args?: Subset<T, ApplicationLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ApplicationLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ApplicationLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ApplicationLogAggregateArgs>(args: Subset<T, ApplicationLogAggregateArgs>): Prisma.PrismaPromise<GetApplicationLogAggregateType<T>>

    /**
     * Group by ApplicationLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ApplicationLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ApplicationLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ApplicationLogGroupByArgs['orderBy'] }
        : { orderBy?: ApplicationLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ApplicationLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetApplicationLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ApplicationLog model
   */
  readonly fields: ApplicationLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ApplicationLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ApplicationLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ApplicationLog model
   */ 
  interface ApplicationLogFieldRefs {
    readonly id: FieldRef<"ApplicationLog", 'String'>
    readonly level: FieldRef<"ApplicationLog", 'String'>
    readonly message: FieldRef<"ApplicationLog", 'String'>
    readonly meta: FieldRef<"ApplicationLog", 'Json'>
    readonly timestamp: FieldRef<"ApplicationLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * ApplicationLog findUnique
   */
  export type ApplicationLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * Filter, which ApplicationLog to fetch.
     */
    where: ApplicationLogWhereUniqueInput
  }

  /**
   * ApplicationLog findUniqueOrThrow
   */
  export type ApplicationLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * Filter, which ApplicationLog to fetch.
     */
    where: ApplicationLogWhereUniqueInput
  }

  /**
   * ApplicationLog findFirst
   */
  export type ApplicationLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * Filter, which ApplicationLog to fetch.
     */
    where?: ApplicationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationLogs to fetch.
     */
    orderBy?: ApplicationLogOrderByWithRelationInput | ApplicationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApplicationLogs.
     */
    cursor?: ApplicationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApplicationLogs.
     */
    distinct?: ApplicationLogScalarFieldEnum | ApplicationLogScalarFieldEnum[]
  }

  /**
   * ApplicationLog findFirstOrThrow
   */
  export type ApplicationLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * Filter, which ApplicationLog to fetch.
     */
    where?: ApplicationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationLogs to fetch.
     */
    orderBy?: ApplicationLogOrderByWithRelationInput | ApplicationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ApplicationLogs.
     */
    cursor?: ApplicationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ApplicationLogs.
     */
    distinct?: ApplicationLogScalarFieldEnum | ApplicationLogScalarFieldEnum[]
  }

  /**
   * ApplicationLog findMany
   */
  export type ApplicationLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * Filter, which ApplicationLogs to fetch.
     */
    where?: ApplicationLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ApplicationLogs to fetch.
     */
    orderBy?: ApplicationLogOrderByWithRelationInput | ApplicationLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ApplicationLogs.
     */
    cursor?: ApplicationLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ApplicationLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ApplicationLogs.
     */
    skip?: number
    distinct?: ApplicationLogScalarFieldEnum | ApplicationLogScalarFieldEnum[]
  }

  /**
   * ApplicationLog create
   */
  export type ApplicationLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * The data needed to create a ApplicationLog.
     */
    data: XOR<ApplicationLogCreateInput, ApplicationLogUncheckedCreateInput>
  }

  /**
   * ApplicationLog createMany
   */
  export type ApplicationLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ApplicationLogs.
     */
    data: ApplicationLogCreateManyInput | ApplicationLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ApplicationLog update
   */
  export type ApplicationLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * The data needed to update a ApplicationLog.
     */
    data: XOR<ApplicationLogUpdateInput, ApplicationLogUncheckedUpdateInput>
    /**
     * Choose, which ApplicationLog to update.
     */
    where: ApplicationLogWhereUniqueInput
  }

  /**
   * ApplicationLog updateMany
   */
  export type ApplicationLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ApplicationLogs.
     */
    data: XOR<ApplicationLogUpdateManyMutationInput, ApplicationLogUncheckedUpdateManyInput>
    /**
     * Filter which ApplicationLogs to update
     */
    where?: ApplicationLogWhereInput
  }

  /**
   * ApplicationLog upsert
   */
  export type ApplicationLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * The filter to search for the ApplicationLog to update in case it exists.
     */
    where: ApplicationLogWhereUniqueInput
    /**
     * In case the ApplicationLog found by the `where` argument doesn't exist, create a new ApplicationLog with this data.
     */
    create: XOR<ApplicationLogCreateInput, ApplicationLogUncheckedCreateInput>
    /**
     * In case the ApplicationLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ApplicationLogUpdateInput, ApplicationLogUncheckedUpdateInput>
  }

  /**
   * ApplicationLog delete
   */
  export type ApplicationLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
    /**
     * Filter which ApplicationLog to delete.
     */
    where: ApplicationLogWhereUniqueInput
  }

  /**
   * ApplicationLog deleteMany
   */
  export type ApplicationLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ApplicationLogs to delete
     */
    where?: ApplicationLogWhereInput
  }

  /**
   * ApplicationLog without action
   */
  export type ApplicationLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ApplicationLog
     */
    select?: ApplicationLogSelect<ExtArgs> | null
  }


  /**
   * Model AuditLog
   */

  export type AggregateAuditLog = {
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  export type AuditLogMinAggregateOutputType = {
    id: string | null
    table_name: string | null
    record_id: string | null
    action: string | null
    changed_by: string | null
    timestamp: Date | null
  }

  export type AuditLogMaxAggregateOutputType = {
    id: string | null
    table_name: string | null
    record_id: string | null
    action: string | null
    changed_by: string | null
    timestamp: Date | null
  }

  export type AuditLogCountAggregateOutputType = {
    id: number
    table_name: number
    record_id: number
    action: number
    previous_data: number
    new_data: number
    changed_by: number
    timestamp: number
    _all: number
  }


  export type AuditLogMinAggregateInputType = {
    id?: true
    table_name?: true
    record_id?: true
    action?: true
    changed_by?: true
    timestamp?: true
  }

  export type AuditLogMaxAggregateInputType = {
    id?: true
    table_name?: true
    record_id?: true
    action?: true
    changed_by?: true
    timestamp?: true
  }

  export type AuditLogCountAggregateInputType = {
    id?: true
    table_name?: true
    record_id?: true
    action?: true
    previous_data?: true
    new_data?: true
    changed_by?: true
    timestamp?: true
    _all?: true
  }

  export type AuditLogAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLog to aggregate.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned AuditLogs
    **/
    _count?: true | AuditLogCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: AuditLogMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: AuditLogMaxAggregateInputType
  }

  export type GetAuditLogAggregateType<T extends AuditLogAggregateArgs> = {
        [P in keyof T & keyof AggregateAuditLog]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateAuditLog[P]>
      : GetScalarType<T[P], AggregateAuditLog[P]>
  }




  export type AuditLogGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: AuditLogWhereInput
    orderBy?: AuditLogOrderByWithAggregationInput | AuditLogOrderByWithAggregationInput[]
    by: AuditLogScalarFieldEnum[] | AuditLogScalarFieldEnum
    having?: AuditLogScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: AuditLogCountAggregateInputType | true
    _min?: AuditLogMinAggregateInputType
    _max?: AuditLogMaxAggregateInputType
  }

  export type AuditLogGroupByOutputType = {
    id: string
    table_name: string
    record_id: string
    action: string
    previous_data: JsonValue
    new_data: JsonValue
    changed_by: string
    timestamp: Date
    _count: AuditLogCountAggregateOutputType | null
    _min: AuditLogMinAggregateOutputType | null
    _max: AuditLogMaxAggregateOutputType | null
  }

  type GetAuditLogGroupByPayload<T extends AuditLogGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<AuditLogGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof AuditLogGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
            : GetScalarType<T[P], AuditLogGroupByOutputType[P]>
        }
      >
    >


  export type AuditLogSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    table_name?: boolean
    record_id?: boolean
    action?: boolean
    previous_data?: boolean
    new_data?: boolean
    changed_by?: boolean
    timestamp?: boolean
  }, ExtArgs["result"]["auditLog"]>


  export type AuditLogSelectScalar = {
    id?: boolean
    table_name?: boolean
    record_id?: boolean
    action?: boolean
    previous_data?: boolean
    new_data?: boolean
    changed_by?: boolean
    timestamp?: boolean
  }


  export type $AuditLogPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "AuditLog"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      table_name: string
      record_id: string
      action: string
      previous_data: Prisma.JsonValue
      new_data: Prisma.JsonValue
      changed_by: string
      timestamp: Date
    }, ExtArgs["result"]["auditLog"]>
    composites: {}
  }

  type AuditLogGetPayload<S extends boolean | null | undefined | AuditLogDefaultArgs> = $Result.GetResult<Prisma.$AuditLogPayload, S>

  type AuditLogCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<AuditLogFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: AuditLogCountAggregateInputType | true
    }

  export interface AuditLogDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['AuditLog'], meta: { name: 'AuditLog' } }
    /**
     * Find zero or one AuditLog that matches the filter.
     * @param {AuditLogFindUniqueArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends AuditLogFindUniqueArgs>(args: SelectSubset<T, AuditLogFindUniqueArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one AuditLog that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {AuditLogFindUniqueOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends AuditLogFindUniqueOrThrowArgs>(args: SelectSubset<T, AuditLogFindUniqueOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first AuditLog that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends AuditLogFindFirstArgs>(args?: SelectSubset<T, AuditLogFindFirstArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first AuditLog that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindFirstOrThrowArgs} args - Arguments to find a AuditLog
     * @example
     * // Get one AuditLog
     * const auditLog = await prisma.auditLog.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends AuditLogFindFirstOrThrowArgs>(args?: SelectSubset<T, AuditLogFindFirstOrThrowArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more AuditLogs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all AuditLogs
     * const auditLogs = await prisma.auditLog.findMany()
     * 
     * // Get first 10 AuditLogs
     * const auditLogs = await prisma.auditLog.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const auditLogWithIdOnly = await prisma.auditLog.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends AuditLogFindManyArgs>(args?: SelectSubset<T, AuditLogFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a AuditLog.
     * @param {AuditLogCreateArgs} args - Arguments to create a AuditLog.
     * @example
     * // Create one AuditLog
     * const AuditLog = await prisma.auditLog.create({
     *   data: {
     *     // ... data to create a AuditLog
     *   }
     * })
     * 
     */
    create<T extends AuditLogCreateArgs>(args: SelectSubset<T, AuditLogCreateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many AuditLogs.
     * @param {AuditLogCreateManyArgs} args - Arguments to create many AuditLogs.
     * @example
     * // Create many AuditLogs
     * const auditLog = await prisma.auditLog.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends AuditLogCreateManyArgs>(args?: SelectSubset<T, AuditLogCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a AuditLog.
     * @param {AuditLogDeleteArgs} args - Arguments to delete one AuditLog.
     * @example
     * // Delete one AuditLog
     * const AuditLog = await prisma.auditLog.delete({
     *   where: {
     *     // ... filter to delete one AuditLog
     *   }
     * })
     * 
     */
    delete<T extends AuditLogDeleteArgs>(args: SelectSubset<T, AuditLogDeleteArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one AuditLog.
     * @param {AuditLogUpdateArgs} args - Arguments to update one AuditLog.
     * @example
     * // Update one AuditLog
     * const auditLog = await prisma.auditLog.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends AuditLogUpdateArgs>(args: SelectSubset<T, AuditLogUpdateArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more AuditLogs.
     * @param {AuditLogDeleteManyArgs} args - Arguments to filter AuditLogs to delete.
     * @example
     * // Delete a few AuditLogs
     * const { count } = await prisma.auditLog.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends AuditLogDeleteManyArgs>(args?: SelectSubset<T, AuditLogDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many AuditLogs
     * const auditLog = await prisma.auditLog.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends AuditLogUpdateManyArgs>(args: SelectSubset<T, AuditLogUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one AuditLog.
     * @param {AuditLogUpsertArgs} args - Arguments to update or create a AuditLog.
     * @example
     * // Update or create a AuditLog
     * const auditLog = await prisma.auditLog.upsert({
     *   create: {
     *     // ... data to create a AuditLog
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the AuditLog we want to update
     *   }
     * })
     */
    upsert<T extends AuditLogUpsertArgs>(args: SelectSubset<T, AuditLogUpsertArgs<ExtArgs>>): Prisma__AuditLogClient<$Result.GetResult<Prisma.$AuditLogPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of AuditLogs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogCountArgs} args - Arguments to filter AuditLogs to count.
     * @example
     * // Count the number of AuditLogs
     * const count = await prisma.auditLog.count({
     *   where: {
     *     // ... the filter for the AuditLogs we want to count
     *   }
     * })
    **/
    count<T extends AuditLogCountArgs>(
      args?: Subset<T, AuditLogCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], AuditLogCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends AuditLogAggregateArgs>(args: Subset<T, AuditLogAggregateArgs>): Prisma.PrismaPromise<GetAuditLogAggregateType<T>>

    /**
     * Group by AuditLog.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {AuditLogGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends AuditLogGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: AuditLogGroupByArgs['orderBy'] }
        : { orderBy?: AuditLogGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, AuditLogGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetAuditLogGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the AuditLog model
   */
  readonly fields: AuditLogFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for AuditLog.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__AuditLogClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the AuditLog model
   */ 
  interface AuditLogFieldRefs {
    readonly id: FieldRef<"AuditLog", 'String'>
    readonly table_name: FieldRef<"AuditLog", 'String'>
    readonly record_id: FieldRef<"AuditLog", 'String'>
    readonly action: FieldRef<"AuditLog", 'String'>
    readonly previous_data: FieldRef<"AuditLog", 'Json'>
    readonly new_data: FieldRef<"AuditLog", 'Json'>
    readonly changed_by: FieldRef<"AuditLog", 'String'>
    readonly timestamp: FieldRef<"AuditLog", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * AuditLog findUnique
   */
  export type AuditLogFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findUniqueOrThrow
   */
  export type AuditLogFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog findFirst
   */
  export type AuditLogFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findFirstOrThrow
   */
  export type AuditLogFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLog to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of AuditLogs.
     */
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog findMany
   */
  export type AuditLogFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter, which AuditLogs to fetch.
     */
    where?: AuditLogWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of AuditLogs to fetch.
     */
    orderBy?: AuditLogOrderByWithRelationInput | AuditLogOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing AuditLogs.
     */
    cursor?: AuditLogWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` AuditLogs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` AuditLogs.
     */
    skip?: number
    distinct?: AuditLogScalarFieldEnum | AuditLogScalarFieldEnum[]
  }

  /**
   * AuditLog create
   */
  export type AuditLogCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * The data needed to create a AuditLog.
     */
    data: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
  }

  /**
   * AuditLog createMany
   */
  export type AuditLogCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many AuditLogs.
     */
    data: AuditLogCreateManyInput | AuditLogCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * AuditLog update
   */
  export type AuditLogUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * The data needed to update a AuditLog.
     */
    data: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
    /**
     * Choose, which AuditLog to update.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog updateMany
   */
  export type AuditLogUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update AuditLogs.
     */
    data: XOR<AuditLogUpdateManyMutationInput, AuditLogUncheckedUpdateManyInput>
    /**
     * Filter which AuditLogs to update
     */
    where?: AuditLogWhereInput
  }

  /**
   * AuditLog upsert
   */
  export type AuditLogUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * The filter to search for the AuditLog to update in case it exists.
     */
    where: AuditLogWhereUniqueInput
    /**
     * In case the AuditLog found by the `where` argument doesn't exist, create a new AuditLog with this data.
     */
    create: XOR<AuditLogCreateInput, AuditLogUncheckedCreateInput>
    /**
     * In case the AuditLog was found with the provided `where` argument, update it with this data.
     */
    update: XOR<AuditLogUpdateInput, AuditLogUncheckedUpdateInput>
  }

  /**
   * AuditLog delete
   */
  export type AuditLogDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
    /**
     * Filter which AuditLog to delete.
     */
    where: AuditLogWhereUniqueInput
  }

  /**
   * AuditLog deleteMany
   */
  export type AuditLogDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which AuditLogs to delete
     */
    where?: AuditLogWhereInput
  }

  /**
   * AuditLog without action
   */
  export type AuditLogDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the AuditLog
     */
    select?: AuditLogSelect<ExtArgs> | null
  }


  /**
   * Model Company
   */

  export type AggregateCompany = {
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  export type CompanyAvgAggregateOutputType = {
    number_of_employees: number | null
    annual_revenue: Decimal | null
  }

  export type CompanySumAggregateOutputType = {
    number_of_employees: number | null
    annual_revenue: Decimal | null
  }

  export type CompanyMinAggregateOutputType = {
    id: string | null
    company_name: string | null
    company_short_name: string | null
    company_code: string | null
    registration_number: string | null
    tax_id: string | null
    address: string | null
    city: string | null
    state: string | null
    country: string | null
    postal_code: string | null
    phone: string | null
    email: string | null
    website: string | null
    is_seller: boolean | null
    is_verified: boolean | null
    seller_id: string | null
    industry: string | null
    number_of_employees: number | null
    annual_revenue: Decimal | null
    description: string | null
    is_active: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
  }

  export type CompanyMaxAggregateOutputType = {
    id: string | null
    company_name: string | null
    company_short_name: string | null
    company_code: string | null
    registration_number: string | null
    tax_id: string | null
    address: string | null
    city: string | null
    state: string | null
    country: string | null
    postal_code: string | null
    phone: string | null
    email: string | null
    website: string | null
    is_seller: boolean | null
    is_verified: boolean | null
    seller_id: string | null
    industry: string | null
    number_of_employees: number | null
    annual_revenue: Decimal | null
    description: string | null
    is_active: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
  }

  export type CompanyCountAggregateOutputType = {
    id: number
    company_name: number
    company_short_name: number
    company_code: number
    registration_number: number
    tax_id: number
    address: number
    city: number
    state: number
    country: number
    postal_code: number
    phone: number
    email: number
    website: number
    is_seller: number
    is_verified: number
    seller_id: number
    industry: number
    number_of_employees: number
    annual_revenue: number
    description: number
    is_active: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    _all: number
  }


  export type CompanyAvgAggregateInputType = {
    number_of_employees?: true
    annual_revenue?: true
  }

  export type CompanySumAggregateInputType = {
    number_of_employees?: true
    annual_revenue?: true
  }

  export type CompanyMinAggregateInputType = {
    id?: true
    company_name?: true
    company_short_name?: true
    company_code?: true
    registration_number?: true
    tax_id?: true
    address?: true
    city?: true
    state?: true
    country?: true
    postal_code?: true
    phone?: true
    email?: true
    website?: true
    is_seller?: true
    is_verified?: true
    seller_id?: true
    industry?: true
    number_of_employees?: true
    annual_revenue?: true
    description?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
  }

  export type CompanyMaxAggregateInputType = {
    id?: true
    company_name?: true
    company_short_name?: true
    company_code?: true
    registration_number?: true
    tax_id?: true
    address?: true
    city?: true
    state?: true
    country?: true
    postal_code?: true
    phone?: true
    email?: true
    website?: true
    is_seller?: true
    is_verified?: true
    seller_id?: true
    industry?: true
    number_of_employees?: true
    annual_revenue?: true
    description?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
  }

  export type CompanyCountAggregateInputType = {
    id?: true
    company_name?: true
    company_short_name?: true
    company_code?: true
    registration_number?: true
    tax_id?: true
    address?: true
    city?: true
    state?: true
    country?: true
    postal_code?: true
    phone?: true
    email?: true
    website?: true
    is_seller?: true
    is_verified?: true
    seller_id?: true
    industry?: true
    number_of_employees?: true
    annual_revenue?: true
    description?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    _all?: true
  }

  export type CompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Company to aggregate.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Companies
    **/
    _count?: true | CompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyMaxAggregateInputType
  }

  export type GetCompanyAggregateType<T extends CompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompany[P]>
      : GetScalarType<T[P], AggregateCompany[P]>
  }




  export type CompanyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithAggregationInput | CompanyOrderByWithAggregationInput[]
    by: CompanyScalarFieldEnum[] | CompanyScalarFieldEnum
    having?: CompanyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyCountAggregateInputType | true
    _avg?: CompanyAvgAggregateInputType
    _sum?: CompanySumAggregateInputType
    _min?: CompanyMinAggregateInputType
    _max?: CompanyMaxAggregateInputType
  }

  export type CompanyGroupByOutputType = {
    id: string
    company_name: string
    company_short_name: string | null
    company_code: string | null
    registration_number: string
    tax_id: string
    address: string | null
    city: string | null
    state: string | null
    country: string | null
    postal_code: string | null
    phone: string
    email: string
    website: string | null
    is_seller: boolean
    is_verified: boolean
    seller_id: string | null
    industry: string | null
    number_of_employees: number | null
    annual_revenue: Decimal | null
    description: string | null
    is_active: boolean
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  type GetCompanyGroupByPayload<T extends CompanyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyGroupByOutputType[P]>
        }
      >
    >


  export type CompanySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    company_name?: boolean
    company_short_name?: boolean
    company_code?: boolean
    registration_number?: boolean
    tax_id?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    postal_code?: boolean
    phone?: boolean
    email?: boolean
    website?: boolean
    is_seller?: boolean
    is_verified?: boolean
    seller_id?: boolean
    industry?: boolean
    number_of_employees?: boolean
    annual_revenue?: boolean
    description?: boolean
    is_active?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    seller?: boolean | Company$sellerArgs<ExtArgs>
    CompanyAdditionalInfo?: boolean | Company$CompanyAdditionalInfoArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>


  export type CompanySelectScalar = {
    id?: boolean
    company_name?: boolean
    company_short_name?: boolean
    company_code?: boolean
    registration_number?: boolean
    tax_id?: boolean
    address?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    postal_code?: boolean
    phone?: boolean
    email?: boolean
    website?: boolean
    is_seller?: boolean
    is_verified?: boolean
    seller_id?: boolean
    industry?: boolean
    number_of_employees?: boolean
    annual_revenue?: boolean
    description?: boolean
    is_active?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
  }

  export type CompanyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    seller?: boolean | Company$sellerArgs<ExtArgs>
    CompanyAdditionalInfo?: boolean | Company$CompanyAdditionalInfoArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CompanyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Company"
    objects: {
      seller: Prisma.$SellerPayload<ExtArgs> | null
      CompanyAdditionalInfo: Prisma.$CompanyAdditionalInfoPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      company_name: string
      company_short_name: string | null
      company_code: string | null
      registration_number: string
      tax_id: string
      address: string | null
      city: string | null
      state: string | null
      country: string | null
      postal_code: string | null
      phone: string
      email: string
      website: string | null
      is_seller: boolean
      is_verified: boolean
      seller_id: string | null
      industry: string | null
      number_of_employees: number | null
      annual_revenue: Prisma.Decimal | null
      description: string | null
      is_active: boolean
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
    }, ExtArgs["result"]["company"]>
    composites: {}
  }

  type CompanyGetPayload<S extends boolean | null | undefined | CompanyDefaultArgs> = $Result.GetResult<Prisma.$CompanyPayload, S>

  type CompanyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CompanyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CompanyCountAggregateInputType | true
    }

  export interface CompanyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Company'], meta: { name: 'Company' } }
    /**
     * Find zero or one Company that matches the filter.
     * @param {CompanyFindUniqueArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyFindUniqueArgs>(args: SelectSubset<T, CompanyFindUniqueArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Company that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CompanyFindUniqueOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Company that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyFindFirstArgs>(args?: SelectSubset<T, CompanyFindFirstArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Company that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindFirstOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Companies
     * const companies = await prisma.company.findMany()
     * 
     * // Get first 10 Companies
     * const companies = await prisma.company.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyWithIdOnly = await prisma.company.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompanyFindManyArgs>(args?: SelectSubset<T, CompanyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Company.
     * @param {CompanyCreateArgs} args - Arguments to create a Company.
     * @example
     * // Create one Company
     * const Company = await prisma.company.create({
     *   data: {
     *     // ... data to create a Company
     *   }
     * })
     * 
     */
    create<T extends CompanyCreateArgs>(args: SelectSubset<T, CompanyCreateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Companies.
     * @param {CompanyCreateManyArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyCreateManyArgs>(args?: SelectSubset<T, CompanyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Company.
     * @param {CompanyDeleteArgs} args - Arguments to delete one Company.
     * @example
     * // Delete one Company
     * const Company = await prisma.company.delete({
     *   where: {
     *     // ... filter to delete one Company
     *   }
     * })
     * 
     */
    delete<T extends CompanyDeleteArgs>(args: SelectSubset<T, CompanyDeleteArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Company.
     * @param {CompanyUpdateArgs} args - Arguments to update one Company.
     * @example
     * // Update one Company
     * const company = await prisma.company.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyUpdateArgs>(args: SelectSubset<T, CompanyUpdateArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Companies.
     * @param {CompanyDeleteManyArgs} args - Arguments to filter Companies to delete.
     * @example
     * // Delete a few Companies
     * const { count } = await prisma.company.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyDeleteManyArgs>(args?: SelectSubset<T, CompanyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Companies
     * const company = await prisma.company.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyUpdateManyArgs>(args: SelectSubset<T, CompanyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Company.
     * @param {CompanyUpsertArgs} args - Arguments to update or create a Company.
     * @example
     * // Update or create a Company
     * const company = await prisma.company.upsert({
     *   create: {
     *     // ... data to create a Company
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Company we want to update
     *   }
     * })
     */
    upsert<T extends CompanyUpsertArgs>(args: SelectSubset<T, CompanyUpsertArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyCountArgs} args - Arguments to filter Companies to count.
     * @example
     * // Count the number of Companies
     * const count = await prisma.company.count({
     *   where: {
     *     // ... the filter for the Companies we want to count
     *   }
     * })
    **/
    count<T extends CompanyCountArgs>(
      args?: Subset<T, CompanyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAggregateArgs>(args: Subset<T, CompanyAggregateArgs>): Prisma.PrismaPromise<GetCompanyAggregateType<T>>

    /**
     * Group by Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyGroupByArgs['orderBy'] }
        : { orderBy?: CompanyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Company model
   */
  readonly fields: CompanyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Company.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    seller<T extends Company$sellerArgs<ExtArgs> = {}>(args?: Subset<T, Company$sellerArgs<ExtArgs>>): Prisma__SellerClient<$Result.GetResult<Prisma.$SellerPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    CompanyAdditionalInfo<T extends Company$CompanyAdditionalInfoArgs<ExtArgs> = {}>(args?: Subset<T, Company$CompanyAdditionalInfoArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Company model
   */ 
  interface CompanyFieldRefs {
    readonly id: FieldRef<"Company", 'String'>
    readonly company_name: FieldRef<"Company", 'String'>
    readonly company_short_name: FieldRef<"Company", 'String'>
    readonly company_code: FieldRef<"Company", 'String'>
    readonly registration_number: FieldRef<"Company", 'String'>
    readonly tax_id: FieldRef<"Company", 'String'>
    readonly address: FieldRef<"Company", 'String'>
    readonly city: FieldRef<"Company", 'String'>
    readonly state: FieldRef<"Company", 'String'>
    readonly country: FieldRef<"Company", 'String'>
    readonly postal_code: FieldRef<"Company", 'String'>
    readonly phone: FieldRef<"Company", 'String'>
    readonly email: FieldRef<"Company", 'String'>
    readonly website: FieldRef<"Company", 'String'>
    readonly is_seller: FieldRef<"Company", 'Boolean'>
    readonly is_verified: FieldRef<"Company", 'Boolean'>
    readonly seller_id: FieldRef<"Company", 'String'>
    readonly industry: FieldRef<"Company", 'String'>
    readonly number_of_employees: FieldRef<"Company", 'Int'>
    readonly annual_revenue: FieldRef<"Company", 'Decimal'>
    readonly description: FieldRef<"Company", 'String'>
    readonly is_active: FieldRef<"Company", 'Boolean'>
    readonly created_at: FieldRef<"Company", 'DateTime'>
    readonly created_by: FieldRef<"Company", 'String'>
    readonly created_ip: FieldRef<"Company", 'String'>
    readonly updated_at: FieldRef<"Company", 'DateTime'>
    readonly updated_by: FieldRef<"Company", 'String'>
    readonly updated_ip: FieldRef<"Company", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Company findUnique
   */
  export type CompanyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findUniqueOrThrow
   */
  export type CompanyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company findFirst
   */
  export type CompanyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findFirstOrThrow
   */
  export type CompanyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Company to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company findMany
   */
  export type CompanyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter, which Companies to fetch.
     */
    where?: CompanyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Companies to fetch.
     */
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Companies.
     */
    cursor?: CompanyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Companies.
     */
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Company create
   */
  export type CompanyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to create a Company.
     */
    data: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
  }

  /**
   * Company createMany
   */
  export type CompanyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Companies.
     */
    data: CompanyCreateManyInput | CompanyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Company update
   */
  export type CompanyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The data needed to update a Company.
     */
    data: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
    /**
     * Choose, which Company to update.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company updateMany
   */
  export type CompanyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Companies.
     */
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyInput>
    /**
     * Filter which Companies to update
     */
    where?: CompanyWhereInput
  }

  /**
   * Company upsert
   */
  export type CompanyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * The filter to search for the Company to update in case it exists.
     */
    where: CompanyWhereUniqueInput
    /**
     * In case the Company found by the `where` argument doesn't exist, create a new Company with this data.
     */
    create: XOR<CompanyCreateInput, CompanyUncheckedCreateInput>
    /**
     * In case the Company was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyUpdateInput, CompanyUncheckedUpdateInput>
  }

  /**
   * Company delete
   */
  export type CompanyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    /**
     * Filter which Company to delete.
     */
    where: CompanyWhereUniqueInput
  }

  /**
   * Company deleteMany
   */
  export type CompanyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Companies to delete
     */
    where?: CompanyWhereInput
  }

  /**
   * Company.seller
   */
  export type Company$sellerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seller
     */
    select?: SellerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerInclude<ExtArgs> | null
    where?: SellerWhereInput
  }

  /**
   * Company.CompanyAdditionalInfo
   */
  export type Company$CompanyAdditionalInfoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    where?: CompanyAdditionalInfoWhereInput
    orderBy?: CompanyAdditionalInfoOrderByWithRelationInput | CompanyAdditionalInfoOrderByWithRelationInput[]
    cursor?: CompanyAdditionalInfoWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompanyAdditionalInfoScalarFieldEnum | CompanyAdditionalInfoScalarFieldEnum[]
  }

  /**
   * Company without action
   */
  export type CompanyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
  }


  /**
   * Model CompanyAdditionalInfo
   */

  export type AggregateCompanyAdditionalInfo = {
    _count: CompanyAdditionalInfoCountAggregateOutputType | null
    _min: CompanyAdditionalInfoMinAggregateOutputType | null
    _max: CompanyAdditionalInfoMaxAggregateOutputType | null
  }

  export type CompanyAdditionalInfoMinAggregateOutputType = {
    id: string | null
    company_id: string | null
    short_description: string | null
    facebook_link: string | null
    twitter_link: string | null
    instagram_link: string | null
    linkedin_link: string | null
    youtube_link: string | null
    whatsapp_number: string | null
    google_map_link: string | null
    vision: string | null
    mission: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
  }

  export type CompanyAdditionalInfoMaxAggregateOutputType = {
    id: string | null
    company_id: string | null
    short_description: string | null
    facebook_link: string | null
    twitter_link: string | null
    instagram_link: string | null
    linkedin_link: string | null
    youtube_link: string | null
    whatsapp_number: string | null
    google_map_link: string | null
    vision: string | null
    mission: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
  }

  export type CompanyAdditionalInfoCountAggregateOutputType = {
    id: number
    company_id: number
    short_description: number
    facebook_link: number
    twitter_link: number
    instagram_link: number
    linkedin_link: number
    youtube_link: number
    whatsapp_number: number
    google_map_link: number
    vision: number
    mission: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    _all: number
  }


  export type CompanyAdditionalInfoMinAggregateInputType = {
    id?: true
    company_id?: true
    short_description?: true
    facebook_link?: true
    twitter_link?: true
    instagram_link?: true
    linkedin_link?: true
    youtube_link?: true
    whatsapp_number?: true
    google_map_link?: true
    vision?: true
    mission?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
  }

  export type CompanyAdditionalInfoMaxAggregateInputType = {
    id?: true
    company_id?: true
    short_description?: true
    facebook_link?: true
    twitter_link?: true
    instagram_link?: true
    linkedin_link?: true
    youtube_link?: true
    whatsapp_number?: true
    google_map_link?: true
    vision?: true
    mission?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
  }

  export type CompanyAdditionalInfoCountAggregateInputType = {
    id?: true
    company_id?: true
    short_description?: true
    facebook_link?: true
    twitter_link?: true
    instagram_link?: true
    linkedin_link?: true
    youtube_link?: true
    whatsapp_number?: true
    google_map_link?: true
    vision?: true
    mission?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    _all?: true
  }

  export type CompanyAdditionalInfoAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CompanyAdditionalInfo to aggregate.
     */
    where?: CompanyAdditionalInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyAdditionalInfos to fetch.
     */
    orderBy?: CompanyAdditionalInfoOrderByWithRelationInput | CompanyAdditionalInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CompanyAdditionalInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyAdditionalInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyAdditionalInfos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CompanyAdditionalInfos
    **/
    _count?: true | CompanyAdditionalInfoCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyAdditionalInfoMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyAdditionalInfoMaxAggregateInputType
  }

  export type GetCompanyAdditionalInfoAggregateType<T extends CompanyAdditionalInfoAggregateArgs> = {
        [P in keyof T & keyof AggregateCompanyAdditionalInfo]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompanyAdditionalInfo[P]>
      : GetScalarType<T[P], AggregateCompanyAdditionalInfo[P]>
  }




  export type CompanyAdditionalInfoGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CompanyAdditionalInfoWhereInput
    orderBy?: CompanyAdditionalInfoOrderByWithAggregationInput | CompanyAdditionalInfoOrderByWithAggregationInput[]
    by: CompanyAdditionalInfoScalarFieldEnum[] | CompanyAdditionalInfoScalarFieldEnum
    having?: CompanyAdditionalInfoScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyAdditionalInfoCountAggregateInputType | true
    _min?: CompanyAdditionalInfoMinAggregateInputType
    _max?: CompanyAdditionalInfoMaxAggregateInputType
  }

  export type CompanyAdditionalInfoGroupByOutputType = {
    id: string
    company_id: string
    short_description: string | null
    facebook_link: string | null
    twitter_link: string | null
    instagram_link: string | null
    linkedin_link: string | null
    youtube_link: string | null
    whatsapp_number: string | null
    google_map_link: string | null
    vision: string | null
    mission: string | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    _count: CompanyAdditionalInfoCountAggregateOutputType | null
    _min: CompanyAdditionalInfoMinAggregateOutputType | null
    _max: CompanyAdditionalInfoMaxAggregateOutputType | null
  }

  type GetCompanyAdditionalInfoGroupByPayload<T extends CompanyAdditionalInfoGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyAdditionalInfoGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyAdditionalInfoGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyAdditionalInfoGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyAdditionalInfoGroupByOutputType[P]>
        }
      >
    >


  export type CompanyAdditionalInfoSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    company_id?: boolean
    short_description?: boolean
    facebook_link?: boolean
    twitter_link?: boolean
    instagram_link?: boolean
    linkedin_link?: boolean
    youtube_link?: boolean
    whatsapp_number?: boolean
    google_map_link?: boolean
    vision?: boolean
    mission?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["companyAdditionalInfo"]>


  export type CompanyAdditionalInfoSelectScalar = {
    id?: boolean
    company_id?: boolean
    short_description?: boolean
    facebook_link?: boolean
    twitter_link?: boolean
    instagram_link?: boolean
    linkedin_link?: boolean
    youtube_link?: boolean
    whatsapp_number?: boolean
    google_map_link?: boolean
    vision?: boolean
    mission?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
  }

  export type CompanyAdditionalInfoInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | CompanyDefaultArgs<ExtArgs>
  }

  export type $CompanyAdditionalInfoPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CompanyAdditionalInfo"
    objects: {
      company: Prisma.$CompanyPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      company_id: string
      short_description: string | null
      facebook_link: string | null
      twitter_link: string | null
      instagram_link: string | null
      linkedin_link: string | null
      youtube_link: string | null
      whatsapp_number: string | null
      google_map_link: string | null
      vision: string | null
      mission: string | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
    }, ExtArgs["result"]["companyAdditionalInfo"]>
    composites: {}
  }

  type CompanyAdditionalInfoGetPayload<S extends boolean | null | undefined | CompanyAdditionalInfoDefaultArgs> = $Result.GetResult<Prisma.$CompanyAdditionalInfoPayload, S>

  type CompanyAdditionalInfoCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CompanyAdditionalInfoFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CompanyAdditionalInfoCountAggregateInputType | true
    }

  export interface CompanyAdditionalInfoDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CompanyAdditionalInfo'], meta: { name: 'CompanyAdditionalInfo' } }
    /**
     * Find zero or one CompanyAdditionalInfo that matches the filter.
     * @param {CompanyAdditionalInfoFindUniqueArgs} args - Arguments to find a CompanyAdditionalInfo
     * @example
     * // Get one CompanyAdditionalInfo
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CompanyAdditionalInfoFindUniqueArgs>(args: SelectSubset<T, CompanyAdditionalInfoFindUniqueArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CompanyAdditionalInfo that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CompanyAdditionalInfoFindUniqueOrThrowArgs} args - Arguments to find a CompanyAdditionalInfo
     * @example
     * // Get one CompanyAdditionalInfo
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CompanyAdditionalInfoFindUniqueOrThrowArgs>(args: SelectSubset<T, CompanyAdditionalInfoFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CompanyAdditionalInfo that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoFindFirstArgs} args - Arguments to find a CompanyAdditionalInfo
     * @example
     * // Get one CompanyAdditionalInfo
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CompanyAdditionalInfoFindFirstArgs>(args?: SelectSubset<T, CompanyAdditionalInfoFindFirstArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CompanyAdditionalInfo that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoFindFirstOrThrowArgs} args - Arguments to find a CompanyAdditionalInfo
     * @example
     * // Get one CompanyAdditionalInfo
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CompanyAdditionalInfoFindFirstOrThrowArgs>(args?: SelectSubset<T, CompanyAdditionalInfoFindFirstOrThrowArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CompanyAdditionalInfos that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CompanyAdditionalInfos
     * const companyAdditionalInfos = await prisma.companyAdditionalInfo.findMany()
     * 
     * // Get first 10 CompanyAdditionalInfos
     * const companyAdditionalInfos = await prisma.companyAdditionalInfo.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyAdditionalInfoWithIdOnly = await prisma.companyAdditionalInfo.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CompanyAdditionalInfoFindManyArgs>(args?: SelectSubset<T, CompanyAdditionalInfoFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CompanyAdditionalInfo.
     * @param {CompanyAdditionalInfoCreateArgs} args - Arguments to create a CompanyAdditionalInfo.
     * @example
     * // Create one CompanyAdditionalInfo
     * const CompanyAdditionalInfo = await prisma.companyAdditionalInfo.create({
     *   data: {
     *     // ... data to create a CompanyAdditionalInfo
     *   }
     * })
     * 
     */
    create<T extends CompanyAdditionalInfoCreateArgs>(args: SelectSubset<T, CompanyAdditionalInfoCreateArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CompanyAdditionalInfos.
     * @param {CompanyAdditionalInfoCreateManyArgs} args - Arguments to create many CompanyAdditionalInfos.
     * @example
     * // Create many CompanyAdditionalInfos
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CompanyAdditionalInfoCreateManyArgs>(args?: SelectSubset<T, CompanyAdditionalInfoCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CompanyAdditionalInfo.
     * @param {CompanyAdditionalInfoDeleteArgs} args - Arguments to delete one CompanyAdditionalInfo.
     * @example
     * // Delete one CompanyAdditionalInfo
     * const CompanyAdditionalInfo = await prisma.companyAdditionalInfo.delete({
     *   where: {
     *     // ... filter to delete one CompanyAdditionalInfo
     *   }
     * })
     * 
     */
    delete<T extends CompanyAdditionalInfoDeleteArgs>(args: SelectSubset<T, CompanyAdditionalInfoDeleteArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CompanyAdditionalInfo.
     * @param {CompanyAdditionalInfoUpdateArgs} args - Arguments to update one CompanyAdditionalInfo.
     * @example
     * // Update one CompanyAdditionalInfo
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CompanyAdditionalInfoUpdateArgs>(args: SelectSubset<T, CompanyAdditionalInfoUpdateArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CompanyAdditionalInfos.
     * @param {CompanyAdditionalInfoDeleteManyArgs} args - Arguments to filter CompanyAdditionalInfos to delete.
     * @example
     * // Delete a few CompanyAdditionalInfos
     * const { count } = await prisma.companyAdditionalInfo.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CompanyAdditionalInfoDeleteManyArgs>(args?: SelectSubset<T, CompanyAdditionalInfoDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CompanyAdditionalInfos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CompanyAdditionalInfos
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CompanyAdditionalInfoUpdateManyArgs>(args: SelectSubset<T, CompanyAdditionalInfoUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CompanyAdditionalInfo.
     * @param {CompanyAdditionalInfoUpsertArgs} args - Arguments to update or create a CompanyAdditionalInfo.
     * @example
     * // Update or create a CompanyAdditionalInfo
     * const companyAdditionalInfo = await prisma.companyAdditionalInfo.upsert({
     *   create: {
     *     // ... data to create a CompanyAdditionalInfo
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CompanyAdditionalInfo we want to update
     *   }
     * })
     */
    upsert<T extends CompanyAdditionalInfoUpsertArgs>(args: SelectSubset<T, CompanyAdditionalInfoUpsertArgs<ExtArgs>>): Prisma__CompanyAdditionalInfoClient<$Result.GetResult<Prisma.$CompanyAdditionalInfoPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CompanyAdditionalInfos.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoCountArgs} args - Arguments to filter CompanyAdditionalInfos to count.
     * @example
     * // Count the number of CompanyAdditionalInfos
     * const count = await prisma.companyAdditionalInfo.count({
     *   where: {
     *     // ... the filter for the CompanyAdditionalInfos we want to count
     *   }
     * })
    **/
    count<T extends CompanyAdditionalInfoCountArgs>(
      args?: Subset<T, CompanyAdditionalInfoCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyAdditionalInfoCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CompanyAdditionalInfo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAdditionalInfoAggregateArgs>(args: Subset<T, CompanyAdditionalInfoAggregateArgs>): Prisma.PrismaPromise<GetCompanyAdditionalInfoAggregateType<T>>

    /**
     * Group by CompanyAdditionalInfo.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAdditionalInfoGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CompanyAdditionalInfoGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CompanyAdditionalInfoGroupByArgs['orderBy'] }
        : { orderBy?: CompanyAdditionalInfoGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CompanyAdditionalInfoGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyAdditionalInfoGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CompanyAdditionalInfo model
   */
  readonly fields: CompanyAdditionalInfoFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CompanyAdditionalInfo.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CompanyAdditionalInfoClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends CompanyDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CompanyDefaultArgs<ExtArgs>>): Prisma__CompanyClient<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CompanyAdditionalInfo model
   */ 
  interface CompanyAdditionalInfoFieldRefs {
    readonly id: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly company_id: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly short_description: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly facebook_link: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly twitter_link: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly instagram_link: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly linkedin_link: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly youtube_link: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly whatsapp_number: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly google_map_link: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly vision: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly mission: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly created_at: FieldRef<"CompanyAdditionalInfo", 'DateTime'>
    readonly created_by: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly created_ip: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly updated_at: FieldRef<"CompanyAdditionalInfo", 'DateTime'>
    readonly updated_by: FieldRef<"CompanyAdditionalInfo", 'String'>
    readonly updated_ip: FieldRef<"CompanyAdditionalInfo", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CompanyAdditionalInfo findUnique
   */
  export type CompanyAdditionalInfoFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * Filter, which CompanyAdditionalInfo to fetch.
     */
    where: CompanyAdditionalInfoWhereUniqueInput
  }

  /**
   * CompanyAdditionalInfo findUniqueOrThrow
   */
  export type CompanyAdditionalInfoFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * Filter, which CompanyAdditionalInfo to fetch.
     */
    where: CompanyAdditionalInfoWhereUniqueInput
  }

  /**
   * CompanyAdditionalInfo findFirst
   */
  export type CompanyAdditionalInfoFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * Filter, which CompanyAdditionalInfo to fetch.
     */
    where?: CompanyAdditionalInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyAdditionalInfos to fetch.
     */
    orderBy?: CompanyAdditionalInfoOrderByWithRelationInput | CompanyAdditionalInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CompanyAdditionalInfos.
     */
    cursor?: CompanyAdditionalInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyAdditionalInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyAdditionalInfos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CompanyAdditionalInfos.
     */
    distinct?: CompanyAdditionalInfoScalarFieldEnum | CompanyAdditionalInfoScalarFieldEnum[]
  }

  /**
   * CompanyAdditionalInfo findFirstOrThrow
   */
  export type CompanyAdditionalInfoFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * Filter, which CompanyAdditionalInfo to fetch.
     */
    where?: CompanyAdditionalInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyAdditionalInfos to fetch.
     */
    orderBy?: CompanyAdditionalInfoOrderByWithRelationInput | CompanyAdditionalInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CompanyAdditionalInfos.
     */
    cursor?: CompanyAdditionalInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyAdditionalInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyAdditionalInfos.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CompanyAdditionalInfos.
     */
    distinct?: CompanyAdditionalInfoScalarFieldEnum | CompanyAdditionalInfoScalarFieldEnum[]
  }

  /**
   * CompanyAdditionalInfo findMany
   */
  export type CompanyAdditionalInfoFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * Filter, which CompanyAdditionalInfos to fetch.
     */
    where?: CompanyAdditionalInfoWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CompanyAdditionalInfos to fetch.
     */
    orderBy?: CompanyAdditionalInfoOrderByWithRelationInput | CompanyAdditionalInfoOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CompanyAdditionalInfos.
     */
    cursor?: CompanyAdditionalInfoWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CompanyAdditionalInfos from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CompanyAdditionalInfos.
     */
    skip?: number
    distinct?: CompanyAdditionalInfoScalarFieldEnum | CompanyAdditionalInfoScalarFieldEnum[]
  }

  /**
   * CompanyAdditionalInfo create
   */
  export type CompanyAdditionalInfoCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * The data needed to create a CompanyAdditionalInfo.
     */
    data: XOR<CompanyAdditionalInfoCreateInput, CompanyAdditionalInfoUncheckedCreateInput>
  }

  /**
   * CompanyAdditionalInfo createMany
   */
  export type CompanyAdditionalInfoCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CompanyAdditionalInfos.
     */
    data: CompanyAdditionalInfoCreateManyInput | CompanyAdditionalInfoCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CompanyAdditionalInfo update
   */
  export type CompanyAdditionalInfoUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * The data needed to update a CompanyAdditionalInfo.
     */
    data: XOR<CompanyAdditionalInfoUpdateInput, CompanyAdditionalInfoUncheckedUpdateInput>
    /**
     * Choose, which CompanyAdditionalInfo to update.
     */
    where: CompanyAdditionalInfoWhereUniqueInput
  }

  /**
   * CompanyAdditionalInfo updateMany
   */
  export type CompanyAdditionalInfoUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CompanyAdditionalInfos.
     */
    data: XOR<CompanyAdditionalInfoUpdateManyMutationInput, CompanyAdditionalInfoUncheckedUpdateManyInput>
    /**
     * Filter which CompanyAdditionalInfos to update
     */
    where?: CompanyAdditionalInfoWhereInput
  }

  /**
   * CompanyAdditionalInfo upsert
   */
  export type CompanyAdditionalInfoUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * The filter to search for the CompanyAdditionalInfo to update in case it exists.
     */
    where: CompanyAdditionalInfoWhereUniqueInput
    /**
     * In case the CompanyAdditionalInfo found by the `where` argument doesn't exist, create a new CompanyAdditionalInfo with this data.
     */
    create: XOR<CompanyAdditionalInfoCreateInput, CompanyAdditionalInfoUncheckedCreateInput>
    /**
     * In case the CompanyAdditionalInfo was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CompanyAdditionalInfoUpdateInput, CompanyAdditionalInfoUncheckedUpdateInput>
  }

  /**
   * CompanyAdditionalInfo delete
   */
  export type CompanyAdditionalInfoDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
    /**
     * Filter which CompanyAdditionalInfo to delete.
     */
    where: CompanyAdditionalInfoWhereUniqueInput
  }

  /**
   * CompanyAdditionalInfo deleteMany
   */
  export type CompanyAdditionalInfoDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CompanyAdditionalInfos to delete
     */
    where?: CompanyAdditionalInfoWhereInput
  }

  /**
   * CompanyAdditionalInfo without action
   */
  export type CompanyAdditionalInfoDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyAdditionalInfo
     */
    select?: CompanyAdditionalInfoSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyAdditionalInfoInclude<ExtArgs> | null
  }


  /**
   * Model User
   */

  export type AggregateUser = {
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  export type UserMinAggregateOutputType = {
    id: string | null
    fullname: string | null
    username: string | null
    email: string | null
    password: string | null
    address: string | null
    phone: string | null
    is_active: boolean | null
    is_admin: boolean | null
    is_password_reset: boolean | null
    user_type: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type UserMaxAggregateOutputType = {
    id: string | null
    fullname: string | null
    username: string | null
    email: string | null
    password: string | null
    address: string | null
    phone: string | null
    is_active: boolean | null
    is_admin: boolean | null
    is_password_reset: boolean | null
    user_type: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type UserCountAggregateOutputType = {
    id: number
    fullname: number
    username: number
    email: number
    password: number
    address: number
    phone: number
    is_active: number
    is_admin: number
    is_password_reset: number
    user_type: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type UserMinAggregateInputType = {
    id?: true
    fullname?: true
    username?: true
    email?: true
    password?: true
    address?: true
    phone?: true
    is_active?: true
    is_admin?: true
    is_password_reset?: true
    user_type?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type UserMaxAggregateInputType = {
    id?: true
    fullname?: true
    username?: true
    email?: true
    password?: true
    address?: true
    phone?: true
    is_active?: true
    is_admin?: true
    is_password_reset?: true
    user_type?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type UserCountAggregateInputType = {
    id?: true
    fullname?: true
    username?: true
    email?: true
    password?: true
    address?: true
    phone?: true
    is_active?: true
    is_admin?: true
    is_password_reset?: true
    user_type?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type UserAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which User to aggregate.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Users
    **/
    _count?: true | UserCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserMaxAggregateInputType
  }

  export type GetUserAggregateType<T extends UserAggregateArgs> = {
        [P in keyof T & keyof AggregateUser]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser[P]>
      : GetScalarType<T[P], AggregateUser[P]>
  }




  export type UserGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserWhereInput
    orderBy?: UserOrderByWithAggregationInput | UserOrderByWithAggregationInput[]
    by: UserScalarFieldEnum[] | UserScalarFieldEnum
    having?: UserScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserCountAggregateInputType | true
    _min?: UserMinAggregateInputType
    _max?: UserMaxAggregateInputType
  }

  export type UserGroupByOutputType = {
    id: string
    fullname: string
    username: string
    email: string
    password: string
    address: string | null
    phone: string
    is_active: boolean | null
    is_admin: boolean | null
    is_password_reset: boolean | null
    user_type: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: UserCountAggregateOutputType | null
    _min: UserMinAggregateOutputType | null
    _max: UserMaxAggregateOutputType | null
  }

  type GetUserGroupByPayload<T extends UserGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupByOutputType[P]>
        }
      >
    >


  export type UserSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    fullname?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    address?: boolean
    phone?: boolean
    is_active?: boolean
    is_admin?: boolean
    is_password_reset?: boolean
    user_type?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    UserGroups?: boolean | User$UserGroupsArgs<ExtArgs>
    UserSettings?: boolean | User$UserSettingsArgs<ExtArgs>
    RefreshToken?: boolean | User$RefreshTokenArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user"]>


  export type UserSelectScalar = {
    id?: boolean
    fullname?: boolean
    username?: boolean
    email?: boolean
    password?: boolean
    address?: boolean
    phone?: boolean
    is_active?: boolean
    is_admin?: boolean
    is_password_reset?: boolean
    user_type?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type UserInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    UserGroups?: boolean | User$UserGroupsArgs<ExtArgs>
    UserSettings?: boolean | User$UserSettingsArgs<ExtArgs>
    RefreshToken?: boolean | User$RefreshTokenArgs<ExtArgs>
    _count?: boolean | UserCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $UserPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "User"
    objects: {
      UserGroups: Prisma.$UserGroupPayload<ExtArgs>[]
      UserSettings: Prisma.$UserSettingsPayload<ExtArgs>[]
      RefreshToken: Prisma.$RefreshTokenPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      fullname: string
      username: string
      email: string
      password: string
      address: string | null
      phone: string
      is_active: boolean | null
      is_admin: boolean | null
      is_password_reset: boolean | null
      user_type: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["user"]>
    composites: {}
  }

  type UserGetPayload<S extends boolean | null | undefined | UserDefaultArgs> = $Result.GetResult<Prisma.$UserPayload, S>

  type UserCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserCountAggregateInputType | true
    }

  export interface UserDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['User'], meta: { name: 'User' } }
    /**
     * Find zero or one User that matches the filter.
     * @param {UserFindUniqueArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserFindUniqueArgs>(args: SelectSubset<T, UserFindUniqueArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserFindUniqueOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserFindUniqueOrThrowArgs>(args: SelectSubset<T, UserFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserFindFirstArgs>(args?: SelectSubset<T, UserFindFirstArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindFirstOrThrowArgs} args - Arguments to find a User
     * @example
     * // Get one User
     * const user = await prisma.user.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserFindFirstOrThrowArgs>(args?: SelectSubset<T, UserFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Users that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Users
     * const users = await prisma.user.findMany()
     * 
     * // Get first 10 Users
     * const users = await prisma.user.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userWithIdOnly = await prisma.user.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserFindManyArgs>(args?: SelectSubset<T, UserFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User.
     * @param {UserCreateArgs} args - Arguments to create a User.
     * @example
     * // Create one User
     * const User = await prisma.user.create({
     *   data: {
     *     // ... data to create a User
     *   }
     * })
     * 
     */
    create<T extends UserCreateArgs>(args: SelectSubset<T, UserCreateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Users.
     * @param {UserCreateManyArgs} args - Arguments to create many Users.
     * @example
     * // Create many Users
     * const user = await prisma.user.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserCreateManyArgs>(args?: SelectSubset<T, UserCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User.
     * @param {UserDeleteArgs} args - Arguments to delete one User.
     * @example
     * // Delete one User
     * const User = await prisma.user.delete({
     *   where: {
     *     // ... filter to delete one User
     *   }
     * })
     * 
     */
    delete<T extends UserDeleteArgs>(args: SelectSubset<T, UserDeleteArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User.
     * @param {UserUpdateArgs} args - Arguments to update one User.
     * @example
     * // Update one User
     * const user = await prisma.user.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserUpdateArgs>(args: SelectSubset<T, UserUpdateArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Users.
     * @param {UserDeleteManyArgs} args - Arguments to filter Users to delete.
     * @example
     * // Delete a few Users
     * const { count } = await prisma.user.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserDeleteManyArgs>(args?: SelectSubset<T, UserDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Users
     * const user = await prisma.user.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserUpdateManyArgs>(args: SelectSubset<T, UserUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User.
     * @param {UserUpsertArgs} args - Arguments to update or create a User.
     * @example
     * // Update or create a User
     * const user = await prisma.user.upsert({
     *   create: {
     *     // ... data to create a User
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User we want to update
     *   }
     * })
     */
    upsert<T extends UserUpsertArgs>(args: SelectSubset<T, UserUpsertArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Users.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserCountArgs} args - Arguments to filter Users to count.
     * @example
     * // Count the number of Users
     * const count = await prisma.user.count({
     *   where: {
     *     // ... the filter for the Users we want to count
     *   }
     * })
    **/
    count<T extends UserCountArgs>(
      args?: Subset<T, UserCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserAggregateArgs>(args: Subset<T, UserAggregateArgs>): Prisma.PrismaPromise<GetUserAggregateType<T>>

    /**
     * Group by User.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the User model
   */
  readonly fields: UserFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for User.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    UserGroups<T extends User$UserGroupsArgs<ExtArgs> = {}>(args?: Subset<T, User$UserGroupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findMany"> | Null>
    UserSettings<T extends User$UserSettingsArgs<ExtArgs> = {}>(args?: Subset<T, User$UserSettingsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findMany"> | Null>
    RefreshToken<T extends User$RefreshTokenArgs<ExtArgs> = {}>(args?: Subset<T, User$RefreshTokenArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the User model
   */ 
  interface UserFieldRefs {
    readonly id: FieldRef<"User", 'String'>
    readonly fullname: FieldRef<"User", 'String'>
    readonly username: FieldRef<"User", 'String'>
    readonly email: FieldRef<"User", 'String'>
    readonly password: FieldRef<"User", 'String'>
    readonly address: FieldRef<"User", 'String'>
    readonly phone: FieldRef<"User", 'String'>
    readonly is_active: FieldRef<"User", 'Boolean'>
    readonly is_admin: FieldRef<"User", 'Boolean'>
    readonly is_password_reset: FieldRef<"User", 'Boolean'>
    readonly user_type: FieldRef<"User", 'String'>
    readonly created_at: FieldRef<"User", 'DateTime'>
    readonly created_by: FieldRef<"User", 'String'>
    readonly created_ip: FieldRef<"User", 'String'>
    readonly updated_at: FieldRef<"User", 'DateTime'>
    readonly updated_by: FieldRef<"User", 'String'>
    readonly updated_ip: FieldRef<"User", 'String'>
    readonly company_id: FieldRef<"User", 'String'>
  }
    

  // Custom InputTypes
  /**
   * User findUnique
   */
  export type UserFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findUniqueOrThrow
   */
  export type UserFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User findFirst
   */
  export type UserFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findFirstOrThrow
   */
  export type UserFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which User to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Users.
     */
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User findMany
   */
  export type UserFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter, which Users to fetch.
     */
    where?: UserWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Users to fetch.
     */
    orderBy?: UserOrderByWithRelationInput | UserOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Users.
     */
    cursor?: UserWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Users from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Users.
     */
    skip?: number
    distinct?: UserScalarFieldEnum | UserScalarFieldEnum[]
  }

  /**
   * User create
   */
  export type UserCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to create a User.
     */
    data: XOR<UserCreateInput, UserUncheckedCreateInput>
  }

  /**
   * User createMany
   */
  export type UserCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Users.
     */
    data: UserCreateManyInput | UserCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * User update
   */
  export type UserUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The data needed to update a User.
     */
    data: XOR<UserUpdateInput, UserUncheckedUpdateInput>
    /**
     * Choose, which User to update.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User updateMany
   */
  export type UserUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Users.
     */
    data: XOR<UserUpdateManyMutationInput, UserUncheckedUpdateManyInput>
    /**
     * Filter which Users to update
     */
    where?: UserWhereInput
  }

  /**
   * User upsert
   */
  export type UserUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * The filter to search for the User to update in case it exists.
     */
    where: UserWhereUniqueInput
    /**
     * In case the User found by the `where` argument doesn't exist, create a new User with this data.
     */
    create: XOR<UserCreateInput, UserUncheckedCreateInput>
    /**
     * In case the User was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserUpdateInput, UserUncheckedUpdateInput>
  }

  /**
   * User delete
   */
  export type UserDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
    /**
     * Filter which User to delete.
     */
    where: UserWhereUniqueInput
  }

  /**
   * User deleteMany
   */
  export type UserDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Users to delete
     */
    where?: UserWhereInput
  }

  /**
   * User.UserGroups
   */
  export type User$UserGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    where?: UserGroupWhereInput
    orderBy?: UserGroupOrderByWithRelationInput | UserGroupOrderByWithRelationInput[]
    cursor?: UserGroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserGroupScalarFieldEnum | UserGroupScalarFieldEnum[]
  }

  /**
   * User.UserSettings
   */
  export type User$UserSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    where?: UserSettingsWhereInput
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    cursor?: UserSettingsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserSettingsScalarFieldEnum | UserSettingsScalarFieldEnum[]
  }

  /**
   * User.RefreshToken
   */
  export type User$RefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    cursor?: RefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * User without action
   */
  export type UserDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User
     */
    select?: UserSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserInclude<ExtArgs> | null
  }


  /**
   * Model RefreshToken
   */

  export type AggregateRefreshToken = {
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  export type RefreshTokenMinAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    createdAt: Date | null
    isRevoked: boolean | null
  }

  export type RefreshTokenMaxAggregateOutputType = {
    id: string | null
    token: string | null
    userId: string | null
    expiresAt: Date | null
    createdAt: Date | null
    isRevoked: boolean | null
  }

  export type RefreshTokenCountAggregateOutputType = {
    id: number
    token: number
    userId: number
    expiresAt: number
    createdAt: number
    isRevoked: number
    _all: number
  }


  export type RefreshTokenMinAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    isRevoked?: true
  }

  export type RefreshTokenMaxAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    isRevoked?: true
  }

  export type RefreshTokenCountAggregateInputType = {
    id?: true
    token?: true
    userId?: true
    expiresAt?: true
    createdAt?: true
    isRevoked?: true
    _all?: true
  }

  export type RefreshTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshToken to aggregate.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned RefreshTokens
    **/
    _count?: true | RefreshTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: RefreshTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type GetRefreshTokenAggregateType<T extends RefreshTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateRefreshToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRefreshToken[P]>
      : GetScalarType<T[P], AggregateRefreshToken[P]>
  }




  export type RefreshTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: RefreshTokenWhereInput
    orderBy?: RefreshTokenOrderByWithAggregationInput | RefreshTokenOrderByWithAggregationInput[]
    by: RefreshTokenScalarFieldEnum[] | RefreshTokenScalarFieldEnum
    having?: RefreshTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: RefreshTokenCountAggregateInputType | true
    _min?: RefreshTokenMinAggregateInputType
    _max?: RefreshTokenMaxAggregateInputType
  }

  export type RefreshTokenGroupByOutputType = {
    id: string
    token: string
    userId: string
    expiresAt: Date
    createdAt: Date
    isRevoked: boolean
    _count: RefreshTokenCountAggregateOutputType | null
    _min: RefreshTokenMinAggregateOutputType | null
    _max: RefreshTokenMaxAggregateOutputType | null
  }

  type GetRefreshTokenGroupByPayload<T extends RefreshTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<RefreshTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof RefreshTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
            : GetScalarType<T[P], RefreshTokenGroupByOutputType[P]>
        }
      >
    >


  export type RefreshTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    isRevoked?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["refreshToken"]>


  export type RefreshTokenSelectScalar = {
    id?: boolean
    token?: boolean
    userId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    isRevoked?: boolean
  }

  export type RefreshTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $RefreshTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "RefreshToken"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      token: string
      userId: string
      expiresAt: Date
      createdAt: Date
      isRevoked: boolean
    }, ExtArgs["result"]["refreshToken"]>
    composites: {}
  }

  type RefreshTokenGetPayload<S extends boolean | null | undefined | RefreshTokenDefaultArgs> = $Result.GetResult<Prisma.$RefreshTokenPayload, S>

  type RefreshTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<RefreshTokenFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: RefreshTokenCountAggregateInputType | true
    }

  export interface RefreshTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['RefreshToken'], meta: { name: 'RefreshToken' } }
    /**
     * Find zero or one RefreshToken that matches the filter.
     * @param {RefreshTokenFindUniqueArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends RefreshTokenFindUniqueArgs>(args: SelectSubset<T, RefreshTokenFindUniqueArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one RefreshToken that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {RefreshTokenFindUniqueOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends RefreshTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, RefreshTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first RefreshToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends RefreshTokenFindFirstArgs>(args?: SelectSubset<T, RefreshTokenFindFirstArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first RefreshToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindFirstOrThrowArgs} args - Arguments to find a RefreshToken
     * @example
     * // Get one RefreshToken
     * const refreshToken = await prisma.refreshToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends RefreshTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, RefreshTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more RefreshTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany()
     * 
     * // Get first 10 RefreshTokens
     * const refreshTokens = await prisma.refreshToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const refreshTokenWithIdOnly = await prisma.refreshToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends RefreshTokenFindManyArgs>(args?: SelectSubset<T, RefreshTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a RefreshToken.
     * @param {RefreshTokenCreateArgs} args - Arguments to create a RefreshToken.
     * @example
     * // Create one RefreshToken
     * const RefreshToken = await prisma.refreshToken.create({
     *   data: {
     *     // ... data to create a RefreshToken
     *   }
     * })
     * 
     */
    create<T extends RefreshTokenCreateArgs>(args: SelectSubset<T, RefreshTokenCreateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many RefreshTokens.
     * @param {RefreshTokenCreateManyArgs} args - Arguments to create many RefreshTokens.
     * @example
     * // Create many RefreshTokens
     * const refreshToken = await prisma.refreshToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends RefreshTokenCreateManyArgs>(args?: SelectSubset<T, RefreshTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a RefreshToken.
     * @param {RefreshTokenDeleteArgs} args - Arguments to delete one RefreshToken.
     * @example
     * // Delete one RefreshToken
     * const RefreshToken = await prisma.refreshToken.delete({
     *   where: {
     *     // ... filter to delete one RefreshToken
     *   }
     * })
     * 
     */
    delete<T extends RefreshTokenDeleteArgs>(args: SelectSubset<T, RefreshTokenDeleteArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one RefreshToken.
     * @param {RefreshTokenUpdateArgs} args - Arguments to update one RefreshToken.
     * @example
     * // Update one RefreshToken
     * const refreshToken = await prisma.refreshToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends RefreshTokenUpdateArgs>(args: SelectSubset<T, RefreshTokenUpdateArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more RefreshTokens.
     * @param {RefreshTokenDeleteManyArgs} args - Arguments to filter RefreshTokens to delete.
     * @example
     * // Delete a few RefreshTokens
     * const { count } = await prisma.refreshToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends RefreshTokenDeleteManyArgs>(args?: SelectSubset<T, RefreshTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many RefreshTokens
     * const refreshToken = await prisma.refreshToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends RefreshTokenUpdateManyArgs>(args: SelectSubset<T, RefreshTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one RefreshToken.
     * @param {RefreshTokenUpsertArgs} args - Arguments to update or create a RefreshToken.
     * @example
     * // Update or create a RefreshToken
     * const refreshToken = await prisma.refreshToken.upsert({
     *   create: {
     *     // ... data to create a RefreshToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the RefreshToken we want to update
     *   }
     * })
     */
    upsert<T extends RefreshTokenUpsertArgs>(args: SelectSubset<T, RefreshTokenUpsertArgs<ExtArgs>>): Prisma__RefreshTokenClient<$Result.GetResult<Prisma.$RefreshTokenPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of RefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenCountArgs} args - Arguments to filter RefreshTokens to count.
     * @example
     * // Count the number of RefreshTokens
     * const count = await prisma.refreshToken.count({
     *   where: {
     *     // ... the filter for the RefreshTokens we want to count
     *   }
     * })
    **/
    count<T extends RefreshTokenCountArgs>(
      args?: Subset<T, RefreshTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], RefreshTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends RefreshTokenAggregateArgs>(args: Subset<T, RefreshTokenAggregateArgs>): Prisma.PrismaPromise<GetRefreshTokenAggregateType<T>>

    /**
     * Group by RefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {RefreshTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends RefreshTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: RefreshTokenGroupByArgs['orderBy'] }
        : { orderBy?: RefreshTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, RefreshTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRefreshTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the RefreshToken model
   */
  readonly fields: RefreshTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for RefreshToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__RefreshTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the RefreshToken model
   */ 
  interface RefreshTokenFieldRefs {
    readonly id: FieldRef<"RefreshToken", 'String'>
    readonly token: FieldRef<"RefreshToken", 'String'>
    readonly userId: FieldRef<"RefreshToken", 'String'>
    readonly expiresAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly createdAt: FieldRef<"RefreshToken", 'DateTime'>
    readonly isRevoked: FieldRef<"RefreshToken", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * RefreshToken findUnique
   */
  export type RefreshTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findUniqueOrThrow
   */
  export type RefreshTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken findFirst
   */
  export type RefreshTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findFirstOrThrow
   */
  export type RefreshTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshToken to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of RefreshTokens.
     */
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken findMany
   */
  export type RefreshTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which RefreshTokens to fetch.
     */
    where?: RefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of RefreshTokens to fetch.
     */
    orderBy?: RefreshTokenOrderByWithRelationInput | RefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing RefreshTokens.
     */
    cursor?: RefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` RefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` RefreshTokens.
     */
    skip?: number
    distinct?: RefreshTokenScalarFieldEnum | RefreshTokenScalarFieldEnum[]
  }

  /**
   * RefreshToken create
   */
  export type RefreshTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a RefreshToken.
     */
    data: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
  }

  /**
   * RefreshToken createMany
   */
  export type RefreshTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many RefreshTokens.
     */
    data: RefreshTokenCreateManyInput | RefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * RefreshToken update
   */
  export type RefreshTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a RefreshToken.
     */
    data: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
    /**
     * Choose, which RefreshToken to update.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken updateMany
   */
  export type RefreshTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update RefreshTokens.
     */
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which RefreshTokens to update
     */
    where?: RefreshTokenWhereInput
  }

  /**
   * RefreshToken upsert
   */
  export type RefreshTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the RefreshToken to update in case it exists.
     */
    where: RefreshTokenWhereUniqueInput
    /**
     * In case the RefreshToken found by the `where` argument doesn't exist, create a new RefreshToken with this data.
     */
    create: XOR<RefreshTokenCreateInput, RefreshTokenUncheckedCreateInput>
    /**
     * In case the RefreshToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<RefreshTokenUpdateInput, RefreshTokenUncheckedUpdateInput>
  }

  /**
   * RefreshToken delete
   */
  export type RefreshTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
    /**
     * Filter which RefreshToken to delete.
     */
    where: RefreshTokenWhereUniqueInput
  }

  /**
   * RefreshToken deleteMany
   */
  export type RefreshTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which RefreshTokens to delete
     */
    where?: RefreshTokenWhereInput
  }

  /**
   * RefreshToken without action
   */
  export type RefreshTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the RefreshToken
     */
    select?: RefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: RefreshTokenInclude<ExtArgs> | null
  }


  /**
   * Model SecurityRule
   */

  export type AggregateSecurityRule = {
    _count: SecurityRuleCountAggregateOutputType | null
    _min: SecurityRuleMinAggregateOutputType | null
    _max: SecurityRuleMaxAggregateOutputType | null
  }

  export type SecurityRuleMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityRuleMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityRuleCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type SecurityRuleMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityRuleMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityRuleCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type SecurityRuleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityRule to aggregate.
     */
    where?: SecurityRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRules to fetch.
     */
    orderBy?: SecurityRuleOrderByWithRelationInput | SecurityRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SecurityRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SecurityRules
    **/
    _count?: true | SecurityRuleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SecurityRuleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SecurityRuleMaxAggregateInputType
  }

  export type GetSecurityRuleAggregateType<T extends SecurityRuleAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurityRule]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurityRule[P]>
      : GetScalarType<T[P], AggregateSecurityRule[P]>
  }




  export type SecurityRuleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityRuleWhereInput
    orderBy?: SecurityRuleOrderByWithAggregationInput | SecurityRuleOrderByWithAggregationInput[]
    by: SecurityRuleScalarFieldEnum[] | SecurityRuleScalarFieldEnum
    having?: SecurityRuleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SecurityRuleCountAggregateInputType | true
    _min?: SecurityRuleMinAggregateInputType
    _max?: SecurityRuleMaxAggregateInputType
  }

  export type SecurityRuleGroupByOutputType = {
    id: string
    name: string
    description: string | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: SecurityRuleCountAggregateOutputType | null
    _min: SecurityRuleMinAggregateOutputType | null
    _max: SecurityRuleMaxAggregateOutputType | null
  }

  type GetSecurityRuleGroupByPayload<T extends SecurityRuleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SecurityRuleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SecurityRuleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SecurityRuleGroupByOutputType[P]>
            : GetScalarType<T[P], SecurityRuleGroupByOutputType[P]>
        }
      >
    >


  export type SecurityRuleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    SecurityRuleWiseMenuPermissions?: boolean | SecurityRule$SecurityRuleWiseMenuPermissionsArgs<ExtArgs>
    SecurityGroupRules?: boolean | SecurityRule$SecurityGroupRulesArgs<ExtArgs>
    _count?: boolean | SecurityRuleCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["securityRule"]>


  export type SecurityRuleSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type SecurityRuleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SecurityRuleWiseMenuPermissions?: boolean | SecurityRule$SecurityRuleWiseMenuPermissionsArgs<ExtArgs>
    SecurityGroupRules?: boolean | SecurityRule$SecurityGroupRulesArgs<ExtArgs>
    _count?: boolean | SecurityRuleCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SecurityRulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SecurityRule"
    objects: {
      SecurityRuleWiseMenuPermissions: Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>[]
      SecurityGroupRules: Prisma.$SecurityGroupRulePayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["securityRule"]>
    composites: {}
  }

  type SecurityRuleGetPayload<S extends boolean | null | undefined | SecurityRuleDefaultArgs> = $Result.GetResult<Prisma.$SecurityRulePayload, S>

  type SecurityRuleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SecurityRuleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SecurityRuleCountAggregateInputType | true
    }

  export interface SecurityRuleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SecurityRule'], meta: { name: 'SecurityRule' } }
    /**
     * Find zero or one SecurityRule that matches the filter.
     * @param {SecurityRuleFindUniqueArgs} args - Arguments to find a SecurityRule
     * @example
     * // Get one SecurityRule
     * const securityRule = await prisma.securityRule.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SecurityRuleFindUniqueArgs>(args: SelectSubset<T, SecurityRuleFindUniqueArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SecurityRule that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SecurityRuleFindUniqueOrThrowArgs} args - Arguments to find a SecurityRule
     * @example
     * // Get one SecurityRule
     * const securityRule = await prisma.securityRule.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SecurityRuleFindUniqueOrThrowArgs>(args: SelectSubset<T, SecurityRuleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SecurityRule that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleFindFirstArgs} args - Arguments to find a SecurityRule
     * @example
     * // Get one SecurityRule
     * const securityRule = await prisma.securityRule.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SecurityRuleFindFirstArgs>(args?: SelectSubset<T, SecurityRuleFindFirstArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SecurityRule that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleFindFirstOrThrowArgs} args - Arguments to find a SecurityRule
     * @example
     * // Get one SecurityRule
     * const securityRule = await prisma.securityRule.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SecurityRuleFindFirstOrThrowArgs>(args?: SelectSubset<T, SecurityRuleFindFirstOrThrowArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SecurityRules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SecurityRules
     * const securityRules = await prisma.securityRule.findMany()
     * 
     * // Get first 10 SecurityRules
     * const securityRules = await prisma.securityRule.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const securityRuleWithIdOnly = await prisma.securityRule.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SecurityRuleFindManyArgs>(args?: SelectSubset<T, SecurityRuleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SecurityRule.
     * @param {SecurityRuleCreateArgs} args - Arguments to create a SecurityRule.
     * @example
     * // Create one SecurityRule
     * const SecurityRule = await prisma.securityRule.create({
     *   data: {
     *     // ... data to create a SecurityRule
     *   }
     * })
     * 
     */
    create<T extends SecurityRuleCreateArgs>(args: SelectSubset<T, SecurityRuleCreateArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SecurityRules.
     * @param {SecurityRuleCreateManyArgs} args - Arguments to create many SecurityRules.
     * @example
     * // Create many SecurityRules
     * const securityRule = await prisma.securityRule.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SecurityRuleCreateManyArgs>(args?: SelectSubset<T, SecurityRuleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SecurityRule.
     * @param {SecurityRuleDeleteArgs} args - Arguments to delete one SecurityRule.
     * @example
     * // Delete one SecurityRule
     * const SecurityRule = await prisma.securityRule.delete({
     *   where: {
     *     // ... filter to delete one SecurityRule
     *   }
     * })
     * 
     */
    delete<T extends SecurityRuleDeleteArgs>(args: SelectSubset<T, SecurityRuleDeleteArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SecurityRule.
     * @param {SecurityRuleUpdateArgs} args - Arguments to update one SecurityRule.
     * @example
     * // Update one SecurityRule
     * const securityRule = await prisma.securityRule.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SecurityRuleUpdateArgs>(args: SelectSubset<T, SecurityRuleUpdateArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SecurityRules.
     * @param {SecurityRuleDeleteManyArgs} args - Arguments to filter SecurityRules to delete.
     * @example
     * // Delete a few SecurityRules
     * const { count } = await prisma.securityRule.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SecurityRuleDeleteManyArgs>(args?: SelectSubset<T, SecurityRuleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SecurityRules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SecurityRules
     * const securityRule = await prisma.securityRule.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SecurityRuleUpdateManyArgs>(args: SelectSubset<T, SecurityRuleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SecurityRule.
     * @param {SecurityRuleUpsertArgs} args - Arguments to update or create a SecurityRule.
     * @example
     * // Update or create a SecurityRule
     * const securityRule = await prisma.securityRule.upsert({
     *   create: {
     *     // ... data to create a SecurityRule
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SecurityRule we want to update
     *   }
     * })
     */
    upsert<T extends SecurityRuleUpsertArgs>(args: SelectSubset<T, SecurityRuleUpsertArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SecurityRules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleCountArgs} args - Arguments to filter SecurityRules to count.
     * @example
     * // Count the number of SecurityRules
     * const count = await prisma.securityRule.count({
     *   where: {
     *     // ... the filter for the SecurityRules we want to count
     *   }
     * })
    **/
    count<T extends SecurityRuleCountArgs>(
      args?: Subset<T, SecurityRuleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SecurityRuleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SecurityRule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SecurityRuleAggregateArgs>(args: Subset<T, SecurityRuleAggregateArgs>): Prisma.PrismaPromise<GetSecurityRuleAggregateType<T>>

    /**
     * Group by SecurityRule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SecurityRuleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SecurityRuleGroupByArgs['orderBy'] }
        : { orderBy?: SecurityRuleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SecurityRuleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurityRuleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SecurityRule model
   */
  readonly fields: SecurityRuleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SecurityRule.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SecurityRuleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    SecurityRuleWiseMenuPermissions<T extends SecurityRule$SecurityRuleWiseMenuPermissionsArgs<ExtArgs> = {}>(args?: Subset<T, SecurityRule$SecurityRuleWiseMenuPermissionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "findMany"> | Null>
    SecurityGroupRules<T extends SecurityRule$SecurityGroupRulesArgs<ExtArgs> = {}>(args?: Subset<T, SecurityRule$SecurityGroupRulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SecurityRule model
   */ 
  interface SecurityRuleFieldRefs {
    readonly id: FieldRef<"SecurityRule", 'String'>
    readonly name: FieldRef<"SecurityRule", 'String'>
    readonly description: FieldRef<"SecurityRule", 'String'>
    readonly created_at: FieldRef<"SecurityRule", 'DateTime'>
    readonly created_by: FieldRef<"SecurityRule", 'String'>
    readonly created_ip: FieldRef<"SecurityRule", 'String'>
    readonly updated_at: FieldRef<"SecurityRule", 'DateTime'>
    readonly updated_by: FieldRef<"SecurityRule", 'String'>
    readonly updated_ip: FieldRef<"SecurityRule", 'String'>
    readonly company_id: FieldRef<"SecurityRule", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SecurityRule findUnique
   */
  export type SecurityRuleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRule to fetch.
     */
    where: SecurityRuleWhereUniqueInput
  }

  /**
   * SecurityRule findUniqueOrThrow
   */
  export type SecurityRuleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRule to fetch.
     */
    where: SecurityRuleWhereUniqueInput
  }

  /**
   * SecurityRule findFirst
   */
  export type SecurityRuleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRule to fetch.
     */
    where?: SecurityRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRules to fetch.
     */
    orderBy?: SecurityRuleOrderByWithRelationInput | SecurityRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityRules.
     */
    cursor?: SecurityRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityRules.
     */
    distinct?: SecurityRuleScalarFieldEnum | SecurityRuleScalarFieldEnum[]
  }

  /**
   * SecurityRule findFirstOrThrow
   */
  export type SecurityRuleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRule to fetch.
     */
    where?: SecurityRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRules to fetch.
     */
    orderBy?: SecurityRuleOrderByWithRelationInput | SecurityRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityRules.
     */
    cursor?: SecurityRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityRules.
     */
    distinct?: SecurityRuleScalarFieldEnum | SecurityRuleScalarFieldEnum[]
  }

  /**
   * SecurityRule findMany
   */
  export type SecurityRuleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRules to fetch.
     */
    where?: SecurityRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRules to fetch.
     */
    orderBy?: SecurityRuleOrderByWithRelationInput | SecurityRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SecurityRules.
     */
    cursor?: SecurityRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRules.
     */
    skip?: number
    distinct?: SecurityRuleScalarFieldEnum | SecurityRuleScalarFieldEnum[]
  }

  /**
   * SecurityRule create
   */
  export type SecurityRuleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * The data needed to create a SecurityRule.
     */
    data: XOR<SecurityRuleCreateInput, SecurityRuleUncheckedCreateInput>
  }

  /**
   * SecurityRule createMany
   */
  export type SecurityRuleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SecurityRules.
     */
    data: SecurityRuleCreateManyInput | SecurityRuleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SecurityRule update
   */
  export type SecurityRuleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * The data needed to update a SecurityRule.
     */
    data: XOR<SecurityRuleUpdateInput, SecurityRuleUncheckedUpdateInput>
    /**
     * Choose, which SecurityRule to update.
     */
    where: SecurityRuleWhereUniqueInput
  }

  /**
   * SecurityRule updateMany
   */
  export type SecurityRuleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SecurityRules.
     */
    data: XOR<SecurityRuleUpdateManyMutationInput, SecurityRuleUncheckedUpdateManyInput>
    /**
     * Filter which SecurityRules to update
     */
    where?: SecurityRuleWhereInput
  }

  /**
   * SecurityRule upsert
   */
  export type SecurityRuleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * The filter to search for the SecurityRule to update in case it exists.
     */
    where: SecurityRuleWhereUniqueInput
    /**
     * In case the SecurityRule found by the `where` argument doesn't exist, create a new SecurityRule with this data.
     */
    create: XOR<SecurityRuleCreateInput, SecurityRuleUncheckedCreateInput>
    /**
     * In case the SecurityRule was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SecurityRuleUpdateInput, SecurityRuleUncheckedUpdateInput>
  }

  /**
   * SecurityRule delete
   */
  export type SecurityRuleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
    /**
     * Filter which SecurityRule to delete.
     */
    where: SecurityRuleWhereUniqueInput
  }

  /**
   * SecurityRule deleteMany
   */
  export type SecurityRuleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityRules to delete
     */
    where?: SecurityRuleWhereInput
  }

  /**
   * SecurityRule.SecurityRuleWiseMenuPermissions
   */
  export type SecurityRule$SecurityRuleWiseMenuPermissionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    where?: SecurityRuleWiseMenuPermissionWhereInput
    orderBy?: SecurityRuleWiseMenuPermissionOrderByWithRelationInput | SecurityRuleWiseMenuPermissionOrderByWithRelationInput[]
    cursor?: SecurityRuleWiseMenuPermissionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SecurityRuleWiseMenuPermissionScalarFieldEnum | SecurityRuleWiseMenuPermissionScalarFieldEnum[]
  }

  /**
   * SecurityRule.SecurityGroupRules
   */
  export type SecurityRule$SecurityGroupRulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    where?: SecurityGroupRuleWhereInput
    orderBy?: SecurityGroupRuleOrderByWithRelationInput | SecurityGroupRuleOrderByWithRelationInput[]
    cursor?: SecurityGroupRuleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SecurityGroupRuleScalarFieldEnum | SecurityGroupRuleScalarFieldEnum[]
  }

  /**
   * SecurityRule without action
   */
  export type SecurityRuleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRule
     */
    select?: SecurityRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleInclude<ExtArgs> | null
  }


  /**
   * Model SecurityRuleWiseMenuPermission
   */

  export type AggregateSecurityRuleWiseMenuPermission = {
    _count: SecurityRuleWiseMenuPermissionCountAggregateOutputType | null
    _avg: SecurityRuleWiseMenuPermissionAvgAggregateOutputType | null
    _sum: SecurityRuleWiseMenuPermissionSumAggregateOutputType | null
    _min: SecurityRuleWiseMenuPermissionMinAggregateOutputType | null
    _max: SecurityRuleWiseMenuPermissionMaxAggregateOutputType | null
  }

  export type SecurityRuleWiseMenuPermissionAvgAggregateOutputType = {
    menu_id: number | null
  }

  export type SecurityRuleWiseMenuPermissionSumAggregateOutputType = {
    menu_id: number | null
  }

  export type SecurityRuleWiseMenuPermissionMinAggregateOutputType = {
    id: string | null
    menu_id: number | null
    can_view: boolean | null
    can_create: boolean | null
    can_update: boolean | null
    can_delete: boolean | null
    can_report: boolean | null
    rule_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityRuleWiseMenuPermissionMaxAggregateOutputType = {
    id: string | null
    menu_id: number | null
    can_view: boolean | null
    can_create: boolean | null
    can_update: boolean | null
    can_delete: boolean | null
    can_report: boolean | null
    rule_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityRuleWiseMenuPermissionCountAggregateOutputType = {
    id: number
    menu_id: number
    can_view: number
    can_create: number
    can_update: number
    can_delete: number
    can_report: number
    rule_id: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type SecurityRuleWiseMenuPermissionAvgAggregateInputType = {
    menu_id?: true
  }

  export type SecurityRuleWiseMenuPermissionSumAggregateInputType = {
    menu_id?: true
  }

  export type SecurityRuleWiseMenuPermissionMinAggregateInputType = {
    id?: true
    menu_id?: true
    can_view?: true
    can_create?: true
    can_update?: true
    can_delete?: true
    can_report?: true
    rule_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityRuleWiseMenuPermissionMaxAggregateInputType = {
    id?: true
    menu_id?: true
    can_view?: true
    can_create?: true
    can_update?: true
    can_delete?: true
    can_report?: true
    rule_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityRuleWiseMenuPermissionCountAggregateInputType = {
    id?: true
    menu_id?: true
    can_view?: true
    can_create?: true
    can_update?: true
    can_delete?: true
    can_report?: true
    rule_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type SecurityRuleWiseMenuPermissionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityRuleWiseMenuPermission to aggregate.
     */
    where?: SecurityRuleWiseMenuPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRuleWiseMenuPermissions to fetch.
     */
    orderBy?: SecurityRuleWiseMenuPermissionOrderByWithRelationInput | SecurityRuleWiseMenuPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SecurityRuleWiseMenuPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRuleWiseMenuPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRuleWiseMenuPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SecurityRuleWiseMenuPermissions
    **/
    _count?: true | SecurityRuleWiseMenuPermissionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SecurityRuleWiseMenuPermissionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SecurityRuleWiseMenuPermissionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SecurityRuleWiseMenuPermissionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SecurityRuleWiseMenuPermissionMaxAggregateInputType
  }

  export type GetSecurityRuleWiseMenuPermissionAggregateType<T extends SecurityRuleWiseMenuPermissionAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurityRuleWiseMenuPermission]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurityRuleWiseMenuPermission[P]>
      : GetScalarType<T[P], AggregateSecurityRuleWiseMenuPermission[P]>
  }




  export type SecurityRuleWiseMenuPermissionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityRuleWiseMenuPermissionWhereInput
    orderBy?: SecurityRuleWiseMenuPermissionOrderByWithAggregationInput | SecurityRuleWiseMenuPermissionOrderByWithAggregationInput[]
    by: SecurityRuleWiseMenuPermissionScalarFieldEnum[] | SecurityRuleWiseMenuPermissionScalarFieldEnum
    having?: SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SecurityRuleWiseMenuPermissionCountAggregateInputType | true
    _avg?: SecurityRuleWiseMenuPermissionAvgAggregateInputType
    _sum?: SecurityRuleWiseMenuPermissionSumAggregateInputType
    _min?: SecurityRuleWiseMenuPermissionMinAggregateInputType
    _max?: SecurityRuleWiseMenuPermissionMaxAggregateInputType
  }

  export type SecurityRuleWiseMenuPermissionGroupByOutputType = {
    id: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    rule_id: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: SecurityRuleWiseMenuPermissionCountAggregateOutputType | null
    _avg: SecurityRuleWiseMenuPermissionAvgAggregateOutputType | null
    _sum: SecurityRuleWiseMenuPermissionSumAggregateOutputType | null
    _min: SecurityRuleWiseMenuPermissionMinAggregateOutputType | null
    _max: SecurityRuleWiseMenuPermissionMaxAggregateOutputType | null
  }

  type GetSecurityRuleWiseMenuPermissionGroupByPayload<T extends SecurityRuleWiseMenuPermissionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SecurityRuleWiseMenuPermissionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SecurityRuleWiseMenuPermissionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SecurityRuleWiseMenuPermissionGroupByOutputType[P]>
            : GetScalarType<T[P], SecurityRuleWiseMenuPermissionGroupByOutputType[P]>
        }
      >
    >


  export type SecurityRuleWiseMenuPermissionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    menu_id?: boolean
    can_view?: boolean
    can_create?: boolean
    can_update?: boolean
    can_delete?: boolean
    can_report?: boolean
    rule_id?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    security_rule?: boolean | SecurityRuleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["securityRuleWiseMenuPermission"]>


  export type SecurityRuleWiseMenuPermissionSelectScalar = {
    id?: boolean
    menu_id?: boolean
    can_view?: boolean
    can_create?: boolean
    can_update?: boolean
    can_delete?: boolean
    can_report?: boolean
    rule_id?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type SecurityRuleWiseMenuPermissionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    security_rule?: boolean | SecurityRuleDefaultArgs<ExtArgs>
  }

  export type $SecurityRuleWiseMenuPermissionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SecurityRuleWiseMenuPermission"
    objects: {
      security_rule: Prisma.$SecurityRulePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      menu_id: number
      can_view: boolean
      can_create: boolean
      can_update: boolean
      can_delete: boolean
      can_report: boolean
      rule_id: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["securityRuleWiseMenuPermission"]>
    composites: {}
  }

  type SecurityRuleWiseMenuPermissionGetPayload<S extends boolean | null | undefined | SecurityRuleWiseMenuPermissionDefaultArgs> = $Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload, S>

  type SecurityRuleWiseMenuPermissionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SecurityRuleWiseMenuPermissionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SecurityRuleWiseMenuPermissionCountAggregateInputType | true
    }

  export interface SecurityRuleWiseMenuPermissionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SecurityRuleWiseMenuPermission'], meta: { name: 'SecurityRuleWiseMenuPermission' } }
    /**
     * Find zero or one SecurityRuleWiseMenuPermission that matches the filter.
     * @param {SecurityRuleWiseMenuPermissionFindUniqueArgs} args - Arguments to find a SecurityRuleWiseMenuPermission
     * @example
     * // Get one SecurityRuleWiseMenuPermission
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SecurityRuleWiseMenuPermissionFindUniqueArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionFindUniqueArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SecurityRuleWiseMenuPermission that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SecurityRuleWiseMenuPermissionFindUniqueOrThrowArgs} args - Arguments to find a SecurityRuleWiseMenuPermission
     * @example
     * // Get one SecurityRuleWiseMenuPermission
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SecurityRuleWiseMenuPermissionFindUniqueOrThrowArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SecurityRuleWiseMenuPermission that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionFindFirstArgs} args - Arguments to find a SecurityRuleWiseMenuPermission
     * @example
     * // Get one SecurityRuleWiseMenuPermission
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SecurityRuleWiseMenuPermissionFindFirstArgs>(args?: SelectSubset<T, SecurityRuleWiseMenuPermissionFindFirstArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SecurityRuleWiseMenuPermission that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionFindFirstOrThrowArgs} args - Arguments to find a SecurityRuleWiseMenuPermission
     * @example
     * // Get one SecurityRuleWiseMenuPermission
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SecurityRuleWiseMenuPermissionFindFirstOrThrowArgs>(args?: SelectSubset<T, SecurityRuleWiseMenuPermissionFindFirstOrThrowArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SecurityRuleWiseMenuPermissions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SecurityRuleWiseMenuPermissions
     * const securityRuleWiseMenuPermissions = await prisma.securityRuleWiseMenuPermission.findMany()
     * 
     * // Get first 10 SecurityRuleWiseMenuPermissions
     * const securityRuleWiseMenuPermissions = await prisma.securityRuleWiseMenuPermission.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const securityRuleWiseMenuPermissionWithIdOnly = await prisma.securityRuleWiseMenuPermission.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SecurityRuleWiseMenuPermissionFindManyArgs>(args?: SelectSubset<T, SecurityRuleWiseMenuPermissionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SecurityRuleWiseMenuPermission.
     * @param {SecurityRuleWiseMenuPermissionCreateArgs} args - Arguments to create a SecurityRuleWiseMenuPermission.
     * @example
     * // Create one SecurityRuleWiseMenuPermission
     * const SecurityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.create({
     *   data: {
     *     // ... data to create a SecurityRuleWiseMenuPermission
     *   }
     * })
     * 
     */
    create<T extends SecurityRuleWiseMenuPermissionCreateArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionCreateArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SecurityRuleWiseMenuPermissions.
     * @param {SecurityRuleWiseMenuPermissionCreateManyArgs} args - Arguments to create many SecurityRuleWiseMenuPermissions.
     * @example
     * // Create many SecurityRuleWiseMenuPermissions
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SecurityRuleWiseMenuPermissionCreateManyArgs>(args?: SelectSubset<T, SecurityRuleWiseMenuPermissionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SecurityRuleWiseMenuPermission.
     * @param {SecurityRuleWiseMenuPermissionDeleteArgs} args - Arguments to delete one SecurityRuleWiseMenuPermission.
     * @example
     * // Delete one SecurityRuleWiseMenuPermission
     * const SecurityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.delete({
     *   where: {
     *     // ... filter to delete one SecurityRuleWiseMenuPermission
     *   }
     * })
     * 
     */
    delete<T extends SecurityRuleWiseMenuPermissionDeleteArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionDeleteArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SecurityRuleWiseMenuPermission.
     * @param {SecurityRuleWiseMenuPermissionUpdateArgs} args - Arguments to update one SecurityRuleWiseMenuPermission.
     * @example
     * // Update one SecurityRuleWiseMenuPermission
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SecurityRuleWiseMenuPermissionUpdateArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionUpdateArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SecurityRuleWiseMenuPermissions.
     * @param {SecurityRuleWiseMenuPermissionDeleteManyArgs} args - Arguments to filter SecurityRuleWiseMenuPermissions to delete.
     * @example
     * // Delete a few SecurityRuleWiseMenuPermissions
     * const { count } = await prisma.securityRuleWiseMenuPermission.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SecurityRuleWiseMenuPermissionDeleteManyArgs>(args?: SelectSubset<T, SecurityRuleWiseMenuPermissionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SecurityRuleWiseMenuPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SecurityRuleWiseMenuPermissions
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SecurityRuleWiseMenuPermissionUpdateManyArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SecurityRuleWiseMenuPermission.
     * @param {SecurityRuleWiseMenuPermissionUpsertArgs} args - Arguments to update or create a SecurityRuleWiseMenuPermission.
     * @example
     * // Update or create a SecurityRuleWiseMenuPermission
     * const securityRuleWiseMenuPermission = await prisma.securityRuleWiseMenuPermission.upsert({
     *   create: {
     *     // ... data to create a SecurityRuleWiseMenuPermission
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SecurityRuleWiseMenuPermission we want to update
     *   }
     * })
     */
    upsert<T extends SecurityRuleWiseMenuPermissionUpsertArgs>(args: SelectSubset<T, SecurityRuleWiseMenuPermissionUpsertArgs<ExtArgs>>): Prisma__SecurityRuleWiseMenuPermissionClient<$Result.GetResult<Prisma.$SecurityRuleWiseMenuPermissionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SecurityRuleWiseMenuPermissions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionCountArgs} args - Arguments to filter SecurityRuleWiseMenuPermissions to count.
     * @example
     * // Count the number of SecurityRuleWiseMenuPermissions
     * const count = await prisma.securityRuleWiseMenuPermission.count({
     *   where: {
     *     // ... the filter for the SecurityRuleWiseMenuPermissions we want to count
     *   }
     * })
    **/
    count<T extends SecurityRuleWiseMenuPermissionCountArgs>(
      args?: Subset<T, SecurityRuleWiseMenuPermissionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SecurityRuleWiseMenuPermissionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SecurityRuleWiseMenuPermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SecurityRuleWiseMenuPermissionAggregateArgs>(args: Subset<T, SecurityRuleWiseMenuPermissionAggregateArgs>): Prisma.PrismaPromise<GetSecurityRuleWiseMenuPermissionAggregateType<T>>

    /**
     * Group by SecurityRuleWiseMenuPermission.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityRuleWiseMenuPermissionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SecurityRuleWiseMenuPermissionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SecurityRuleWiseMenuPermissionGroupByArgs['orderBy'] }
        : { orderBy?: SecurityRuleWiseMenuPermissionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SecurityRuleWiseMenuPermissionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurityRuleWiseMenuPermissionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SecurityRuleWiseMenuPermission model
   */
  readonly fields: SecurityRuleWiseMenuPermissionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SecurityRuleWiseMenuPermission.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SecurityRuleWiseMenuPermissionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    security_rule<T extends SecurityRuleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SecurityRuleDefaultArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SecurityRuleWiseMenuPermission model
   */ 
  interface SecurityRuleWiseMenuPermissionFieldRefs {
    readonly id: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
    readonly menu_id: FieldRef<"SecurityRuleWiseMenuPermission", 'Int'>
    readonly can_view: FieldRef<"SecurityRuleWiseMenuPermission", 'Boolean'>
    readonly can_create: FieldRef<"SecurityRuleWiseMenuPermission", 'Boolean'>
    readonly can_update: FieldRef<"SecurityRuleWiseMenuPermission", 'Boolean'>
    readonly can_delete: FieldRef<"SecurityRuleWiseMenuPermission", 'Boolean'>
    readonly can_report: FieldRef<"SecurityRuleWiseMenuPermission", 'Boolean'>
    readonly rule_id: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
    readonly created_at: FieldRef<"SecurityRuleWiseMenuPermission", 'DateTime'>
    readonly created_by: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
    readonly created_ip: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
    readonly updated_at: FieldRef<"SecurityRuleWiseMenuPermission", 'DateTime'>
    readonly updated_by: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
    readonly updated_ip: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
    readonly company_id: FieldRef<"SecurityRuleWiseMenuPermission", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SecurityRuleWiseMenuPermission findUnique
   */
  export type SecurityRuleWiseMenuPermissionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRuleWiseMenuPermission to fetch.
     */
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
  }

  /**
   * SecurityRuleWiseMenuPermission findUniqueOrThrow
   */
  export type SecurityRuleWiseMenuPermissionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRuleWiseMenuPermission to fetch.
     */
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
  }

  /**
   * SecurityRuleWiseMenuPermission findFirst
   */
  export type SecurityRuleWiseMenuPermissionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRuleWiseMenuPermission to fetch.
     */
    where?: SecurityRuleWiseMenuPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRuleWiseMenuPermissions to fetch.
     */
    orderBy?: SecurityRuleWiseMenuPermissionOrderByWithRelationInput | SecurityRuleWiseMenuPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityRuleWiseMenuPermissions.
     */
    cursor?: SecurityRuleWiseMenuPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRuleWiseMenuPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRuleWiseMenuPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityRuleWiseMenuPermissions.
     */
    distinct?: SecurityRuleWiseMenuPermissionScalarFieldEnum | SecurityRuleWiseMenuPermissionScalarFieldEnum[]
  }

  /**
   * SecurityRuleWiseMenuPermission findFirstOrThrow
   */
  export type SecurityRuleWiseMenuPermissionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRuleWiseMenuPermission to fetch.
     */
    where?: SecurityRuleWiseMenuPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRuleWiseMenuPermissions to fetch.
     */
    orderBy?: SecurityRuleWiseMenuPermissionOrderByWithRelationInput | SecurityRuleWiseMenuPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityRuleWiseMenuPermissions.
     */
    cursor?: SecurityRuleWiseMenuPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRuleWiseMenuPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRuleWiseMenuPermissions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityRuleWiseMenuPermissions.
     */
    distinct?: SecurityRuleWiseMenuPermissionScalarFieldEnum | SecurityRuleWiseMenuPermissionScalarFieldEnum[]
  }

  /**
   * SecurityRuleWiseMenuPermission findMany
   */
  export type SecurityRuleWiseMenuPermissionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * Filter, which SecurityRuleWiseMenuPermissions to fetch.
     */
    where?: SecurityRuleWiseMenuPermissionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityRuleWiseMenuPermissions to fetch.
     */
    orderBy?: SecurityRuleWiseMenuPermissionOrderByWithRelationInput | SecurityRuleWiseMenuPermissionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SecurityRuleWiseMenuPermissions.
     */
    cursor?: SecurityRuleWiseMenuPermissionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityRuleWiseMenuPermissions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityRuleWiseMenuPermissions.
     */
    skip?: number
    distinct?: SecurityRuleWiseMenuPermissionScalarFieldEnum | SecurityRuleWiseMenuPermissionScalarFieldEnum[]
  }

  /**
   * SecurityRuleWiseMenuPermission create
   */
  export type SecurityRuleWiseMenuPermissionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * The data needed to create a SecurityRuleWiseMenuPermission.
     */
    data: XOR<SecurityRuleWiseMenuPermissionCreateInput, SecurityRuleWiseMenuPermissionUncheckedCreateInput>
  }

  /**
   * SecurityRuleWiseMenuPermission createMany
   */
  export type SecurityRuleWiseMenuPermissionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SecurityRuleWiseMenuPermissions.
     */
    data: SecurityRuleWiseMenuPermissionCreateManyInput | SecurityRuleWiseMenuPermissionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SecurityRuleWiseMenuPermission update
   */
  export type SecurityRuleWiseMenuPermissionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * The data needed to update a SecurityRuleWiseMenuPermission.
     */
    data: XOR<SecurityRuleWiseMenuPermissionUpdateInput, SecurityRuleWiseMenuPermissionUncheckedUpdateInput>
    /**
     * Choose, which SecurityRuleWiseMenuPermission to update.
     */
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
  }

  /**
   * SecurityRuleWiseMenuPermission updateMany
   */
  export type SecurityRuleWiseMenuPermissionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SecurityRuleWiseMenuPermissions.
     */
    data: XOR<SecurityRuleWiseMenuPermissionUpdateManyMutationInput, SecurityRuleWiseMenuPermissionUncheckedUpdateManyInput>
    /**
     * Filter which SecurityRuleWiseMenuPermissions to update
     */
    where?: SecurityRuleWiseMenuPermissionWhereInput
  }

  /**
   * SecurityRuleWiseMenuPermission upsert
   */
  export type SecurityRuleWiseMenuPermissionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * The filter to search for the SecurityRuleWiseMenuPermission to update in case it exists.
     */
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
    /**
     * In case the SecurityRuleWiseMenuPermission found by the `where` argument doesn't exist, create a new SecurityRuleWiseMenuPermission with this data.
     */
    create: XOR<SecurityRuleWiseMenuPermissionCreateInput, SecurityRuleWiseMenuPermissionUncheckedCreateInput>
    /**
     * In case the SecurityRuleWiseMenuPermission was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SecurityRuleWiseMenuPermissionUpdateInput, SecurityRuleWiseMenuPermissionUncheckedUpdateInput>
  }

  /**
   * SecurityRuleWiseMenuPermission delete
   */
  export type SecurityRuleWiseMenuPermissionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
    /**
     * Filter which SecurityRuleWiseMenuPermission to delete.
     */
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
  }

  /**
   * SecurityRuleWiseMenuPermission deleteMany
   */
  export type SecurityRuleWiseMenuPermissionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityRuleWiseMenuPermissions to delete
     */
    where?: SecurityRuleWiseMenuPermissionWhereInput
  }

  /**
   * SecurityRuleWiseMenuPermission without action
   */
  export type SecurityRuleWiseMenuPermissionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityRuleWiseMenuPermission
     */
    select?: SecurityRuleWiseMenuPermissionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityRuleWiseMenuPermissionInclude<ExtArgs> | null
  }


  /**
   * Model SecurityGroup
   */

  export type AggregateSecurityGroup = {
    _count: SecurityGroupCountAggregateOutputType | null
    _min: SecurityGroupMinAggregateOutputType | null
    _max: SecurityGroupMaxAggregateOutputType | null
  }

  export type SecurityGroupMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityGroupMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityGroupCountAggregateOutputType = {
    id: number
    name: number
    description: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type SecurityGroupMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityGroupMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityGroupCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type SecurityGroupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityGroup to aggregate.
     */
    where?: SecurityGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroups to fetch.
     */
    orderBy?: SecurityGroupOrderByWithRelationInput | SecurityGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SecurityGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SecurityGroups
    **/
    _count?: true | SecurityGroupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SecurityGroupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SecurityGroupMaxAggregateInputType
  }

  export type GetSecurityGroupAggregateType<T extends SecurityGroupAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurityGroup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurityGroup[P]>
      : GetScalarType<T[P], AggregateSecurityGroup[P]>
  }




  export type SecurityGroupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityGroupWhereInput
    orderBy?: SecurityGroupOrderByWithAggregationInput | SecurityGroupOrderByWithAggregationInput[]
    by: SecurityGroupScalarFieldEnum[] | SecurityGroupScalarFieldEnum
    having?: SecurityGroupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SecurityGroupCountAggregateInputType | true
    _min?: SecurityGroupMinAggregateInputType
    _max?: SecurityGroupMaxAggregateInputType
  }

  export type SecurityGroupGroupByOutputType = {
    id: string
    name: string
    description: string | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: SecurityGroupCountAggregateOutputType | null
    _min: SecurityGroupMinAggregateOutputType | null
    _max: SecurityGroupMaxAggregateOutputType | null
  }

  type GetSecurityGroupGroupByPayload<T extends SecurityGroupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SecurityGroupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SecurityGroupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SecurityGroupGroupByOutputType[P]>
            : GetScalarType<T[P], SecurityGroupGroupByOutputType[P]>
        }
      >
    >


  export type SecurityGroupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    SecurityGroupRules?: boolean | SecurityGroup$SecurityGroupRulesArgs<ExtArgs>
    UserGroups?: boolean | SecurityGroup$UserGroupsArgs<ExtArgs>
    _count?: boolean | SecurityGroupCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["securityGroup"]>


  export type SecurityGroupSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type SecurityGroupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    SecurityGroupRules?: boolean | SecurityGroup$SecurityGroupRulesArgs<ExtArgs>
    UserGroups?: boolean | SecurityGroup$UserGroupsArgs<ExtArgs>
    _count?: boolean | SecurityGroupCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SecurityGroupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SecurityGroup"
    objects: {
      SecurityGroupRules: Prisma.$SecurityGroupRulePayload<ExtArgs>[]
      UserGroups: Prisma.$UserGroupPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["securityGroup"]>
    composites: {}
  }

  type SecurityGroupGetPayload<S extends boolean | null | undefined | SecurityGroupDefaultArgs> = $Result.GetResult<Prisma.$SecurityGroupPayload, S>

  type SecurityGroupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SecurityGroupFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SecurityGroupCountAggregateInputType | true
    }

  export interface SecurityGroupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SecurityGroup'], meta: { name: 'SecurityGroup' } }
    /**
     * Find zero or one SecurityGroup that matches the filter.
     * @param {SecurityGroupFindUniqueArgs} args - Arguments to find a SecurityGroup
     * @example
     * // Get one SecurityGroup
     * const securityGroup = await prisma.securityGroup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SecurityGroupFindUniqueArgs>(args: SelectSubset<T, SecurityGroupFindUniqueArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SecurityGroup that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SecurityGroupFindUniqueOrThrowArgs} args - Arguments to find a SecurityGroup
     * @example
     * // Get one SecurityGroup
     * const securityGroup = await prisma.securityGroup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SecurityGroupFindUniqueOrThrowArgs>(args: SelectSubset<T, SecurityGroupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SecurityGroup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupFindFirstArgs} args - Arguments to find a SecurityGroup
     * @example
     * // Get one SecurityGroup
     * const securityGroup = await prisma.securityGroup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SecurityGroupFindFirstArgs>(args?: SelectSubset<T, SecurityGroupFindFirstArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SecurityGroup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupFindFirstOrThrowArgs} args - Arguments to find a SecurityGroup
     * @example
     * // Get one SecurityGroup
     * const securityGroup = await prisma.securityGroup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SecurityGroupFindFirstOrThrowArgs>(args?: SelectSubset<T, SecurityGroupFindFirstOrThrowArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SecurityGroups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SecurityGroups
     * const securityGroups = await prisma.securityGroup.findMany()
     * 
     * // Get first 10 SecurityGroups
     * const securityGroups = await prisma.securityGroup.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const securityGroupWithIdOnly = await prisma.securityGroup.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SecurityGroupFindManyArgs>(args?: SelectSubset<T, SecurityGroupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SecurityGroup.
     * @param {SecurityGroupCreateArgs} args - Arguments to create a SecurityGroup.
     * @example
     * // Create one SecurityGroup
     * const SecurityGroup = await prisma.securityGroup.create({
     *   data: {
     *     // ... data to create a SecurityGroup
     *   }
     * })
     * 
     */
    create<T extends SecurityGroupCreateArgs>(args: SelectSubset<T, SecurityGroupCreateArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SecurityGroups.
     * @param {SecurityGroupCreateManyArgs} args - Arguments to create many SecurityGroups.
     * @example
     * // Create many SecurityGroups
     * const securityGroup = await prisma.securityGroup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SecurityGroupCreateManyArgs>(args?: SelectSubset<T, SecurityGroupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SecurityGroup.
     * @param {SecurityGroupDeleteArgs} args - Arguments to delete one SecurityGroup.
     * @example
     * // Delete one SecurityGroup
     * const SecurityGroup = await prisma.securityGroup.delete({
     *   where: {
     *     // ... filter to delete one SecurityGroup
     *   }
     * })
     * 
     */
    delete<T extends SecurityGroupDeleteArgs>(args: SelectSubset<T, SecurityGroupDeleteArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SecurityGroup.
     * @param {SecurityGroupUpdateArgs} args - Arguments to update one SecurityGroup.
     * @example
     * // Update one SecurityGroup
     * const securityGroup = await prisma.securityGroup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SecurityGroupUpdateArgs>(args: SelectSubset<T, SecurityGroupUpdateArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SecurityGroups.
     * @param {SecurityGroupDeleteManyArgs} args - Arguments to filter SecurityGroups to delete.
     * @example
     * // Delete a few SecurityGroups
     * const { count } = await prisma.securityGroup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SecurityGroupDeleteManyArgs>(args?: SelectSubset<T, SecurityGroupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SecurityGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SecurityGroups
     * const securityGroup = await prisma.securityGroup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SecurityGroupUpdateManyArgs>(args: SelectSubset<T, SecurityGroupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SecurityGroup.
     * @param {SecurityGroupUpsertArgs} args - Arguments to update or create a SecurityGroup.
     * @example
     * // Update or create a SecurityGroup
     * const securityGroup = await prisma.securityGroup.upsert({
     *   create: {
     *     // ... data to create a SecurityGroup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SecurityGroup we want to update
     *   }
     * })
     */
    upsert<T extends SecurityGroupUpsertArgs>(args: SelectSubset<T, SecurityGroupUpsertArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SecurityGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupCountArgs} args - Arguments to filter SecurityGroups to count.
     * @example
     * // Count the number of SecurityGroups
     * const count = await prisma.securityGroup.count({
     *   where: {
     *     // ... the filter for the SecurityGroups we want to count
     *   }
     * })
    **/
    count<T extends SecurityGroupCountArgs>(
      args?: Subset<T, SecurityGroupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SecurityGroupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SecurityGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SecurityGroupAggregateArgs>(args: Subset<T, SecurityGroupAggregateArgs>): Prisma.PrismaPromise<GetSecurityGroupAggregateType<T>>

    /**
     * Group by SecurityGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SecurityGroupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SecurityGroupGroupByArgs['orderBy'] }
        : { orderBy?: SecurityGroupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SecurityGroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurityGroupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SecurityGroup model
   */
  readonly fields: SecurityGroupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SecurityGroup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SecurityGroupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    SecurityGroupRules<T extends SecurityGroup$SecurityGroupRulesArgs<ExtArgs> = {}>(args?: Subset<T, SecurityGroup$SecurityGroupRulesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findMany"> | Null>
    UserGroups<T extends SecurityGroup$UserGroupsArgs<ExtArgs> = {}>(args?: Subset<T, SecurityGroup$UserGroupsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SecurityGroup model
   */ 
  interface SecurityGroupFieldRefs {
    readonly id: FieldRef<"SecurityGroup", 'String'>
    readonly name: FieldRef<"SecurityGroup", 'String'>
    readonly description: FieldRef<"SecurityGroup", 'String'>
    readonly created_at: FieldRef<"SecurityGroup", 'DateTime'>
    readonly created_by: FieldRef<"SecurityGroup", 'String'>
    readonly created_ip: FieldRef<"SecurityGroup", 'String'>
    readonly updated_at: FieldRef<"SecurityGroup", 'DateTime'>
    readonly updated_by: FieldRef<"SecurityGroup", 'String'>
    readonly updated_ip: FieldRef<"SecurityGroup", 'String'>
    readonly company_id: FieldRef<"SecurityGroup", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SecurityGroup findUnique
   */
  export type SecurityGroupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroup to fetch.
     */
    where: SecurityGroupWhereUniqueInput
  }

  /**
   * SecurityGroup findUniqueOrThrow
   */
  export type SecurityGroupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroup to fetch.
     */
    where: SecurityGroupWhereUniqueInput
  }

  /**
   * SecurityGroup findFirst
   */
  export type SecurityGroupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroup to fetch.
     */
    where?: SecurityGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroups to fetch.
     */
    orderBy?: SecurityGroupOrderByWithRelationInput | SecurityGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityGroups.
     */
    cursor?: SecurityGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityGroups.
     */
    distinct?: SecurityGroupScalarFieldEnum | SecurityGroupScalarFieldEnum[]
  }

  /**
   * SecurityGroup findFirstOrThrow
   */
  export type SecurityGroupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroup to fetch.
     */
    where?: SecurityGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroups to fetch.
     */
    orderBy?: SecurityGroupOrderByWithRelationInput | SecurityGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityGroups.
     */
    cursor?: SecurityGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityGroups.
     */
    distinct?: SecurityGroupScalarFieldEnum | SecurityGroupScalarFieldEnum[]
  }

  /**
   * SecurityGroup findMany
   */
  export type SecurityGroupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroups to fetch.
     */
    where?: SecurityGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroups to fetch.
     */
    orderBy?: SecurityGroupOrderByWithRelationInput | SecurityGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SecurityGroups.
     */
    cursor?: SecurityGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroups.
     */
    skip?: number
    distinct?: SecurityGroupScalarFieldEnum | SecurityGroupScalarFieldEnum[]
  }

  /**
   * SecurityGroup create
   */
  export type SecurityGroupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * The data needed to create a SecurityGroup.
     */
    data: XOR<SecurityGroupCreateInput, SecurityGroupUncheckedCreateInput>
  }

  /**
   * SecurityGroup createMany
   */
  export type SecurityGroupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SecurityGroups.
     */
    data: SecurityGroupCreateManyInput | SecurityGroupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SecurityGroup update
   */
  export type SecurityGroupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * The data needed to update a SecurityGroup.
     */
    data: XOR<SecurityGroupUpdateInput, SecurityGroupUncheckedUpdateInput>
    /**
     * Choose, which SecurityGroup to update.
     */
    where: SecurityGroupWhereUniqueInput
  }

  /**
   * SecurityGroup updateMany
   */
  export type SecurityGroupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SecurityGroups.
     */
    data: XOR<SecurityGroupUpdateManyMutationInput, SecurityGroupUncheckedUpdateManyInput>
    /**
     * Filter which SecurityGroups to update
     */
    where?: SecurityGroupWhereInput
  }

  /**
   * SecurityGroup upsert
   */
  export type SecurityGroupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * The filter to search for the SecurityGroup to update in case it exists.
     */
    where: SecurityGroupWhereUniqueInput
    /**
     * In case the SecurityGroup found by the `where` argument doesn't exist, create a new SecurityGroup with this data.
     */
    create: XOR<SecurityGroupCreateInput, SecurityGroupUncheckedCreateInput>
    /**
     * In case the SecurityGroup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SecurityGroupUpdateInput, SecurityGroupUncheckedUpdateInput>
  }

  /**
   * SecurityGroup delete
   */
  export type SecurityGroupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
    /**
     * Filter which SecurityGroup to delete.
     */
    where: SecurityGroupWhereUniqueInput
  }

  /**
   * SecurityGroup deleteMany
   */
  export type SecurityGroupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityGroups to delete
     */
    where?: SecurityGroupWhereInput
  }

  /**
   * SecurityGroup.SecurityGroupRules
   */
  export type SecurityGroup$SecurityGroupRulesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    where?: SecurityGroupRuleWhereInput
    orderBy?: SecurityGroupRuleOrderByWithRelationInput | SecurityGroupRuleOrderByWithRelationInput[]
    cursor?: SecurityGroupRuleWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SecurityGroupRuleScalarFieldEnum | SecurityGroupRuleScalarFieldEnum[]
  }

  /**
   * SecurityGroup.UserGroups
   */
  export type SecurityGroup$UserGroupsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    where?: UserGroupWhereInput
    orderBy?: UserGroupOrderByWithRelationInput | UserGroupOrderByWithRelationInput[]
    cursor?: UserGroupWhereUniqueInput
    take?: number
    skip?: number
    distinct?: UserGroupScalarFieldEnum | UserGroupScalarFieldEnum[]
  }

  /**
   * SecurityGroup without action
   */
  export type SecurityGroupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroup
     */
    select?: SecurityGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupInclude<ExtArgs> | null
  }


  /**
   * Model SecurityGroupRule
   */

  export type AggregateSecurityGroupRule = {
    _count: SecurityGroupRuleCountAggregateOutputType | null
    _min: SecurityGroupRuleMinAggregateOutputType | null
    _max: SecurityGroupRuleMaxAggregateOutputType | null
  }

  export type SecurityGroupRuleMinAggregateOutputType = {
    id: string | null
    group_id: string | null
    rule_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityGroupRuleMaxAggregateOutputType = {
    id: string | null
    group_id: string | null
    rule_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SecurityGroupRuleCountAggregateOutputType = {
    id: number
    group_id: number
    rule_id: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type SecurityGroupRuleMinAggregateInputType = {
    id?: true
    group_id?: true
    rule_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityGroupRuleMaxAggregateInputType = {
    id?: true
    group_id?: true
    rule_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SecurityGroupRuleCountAggregateInputType = {
    id?: true
    group_id?: true
    rule_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type SecurityGroupRuleAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityGroupRule to aggregate.
     */
    where?: SecurityGroupRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroupRules to fetch.
     */
    orderBy?: SecurityGroupRuleOrderByWithRelationInput | SecurityGroupRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SecurityGroupRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroupRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroupRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SecurityGroupRules
    **/
    _count?: true | SecurityGroupRuleCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SecurityGroupRuleMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SecurityGroupRuleMaxAggregateInputType
  }

  export type GetSecurityGroupRuleAggregateType<T extends SecurityGroupRuleAggregateArgs> = {
        [P in keyof T & keyof AggregateSecurityGroupRule]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSecurityGroupRule[P]>
      : GetScalarType<T[P], AggregateSecurityGroupRule[P]>
  }




  export type SecurityGroupRuleGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SecurityGroupRuleWhereInput
    orderBy?: SecurityGroupRuleOrderByWithAggregationInput | SecurityGroupRuleOrderByWithAggregationInput[]
    by: SecurityGroupRuleScalarFieldEnum[] | SecurityGroupRuleScalarFieldEnum
    having?: SecurityGroupRuleScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SecurityGroupRuleCountAggregateInputType | true
    _min?: SecurityGroupRuleMinAggregateInputType
    _max?: SecurityGroupRuleMaxAggregateInputType
  }

  export type SecurityGroupRuleGroupByOutputType = {
    id: string
    group_id: string
    rule_id: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: SecurityGroupRuleCountAggregateOutputType | null
    _min: SecurityGroupRuleMinAggregateOutputType | null
    _max: SecurityGroupRuleMaxAggregateOutputType | null
  }

  type GetSecurityGroupRuleGroupByPayload<T extends SecurityGroupRuleGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SecurityGroupRuleGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SecurityGroupRuleGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SecurityGroupRuleGroupByOutputType[P]>
            : GetScalarType<T[P], SecurityGroupRuleGroupByOutputType[P]>
        }
      >
    >


  export type SecurityGroupRuleSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    group_id?: boolean
    rule_id?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    security_group?: boolean | SecurityGroupDefaultArgs<ExtArgs>
    security_rule?: boolean | SecurityRuleDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["securityGroupRule"]>


  export type SecurityGroupRuleSelectScalar = {
    id?: boolean
    group_id?: boolean
    rule_id?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type SecurityGroupRuleInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    security_group?: boolean | SecurityGroupDefaultArgs<ExtArgs>
    security_rule?: boolean | SecurityRuleDefaultArgs<ExtArgs>
  }

  export type $SecurityGroupRulePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SecurityGroupRule"
    objects: {
      security_group: Prisma.$SecurityGroupPayload<ExtArgs>
      security_rule: Prisma.$SecurityRulePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      group_id: string
      rule_id: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["securityGroupRule"]>
    composites: {}
  }

  type SecurityGroupRuleGetPayload<S extends boolean | null | undefined | SecurityGroupRuleDefaultArgs> = $Result.GetResult<Prisma.$SecurityGroupRulePayload, S>

  type SecurityGroupRuleCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SecurityGroupRuleFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SecurityGroupRuleCountAggregateInputType | true
    }

  export interface SecurityGroupRuleDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SecurityGroupRule'], meta: { name: 'SecurityGroupRule' } }
    /**
     * Find zero or one SecurityGroupRule that matches the filter.
     * @param {SecurityGroupRuleFindUniqueArgs} args - Arguments to find a SecurityGroupRule
     * @example
     * // Get one SecurityGroupRule
     * const securityGroupRule = await prisma.securityGroupRule.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SecurityGroupRuleFindUniqueArgs>(args: SelectSubset<T, SecurityGroupRuleFindUniqueArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SecurityGroupRule that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SecurityGroupRuleFindUniqueOrThrowArgs} args - Arguments to find a SecurityGroupRule
     * @example
     * // Get one SecurityGroupRule
     * const securityGroupRule = await prisma.securityGroupRule.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SecurityGroupRuleFindUniqueOrThrowArgs>(args: SelectSubset<T, SecurityGroupRuleFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SecurityGroupRule that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleFindFirstArgs} args - Arguments to find a SecurityGroupRule
     * @example
     * // Get one SecurityGroupRule
     * const securityGroupRule = await prisma.securityGroupRule.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SecurityGroupRuleFindFirstArgs>(args?: SelectSubset<T, SecurityGroupRuleFindFirstArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SecurityGroupRule that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleFindFirstOrThrowArgs} args - Arguments to find a SecurityGroupRule
     * @example
     * // Get one SecurityGroupRule
     * const securityGroupRule = await prisma.securityGroupRule.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SecurityGroupRuleFindFirstOrThrowArgs>(args?: SelectSubset<T, SecurityGroupRuleFindFirstOrThrowArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SecurityGroupRules that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SecurityGroupRules
     * const securityGroupRules = await prisma.securityGroupRule.findMany()
     * 
     * // Get first 10 SecurityGroupRules
     * const securityGroupRules = await prisma.securityGroupRule.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const securityGroupRuleWithIdOnly = await prisma.securityGroupRule.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SecurityGroupRuleFindManyArgs>(args?: SelectSubset<T, SecurityGroupRuleFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SecurityGroupRule.
     * @param {SecurityGroupRuleCreateArgs} args - Arguments to create a SecurityGroupRule.
     * @example
     * // Create one SecurityGroupRule
     * const SecurityGroupRule = await prisma.securityGroupRule.create({
     *   data: {
     *     // ... data to create a SecurityGroupRule
     *   }
     * })
     * 
     */
    create<T extends SecurityGroupRuleCreateArgs>(args: SelectSubset<T, SecurityGroupRuleCreateArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SecurityGroupRules.
     * @param {SecurityGroupRuleCreateManyArgs} args - Arguments to create many SecurityGroupRules.
     * @example
     * // Create many SecurityGroupRules
     * const securityGroupRule = await prisma.securityGroupRule.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SecurityGroupRuleCreateManyArgs>(args?: SelectSubset<T, SecurityGroupRuleCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SecurityGroupRule.
     * @param {SecurityGroupRuleDeleteArgs} args - Arguments to delete one SecurityGroupRule.
     * @example
     * // Delete one SecurityGroupRule
     * const SecurityGroupRule = await prisma.securityGroupRule.delete({
     *   where: {
     *     // ... filter to delete one SecurityGroupRule
     *   }
     * })
     * 
     */
    delete<T extends SecurityGroupRuleDeleteArgs>(args: SelectSubset<T, SecurityGroupRuleDeleteArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SecurityGroupRule.
     * @param {SecurityGroupRuleUpdateArgs} args - Arguments to update one SecurityGroupRule.
     * @example
     * // Update one SecurityGroupRule
     * const securityGroupRule = await prisma.securityGroupRule.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SecurityGroupRuleUpdateArgs>(args: SelectSubset<T, SecurityGroupRuleUpdateArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SecurityGroupRules.
     * @param {SecurityGroupRuleDeleteManyArgs} args - Arguments to filter SecurityGroupRules to delete.
     * @example
     * // Delete a few SecurityGroupRules
     * const { count } = await prisma.securityGroupRule.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SecurityGroupRuleDeleteManyArgs>(args?: SelectSubset<T, SecurityGroupRuleDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SecurityGroupRules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SecurityGroupRules
     * const securityGroupRule = await prisma.securityGroupRule.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SecurityGroupRuleUpdateManyArgs>(args: SelectSubset<T, SecurityGroupRuleUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SecurityGroupRule.
     * @param {SecurityGroupRuleUpsertArgs} args - Arguments to update or create a SecurityGroupRule.
     * @example
     * // Update or create a SecurityGroupRule
     * const securityGroupRule = await prisma.securityGroupRule.upsert({
     *   create: {
     *     // ... data to create a SecurityGroupRule
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SecurityGroupRule we want to update
     *   }
     * })
     */
    upsert<T extends SecurityGroupRuleUpsertArgs>(args: SelectSubset<T, SecurityGroupRuleUpsertArgs<ExtArgs>>): Prisma__SecurityGroupRuleClient<$Result.GetResult<Prisma.$SecurityGroupRulePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SecurityGroupRules.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleCountArgs} args - Arguments to filter SecurityGroupRules to count.
     * @example
     * // Count the number of SecurityGroupRules
     * const count = await prisma.securityGroupRule.count({
     *   where: {
     *     // ... the filter for the SecurityGroupRules we want to count
     *   }
     * })
    **/
    count<T extends SecurityGroupRuleCountArgs>(
      args?: Subset<T, SecurityGroupRuleCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SecurityGroupRuleCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SecurityGroupRule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SecurityGroupRuleAggregateArgs>(args: Subset<T, SecurityGroupRuleAggregateArgs>): Prisma.PrismaPromise<GetSecurityGroupRuleAggregateType<T>>

    /**
     * Group by SecurityGroupRule.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SecurityGroupRuleGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SecurityGroupRuleGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SecurityGroupRuleGroupByArgs['orderBy'] }
        : { orderBy?: SecurityGroupRuleGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SecurityGroupRuleGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSecurityGroupRuleGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SecurityGroupRule model
   */
  readonly fields: SecurityGroupRuleFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SecurityGroupRule.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SecurityGroupRuleClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    security_group<T extends SecurityGroupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SecurityGroupDefaultArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    security_rule<T extends SecurityRuleDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SecurityRuleDefaultArgs<ExtArgs>>): Prisma__SecurityRuleClient<$Result.GetResult<Prisma.$SecurityRulePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SecurityGroupRule model
   */ 
  interface SecurityGroupRuleFieldRefs {
    readonly id: FieldRef<"SecurityGroupRule", 'String'>
    readonly group_id: FieldRef<"SecurityGroupRule", 'String'>
    readonly rule_id: FieldRef<"SecurityGroupRule", 'String'>
    readonly created_at: FieldRef<"SecurityGroupRule", 'DateTime'>
    readonly created_by: FieldRef<"SecurityGroupRule", 'String'>
    readonly created_ip: FieldRef<"SecurityGroupRule", 'String'>
    readonly updated_at: FieldRef<"SecurityGroupRule", 'DateTime'>
    readonly updated_by: FieldRef<"SecurityGroupRule", 'String'>
    readonly updated_ip: FieldRef<"SecurityGroupRule", 'String'>
    readonly company_id: FieldRef<"SecurityGroupRule", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SecurityGroupRule findUnique
   */
  export type SecurityGroupRuleFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroupRule to fetch.
     */
    where: SecurityGroupRuleWhereUniqueInput
  }

  /**
   * SecurityGroupRule findUniqueOrThrow
   */
  export type SecurityGroupRuleFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroupRule to fetch.
     */
    where: SecurityGroupRuleWhereUniqueInput
  }

  /**
   * SecurityGroupRule findFirst
   */
  export type SecurityGroupRuleFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroupRule to fetch.
     */
    where?: SecurityGroupRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroupRules to fetch.
     */
    orderBy?: SecurityGroupRuleOrderByWithRelationInput | SecurityGroupRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityGroupRules.
     */
    cursor?: SecurityGroupRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroupRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroupRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityGroupRules.
     */
    distinct?: SecurityGroupRuleScalarFieldEnum | SecurityGroupRuleScalarFieldEnum[]
  }

  /**
   * SecurityGroupRule findFirstOrThrow
   */
  export type SecurityGroupRuleFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroupRule to fetch.
     */
    where?: SecurityGroupRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroupRules to fetch.
     */
    orderBy?: SecurityGroupRuleOrderByWithRelationInput | SecurityGroupRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SecurityGroupRules.
     */
    cursor?: SecurityGroupRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroupRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroupRules.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SecurityGroupRules.
     */
    distinct?: SecurityGroupRuleScalarFieldEnum | SecurityGroupRuleScalarFieldEnum[]
  }

  /**
   * SecurityGroupRule findMany
   */
  export type SecurityGroupRuleFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * Filter, which SecurityGroupRules to fetch.
     */
    where?: SecurityGroupRuleWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SecurityGroupRules to fetch.
     */
    orderBy?: SecurityGroupRuleOrderByWithRelationInput | SecurityGroupRuleOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SecurityGroupRules.
     */
    cursor?: SecurityGroupRuleWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SecurityGroupRules from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SecurityGroupRules.
     */
    skip?: number
    distinct?: SecurityGroupRuleScalarFieldEnum | SecurityGroupRuleScalarFieldEnum[]
  }

  /**
   * SecurityGroupRule create
   */
  export type SecurityGroupRuleCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * The data needed to create a SecurityGroupRule.
     */
    data: XOR<SecurityGroupRuleCreateInput, SecurityGroupRuleUncheckedCreateInput>
  }

  /**
   * SecurityGroupRule createMany
   */
  export type SecurityGroupRuleCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SecurityGroupRules.
     */
    data: SecurityGroupRuleCreateManyInput | SecurityGroupRuleCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SecurityGroupRule update
   */
  export type SecurityGroupRuleUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * The data needed to update a SecurityGroupRule.
     */
    data: XOR<SecurityGroupRuleUpdateInput, SecurityGroupRuleUncheckedUpdateInput>
    /**
     * Choose, which SecurityGroupRule to update.
     */
    where: SecurityGroupRuleWhereUniqueInput
  }

  /**
   * SecurityGroupRule updateMany
   */
  export type SecurityGroupRuleUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SecurityGroupRules.
     */
    data: XOR<SecurityGroupRuleUpdateManyMutationInput, SecurityGroupRuleUncheckedUpdateManyInput>
    /**
     * Filter which SecurityGroupRules to update
     */
    where?: SecurityGroupRuleWhereInput
  }

  /**
   * SecurityGroupRule upsert
   */
  export type SecurityGroupRuleUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * The filter to search for the SecurityGroupRule to update in case it exists.
     */
    where: SecurityGroupRuleWhereUniqueInput
    /**
     * In case the SecurityGroupRule found by the `where` argument doesn't exist, create a new SecurityGroupRule with this data.
     */
    create: XOR<SecurityGroupRuleCreateInput, SecurityGroupRuleUncheckedCreateInput>
    /**
     * In case the SecurityGroupRule was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SecurityGroupRuleUpdateInput, SecurityGroupRuleUncheckedUpdateInput>
  }

  /**
   * SecurityGroupRule delete
   */
  export type SecurityGroupRuleDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
    /**
     * Filter which SecurityGroupRule to delete.
     */
    where: SecurityGroupRuleWhereUniqueInput
  }

  /**
   * SecurityGroupRule deleteMany
   */
  export type SecurityGroupRuleDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SecurityGroupRules to delete
     */
    where?: SecurityGroupRuleWhereInput
  }

  /**
   * SecurityGroupRule without action
   */
  export type SecurityGroupRuleDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SecurityGroupRule
     */
    select?: SecurityGroupRuleSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SecurityGroupRuleInclude<ExtArgs> | null
  }


  /**
   * Model UserGroup
   */

  export type AggregateUserGroup = {
    _count: UserGroupCountAggregateOutputType | null
    _min: UserGroupMinAggregateOutputType | null
    _max: UserGroupMaxAggregateOutputType | null
  }

  export type UserGroupMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    group_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type UserGroupMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    group_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type UserGroupCountAggregateOutputType = {
    id: number
    user_id: number
    group_id: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type UserGroupMinAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type UserGroupMaxAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type UserGroupCountAggregateInputType = {
    id?: true
    user_id?: true
    group_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type UserGroupAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserGroup to aggregate.
     */
    where?: UserGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserGroups to fetch.
     */
    orderBy?: UserGroupOrderByWithRelationInput | UserGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserGroups
    **/
    _count?: true | UserGroupCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserGroupMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserGroupMaxAggregateInputType
  }

  export type GetUserGroupAggregateType<T extends UserGroupAggregateArgs> = {
        [P in keyof T & keyof AggregateUserGroup]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserGroup[P]>
      : GetScalarType<T[P], AggregateUserGroup[P]>
  }




  export type UserGroupGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserGroupWhereInput
    orderBy?: UserGroupOrderByWithAggregationInput | UserGroupOrderByWithAggregationInput[]
    by: UserGroupScalarFieldEnum[] | UserGroupScalarFieldEnum
    having?: UserGroupScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserGroupCountAggregateInputType | true
    _min?: UserGroupMinAggregateInputType
    _max?: UserGroupMaxAggregateInputType
  }

  export type UserGroupGroupByOutputType = {
    id: string
    user_id: string
    group_id: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: UserGroupCountAggregateOutputType | null
    _min: UserGroupMinAggregateOutputType | null
    _max: UserGroupMaxAggregateOutputType | null
  }

  type GetUserGroupGroupByPayload<T extends UserGroupGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserGroupGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserGroupGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserGroupGroupByOutputType[P]>
            : GetScalarType<T[P], UserGroupGroupByOutputType[P]>
        }
      >
    >


  export type UserGroupSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
    security_group?: boolean | SecurityGroupDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userGroup"]>


  export type UserGroupSelectScalar = {
    id?: boolean
    user_id?: boolean
    group_id?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type UserGroupInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
    security_group?: boolean | SecurityGroupDefaultArgs<ExtArgs>
  }

  export type $UserGroupPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserGroup"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
      security_group: Prisma.$SecurityGroupPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      group_id: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["userGroup"]>
    composites: {}
  }

  type UserGroupGetPayload<S extends boolean | null | undefined | UserGroupDefaultArgs> = $Result.GetResult<Prisma.$UserGroupPayload, S>

  type UserGroupCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserGroupFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserGroupCountAggregateInputType | true
    }

  export interface UserGroupDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserGroup'], meta: { name: 'UserGroup' } }
    /**
     * Find zero or one UserGroup that matches the filter.
     * @param {UserGroupFindUniqueArgs} args - Arguments to find a UserGroup
     * @example
     * // Get one UserGroup
     * const userGroup = await prisma.userGroup.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserGroupFindUniqueArgs>(args: SelectSubset<T, UserGroupFindUniqueArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserGroup that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserGroupFindUniqueOrThrowArgs} args - Arguments to find a UserGroup
     * @example
     * // Get one UserGroup
     * const userGroup = await prisma.userGroup.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserGroupFindUniqueOrThrowArgs>(args: SelectSubset<T, UserGroupFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserGroup that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupFindFirstArgs} args - Arguments to find a UserGroup
     * @example
     * // Get one UserGroup
     * const userGroup = await prisma.userGroup.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserGroupFindFirstArgs>(args?: SelectSubset<T, UserGroupFindFirstArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserGroup that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupFindFirstOrThrowArgs} args - Arguments to find a UserGroup
     * @example
     * // Get one UserGroup
     * const userGroup = await prisma.userGroup.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserGroupFindFirstOrThrowArgs>(args?: SelectSubset<T, UserGroupFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserGroups that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserGroups
     * const userGroups = await prisma.userGroup.findMany()
     * 
     * // Get first 10 UserGroups
     * const userGroups = await prisma.userGroup.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userGroupWithIdOnly = await prisma.userGroup.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserGroupFindManyArgs>(args?: SelectSubset<T, UserGroupFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserGroup.
     * @param {UserGroupCreateArgs} args - Arguments to create a UserGroup.
     * @example
     * // Create one UserGroup
     * const UserGroup = await prisma.userGroup.create({
     *   data: {
     *     // ... data to create a UserGroup
     *   }
     * })
     * 
     */
    create<T extends UserGroupCreateArgs>(args: SelectSubset<T, UserGroupCreateArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserGroups.
     * @param {UserGroupCreateManyArgs} args - Arguments to create many UserGroups.
     * @example
     * // Create many UserGroups
     * const userGroup = await prisma.userGroup.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserGroupCreateManyArgs>(args?: SelectSubset<T, UserGroupCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a UserGroup.
     * @param {UserGroupDeleteArgs} args - Arguments to delete one UserGroup.
     * @example
     * // Delete one UserGroup
     * const UserGroup = await prisma.userGroup.delete({
     *   where: {
     *     // ... filter to delete one UserGroup
     *   }
     * })
     * 
     */
    delete<T extends UserGroupDeleteArgs>(args: SelectSubset<T, UserGroupDeleteArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserGroup.
     * @param {UserGroupUpdateArgs} args - Arguments to update one UserGroup.
     * @example
     * // Update one UserGroup
     * const userGroup = await prisma.userGroup.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserGroupUpdateArgs>(args: SelectSubset<T, UserGroupUpdateArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserGroups.
     * @param {UserGroupDeleteManyArgs} args - Arguments to filter UserGroups to delete.
     * @example
     * // Delete a few UserGroups
     * const { count } = await prisma.userGroup.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserGroupDeleteManyArgs>(args?: SelectSubset<T, UserGroupDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserGroups
     * const userGroup = await prisma.userGroup.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserGroupUpdateManyArgs>(args: SelectSubset<T, UserGroupUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserGroup.
     * @param {UserGroupUpsertArgs} args - Arguments to update or create a UserGroup.
     * @example
     * // Update or create a UserGroup
     * const userGroup = await prisma.userGroup.upsert({
     *   create: {
     *     // ... data to create a UserGroup
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserGroup we want to update
     *   }
     * })
     */
    upsert<T extends UserGroupUpsertArgs>(args: SelectSubset<T, UserGroupUpsertArgs<ExtArgs>>): Prisma__UserGroupClient<$Result.GetResult<Prisma.$UserGroupPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserGroups.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupCountArgs} args - Arguments to filter UserGroups to count.
     * @example
     * // Count the number of UserGroups
     * const count = await prisma.userGroup.count({
     *   where: {
     *     // ... the filter for the UserGroups we want to count
     *   }
     * })
    **/
    count<T extends UserGroupCountArgs>(
      args?: Subset<T, UserGroupCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserGroupCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserGroupAggregateArgs>(args: Subset<T, UserGroupAggregateArgs>): Prisma.PrismaPromise<GetUserGroupAggregateType<T>>

    /**
     * Group by UserGroup.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserGroupGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserGroupGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserGroupGroupByArgs['orderBy'] }
        : { orderBy?: UserGroupGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserGroupGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserGroupGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserGroup model
   */
  readonly fields: UserGroupFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserGroup.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserGroupClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    security_group<T extends SecurityGroupDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SecurityGroupDefaultArgs<ExtArgs>>): Prisma__SecurityGroupClient<$Result.GetResult<Prisma.$SecurityGroupPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserGroup model
   */ 
  interface UserGroupFieldRefs {
    readonly id: FieldRef<"UserGroup", 'String'>
    readonly user_id: FieldRef<"UserGroup", 'String'>
    readonly group_id: FieldRef<"UserGroup", 'String'>
    readonly created_at: FieldRef<"UserGroup", 'DateTime'>
    readonly created_by: FieldRef<"UserGroup", 'String'>
    readonly created_ip: FieldRef<"UserGroup", 'String'>
    readonly updated_at: FieldRef<"UserGroup", 'DateTime'>
    readonly updated_by: FieldRef<"UserGroup", 'String'>
    readonly updated_ip: FieldRef<"UserGroup", 'String'>
    readonly company_id: FieldRef<"UserGroup", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UserGroup findUnique
   */
  export type UserGroupFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * Filter, which UserGroup to fetch.
     */
    where: UserGroupWhereUniqueInput
  }

  /**
   * UserGroup findUniqueOrThrow
   */
  export type UserGroupFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * Filter, which UserGroup to fetch.
     */
    where: UserGroupWhereUniqueInput
  }

  /**
   * UserGroup findFirst
   */
  export type UserGroupFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * Filter, which UserGroup to fetch.
     */
    where?: UserGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserGroups to fetch.
     */
    orderBy?: UserGroupOrderByWithRelationInput | UserGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserGroups.
     */
    cursor?: UserGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserGroups.
     */
    distinct?: UserGroupScalarFieldEnum | UserGroupScalarFieldEnum[]
  }

  /**
   * UserGroup findFirstOrThrow
   */
  export type UserGroupFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * Filter, which UserGroup to fetch.
     */
    where?: UserGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserGroups to fetch.
     */
    orderBy?: UserGroupOrderByWithRelationInput | UserGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserGroups.
     */
    cursor?: UserGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserGroups.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserGroups.
     */
    distinct?: UserGroupScalarFieldEnum | UserGroupScalarFieldEnum[]
  }

  /**
   * UserGroup findMany
   */
  export type UserGroupFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * Filter, which UserGroups to fetch.
     */
    where?: UserGroupWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserGroups to fetch.
     */
    orderBy?: UserGroupOrderByWithRelationInput | UserGroupOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserGroups.
     */
    cursor?: UserGroupWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserGroups from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserGroups.
     */
    skip?: number
    distinct?: UserGroupScalarFieldEnum | UserGroupScalarFieldEnum[]
  }

  /**
   * UserGroup create
   */
  export type UserGroupCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * The data needed to create a UserGroup.
     */
    data: XOR<UserGroupCreateInput, UserGroupUncheckedCreateInput>
  }

  /**
   * UserGroup createMany
   */
  export type UserGroupCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserGroups.
     */
    data: UserGroupCreateManyInput | UserGroupCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserGroup update
   */
  export type UserGroupUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * The data needed to update a UserGroup.
     */
    data: XOR<UserGroupUpdateInput, UserGroupUncheckedUpdateInput>
    /**
     * Choose, which UserGroup to update.
     */
    where: UserGroupWhereUniqueInput
  }

  /**
   * UserGroup updateMany
   */
  export type UserGroupUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserGroups.
     */
    data: XOR<UserGroupUpdateManyMutationInput, UserGroupUncheckedUpdateManyInput>
    /**
     * Filter which UserGroups to update
     */
    where?: UserGroupWhereInput
  }

  /**
   * UserGroup upsert
   */
  export type UserGroupUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * The filter to search for the UserGroup to update in case it exists.
     */
    where: UserGroupWhereUniqueInput
    /**
     * In case the UserGroup found by the `where` argument doesn't exist, create a new UserGroup with this data.
     */
    create: XOR<UserGroupCreateInput, UserGroupUncheckedCreateInput>
    /**
     * In case the UserGroup was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserGroupUpdateInput, UserGroupUncheckedUpdateInput>
  }

  /**
   * UserGroup delete
   */
  export type UserGroupDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
    /**
     * Filter which UserGroup to delete.
     */
    where: UserGroupWhereUniqueInput
  }

  /**
   * UserGroup deleteMany
   */
  export type UserGroupDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserGroups to delete
     */
    where?: UserGroupWhereInput
  }

  /**
   * UserGroup without action
   */
  export type UserGroupDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserGroup
     */
    select?: UserGroupSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserGroupInclude<ExtArgs> | null
  }


  /**
   * Model Menu
   */

  export type AggregateMenu = {
    _count: MenuCountAggregateOutputType | null
    _avg: MenuAvgAggregateOutputType | null
    _sum: MenuSumAggregateOutputType | null
    _min: MenuMinAggregateOutputType | null
    _max: MenuMaxAggregateOutputType | null
  }

  export type MenuAvgAggregateOutputType = {
    id: number | null
    parent_id: number | null
    sequence_no: Decimal | null
  }

  export type MenuSumAggregateOutputType = {
    id: number | null
    parent_id: number | null
    sequence_no: Decimal | null
  }

  export type MenuMinAggregateOutputType = {
    id: number | null
    title: string | null
    url: string | null
    icon: string | null
    icon_library: string | null
    parent_id: number | null
    sequence_no: Decimal | null
    is_active: boolean | null
    can_view: boolean | null
    can_create: boolean | null
    can_update: boolean | null
    can_delete: boolean | null
    can_report: boolean | null
  }

  export type MenuMaxAggregateOutputType = {
    id: number | null
    title: string | null
    url: string | null
    icon: string | null
    icon_library: string | null
    parent_id: number | null
    sequence_no: Decimal | null
    is_active: boolean | null
    can_view: boolean | null
    can_create: boolean | null
    can_update: boolean | null
    can_delete: boolean | null
    can_report: boolean | null
  }

  export type MenuCountAggregateOutputType = {
    id: number
    title: number
    url: number
    icon: number
    icon_library: number
    parent_id: number
    sequence_no: number
    is_active: number
    can_view: number
    can_create: number
    can_update: number
    can_delete: number
    can_report: number
    _all: number
  }


  export type MenuAvgAggregateInputType = {
    id?: true
    parent_id?: true
    sequence_no?: true
  }

  export type MenuSumAggregateInputType = {
    id?: true
    parent_id?: true
    sequence_no?: true
  }

  export type MenuMinAggregateInputType = {
    id?: true
    title?: true
    url?: true
    icon?: true
    icon_library?: true
    parent_id?: true
    sequence_no?: true
    is_active?: true
    can_view?: true
    can_create?: true
    can_update?: true
    can_delete?: true
    can_report?: true
  }

  export type MenuMaxAggregateInputType = {
    id?: true
    title?: true
    url?: true
    icon?: true
    icon_library?: true
    parent_id?: true
    sequence_no?: true
    is_active?: true
    can_view?: true
    can_create?: true
    can_update?: true
    can_delete?: true
    can_report?: true
  }

  export type MenuCountAggregateInputType = {
    id?: true
    title?: true
    url?: true
    icon?: true
    icon_library?: true
    parent_id?: true
    sequence_no?: true
    is_active?: true
    can_view?: true
    can_create?: true
    can_update?: true
    can_delete?: true
    can_report?: true
    _all?: true
  }

  export type MenuAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Menu to aggregate.
     */
    where?: MenuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Menus to fetch.
     */
    orderBy?: MenuOrderByWithRelationInput | MenuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: MenuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Menus
    **/
    _count?: true | MenuCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: MenuAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: MenuSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: MenuMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: MenuMaxAggregateInputType
  }

  export type GetMenuAggregateType<T extends MenuAggregateArgs> = {
        [P in keyof T & keyof AggregateMenu]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateMenu[P]>
      : GetScalarType<T[P], AggregateMenu[P]>
  }




  export type MenuGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: MenuWhereInput
    orderBy?: MenuOrderByWithAggregationInput | MenuOrderByWithAggregationInput[]
    by: MenuScalarFieldEnum[] | MenuScalarFieldEnum
    having?: MenuScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: MenuCountAggregateInputType | true
    _avg?: MenuAvgAggregateInputType
    _sum?: MenuSumAggregateInputType
    _min?: MenuMinAggregateInputType
    _max?: MenuMaxAggregateInputType
  }

  export type MenuGroupByOutputType = {
    id: number
    title: string
    url: string | null
    icon: string | null
    icon_library: string | null
    parent_id: number
    sequence_no: Decimal
    is_active: boolean
    can_view: boolean | null
    can_create: boolean | null
    can_update: boolean | null
    can_delete: boolean | null
    can_report: boolean | null
    _count: MenuCountAggregateOutputType | null
    _avg: MenuAvgAggregateOutputType | null
    _sum: MenuSumAggregateOutputType | null
    _min: MenuMinAggregateOutputType | null
    _max: MenuMaxAggregateOutputType | null
  }

  type GetMenuGroupByPayload<T extends MenuGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<MenuGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof MenuGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], MenuGroupByOutputType[P]>
            : GetScalarType<T[P], MenuGroupByOutputType[P]>
        }
      >
    >


  export type MenuSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    url?: boolean
    icon?: boolean
    icon_library?: boolean
    parent_id?: boolean
    sequence_no?: boolean
    is_active?: boolean
    can_view?: boolean
    can_create?: boolean
    can_update?: boolean
    can_delete?: boolean
    can_report?: boolean
  }, ExtArgs["result"]["menu"]>


  export type MenuSelectScalar = {
    id?: boolean
    title?: boolean
    url?: boolean
    icon?: boolean
    icon_library?: boolean
    parent_id?: boolean
    sequence_no?: boolean
    is_active?: boolean
    can_view?: boolean
    can_create?: boolean
    can_update?: boolean
    can_delete?: boolean
    can_report?: boolean
  }


  export type $MenuPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Menu"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      title: string
      url: string | null
      icon: string | null
      icon_library: string | null
      parent_id: number
      sequence_no: Prisma.Decimal
      is_active: boolean
      can_view: boolean | null
      can_create: boolean | null
      can_update: boolean | null
      can_delete: boolean | null
      can_report: boolean | null
    }, ExtArgs["result"]["menu"]>
    composites: {}
  }

  type MenuGetPayload<S extends boolean | null | undefined | MenuDefaultArgs> = $Result.GetResult<Prisma.$MenuPayload, S>

  type MenuCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<MenuFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: MenuCountAggregateInputType | true
    }

  export interface MenuDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Menu'], meta: { name: 'Menu' } }
    /**
     * Find zero or one Menu that matches the filter.
     * @param {MenuFindUniqueArgs} args - Arguments to find a Menu
     * @example
     * // Get one Menu
     * const menu = await prisma.menu.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends MenuFindUniqueArgs>(args: SelectSubset<T, MenuFindUniqueArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Menu that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {MenuFindUniqueOrThrowArgs} args - Arguments to find a Menu
     * @example
     * // Get one Menu
     * const menu = await prisma.menu.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends MenuFindUniqueOrThrowArgs>(args: SelectSubset<T, MenuFindUniqueOrThrowArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Menu that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuFindFirstArgs} args - Arguments to find a Menu
     * @example
     * // Get one Menu
     * const menu = await prisma.menu.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends MenuFindFirstArgs>(args?: SelectSubset<T, MenuFindFirstArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Menu that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuFindFirstOrThrowArgs} args - Arguments to find a Menu
     * @example
     * // Get one Menu
     * const menu = await prisma.menu.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends MenuFindFirstOrThrowArgs>(args?: SelectSubset<T, MenuFindFirstOrThrowArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Menus that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Menus
     * const menus = await prisma.menu.findMany()
     * 
     * // Get first 10 Menus
     * const menus = await prisma.menu.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const menuWithIdOnly = await prisma.menu.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends MenuFindManyArgs>(args?: SelectSubset<T, MenuFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Menu.
     * @param {MenuCreateArgs} args - Arguments to create a Menu.
     * @example
     * // Create one Menu
     * const Menu = await prisma.menu.create({
     *   data: {
     *     // ... data to create a Menu
     *   }
     * })
     * 
     */
    create<T extends MenuCreateArgs>(args: SelectSubset<T, MenuCreateArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Menus.
     * @param {MenuCreateManyArgs} args - Arguments to create many Menus.
     * @example
     * // Create many Menus
     * const menu = await prisma.menu.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends MenuCreateManyArgs>(args?: SelectSubset<T, MenuCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Menu.
     * @param {MenuDeleteArgs} args - Arguments to delete one Menu.
     * @example
     * // Delete one Menu
     * const Menu = await prisma.menu.delete({
     *   where: {
     *     // ... filter to delete one Menu
     *   }
     * })
     * 
     */
    delete<T extends MenuDeleteArgs>(args: SelectSubset<T, MenuDeleteArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Menu.
     * @param {MenuUpdateArgs} args - Arguments to update one Menu.
     * @example
     * // Update one Menu
     * const menu = await prisma.menu.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends MenuUpdateArgs>(args: SelectSubset<T, MenuUpdateArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Menus.
     * @param {MenuDeleteManyArgs} args - Arguments to filter Menus to delete.
     * @example
     * // Delete a few Menus
     * const { count } = await prisma.menu.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends MenuDeleteManyArgs>(args?: SelectSubset<T, MenuDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Menus
     * const menu = await prisma.menu.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends MenuUpdateManyArgs>(args: SelectSubset<T, MenuUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Menu.
     * @param {MenuUpsertArgs} args - Arguments to update or create a Menu.
     * @example
     * // Update or create a Menu
     * const menu = await prisma.menu.upsert({
     *   create: {
     *     // ... data to create a Menu
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Menu we want to update
     *   }
     * })
     */
    upsert<T extends MenuUpsertArgs>(args: SelectSubset<T, MenuUpsertArgs<ExtArgs>>): Prisma__MenuClient<$Result.GetResult<Prisma.$MenuPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Menus.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuCountArgs} args - Arguments to filter Menus to count.
     * @example
     * // Count the number of Menus
     * const count = await prisma.menu.count({
     *   where: {
     *     // ... the filter for the Menus we want to count
     *   }
     * })
    **/
    count<T extends MenuCountArgs>(
      args?: Subset<T, MenuCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], MenuCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Menu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends MenuAggregateArgs>(args: Subset<T, MenuAggregateArgs>): Prisma.PrismaPromise<GetMenuAggregateType<T>>

    /**
     * Group by Menu.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {MenuGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends MenuGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: MenuGroupByArgs['orderBy'] }
        : { orderBy?: MenuGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, MenuGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetMenuGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Menu model
   */
  readonly fields: MenuFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Menu.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__MenuClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Menu model
   */ 
  interface MenuFieldRefs {
    readonly id: FieldRef<"Menu", 'Int'>
    readonly title: FieldRef<"Menu", 'String'>
    readonly url: FieldRef<"Menu", 'String'>
    readonly icon: FieldRef<"Menu", 'String'>
    readonly icon_library: FieldRef<"Menu", 'String'>
    readonly parent_id: FieldRef<"Menu", 'Int'>
    readonly sequence_no: FieldRef<"Menu", 'Decimal'>
    readonly is_active: FieldRef<"Menu", 'Boolean'>
    readonly can_view: FieldRef<"Menu", 'Boolean'>
    readonly can_create: FieldRef<"Menu", 'Boolean'>
    readonly can_update: FieldRef<"Menu", 'Boolean'>
    readonly can_delete: FieldRef<"Menu", 'Boolean'>
    readonly can_report: FieldRef<"Menu", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * Menu findUnique
   */
  export type MenuFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * Filter, which Menu to fetch.
     */
    where: MenuWhereUniqueInput
  }

  /**
   * Menu findUniqueOrThrow
   */
  export type MenuFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * Filter, which Menu to fetch.
     */
    where: MenuWhereUniqueInput
  }

  /**
   * Menu findFirst
   */
  export type MenuFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * Filter, which Menu to fetch.
     */
    where?: MenuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Menus to fetch.
     */
    orderBy?: MenuOrderByWithRelationInput | MenuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Menus.
     */
    cursor?: MenuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Menus.
     */
    distinct?: MenuScalarFieldEnum | MenuScalarFieldEnum[]
  }

  /**
   * Menu findFirstOrThrow
   */
  export type MenuFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * Filter, which Menu to fetch.
     */
    where?: MenuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Menus to fetch.
     */
    orderBy?: MenuOrderByWithRelationInput | MenuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Menus.
     */
    cursor?: MenuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Menus.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Menus.
     */
    distinct?: MenuScalarFieldEnum | MenuScalarFieldEnum[]
  }

  /**
   * Menu findMany
   */
  export type MenuFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * Filter, which Menus to fetch.
     */
    where?: MenuWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Menus to fetch.
     */
    orderBy?: MenuOrderByWithRelationInput | MenuOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Menus.
     */
    cursor?: MenuWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Menus from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Menus.
     */
    skip?: number
    distinct?: MenuScalarFieldEnum | MenuScalarFieldEnum[]
  }

  /**
   * Menu create
   */
  export type MenuCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * The data needed to create a Menu.
     */
    data: XOR<MenuCreateInput, MenuUncheckedCreateInput>
  }

  /**
   * Menu createMany
   */
  export type MenuCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Menus.
     */
    data: MenuCreateManyInput | MenuCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Menu update
   */
  export type MenuUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * The data needed to update a Menu.
     */
    data: XOR<MenuUpdateInput, MenuUncheckedUpdateInput>
    /**
     * Choose, which Menu to update.
     */
    where: MenuWhereUniqueInput
  }

  /**
   * Menu updateMany
   */
  export type MenuUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Menus.
     */
    data: XOR<MenuUpdateManyMutationInput, MenuUncheckedUpdateManyInput>
    /**
     * Filter which Menus to update
     */
    where?: MenuWhereInput
  }

  /**
   * Menu upsert
   */
  export type MenuUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * The filter to search for the Menu to update in case it exists.
     */
    where: MenuWhereUniqueInput
    /**
     * In case the Menu found by the `where` argument doesn't exist, create a new Menu with this data.
     */
    create: XOR<MenuCreateInput, MenuUncheckedCreateInput>
    /**
     * In case the Menu was found with the provided `where` argument, update it with this data.
     */
    update: XOR<MenuUpdateInput, MenuUncheckedUpdateInput>
  }

  /**
   * Menu delete
   */
  export type MenuDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
    /**
     * Filter which Menu to delete.
     */
    where: MenuWhereUniqueInput
  }

  /**
   * Menu deleteMany
   */
  export type MenuDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Menus to delete
     */
    where?: MenuWhereInput
  }

  /**
   * Menu without action
   */
  export type MenuDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Menu
     */
    select?: MenuSelect<ExtArgs> | null
  }


  /**
   * Model Product
   */

  export type AggregateProduct = {
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  export type ProductAvgAggregateOutputType = {
    price: Decimal | null
    priceRange: Decimal | null
    compareAtPrice: Decimal | null
    stock: Decimal | null
    rating: number | null
    reviewCount: number | null
    salePercentage: Decimal | null
    salePrice: Decimal | null
  }

  export type ProductSumAggregateOutputType = {
    price: Decimal | null
    priceRange: Decimal | null
    compareAtPrice: Decimal | null
    stock: Decimal | null
    rating: number | null
    reviewCount: number | null
    salePercentage: Decimal | null
    salePrice: Decimal | null
  }

  export type ProductMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    description: string | null
    price: Decimal | null
    priceRange: Decimal | null
    compareAtPrice: Decimal | null
    thumbnail: string | null
    hasVariants: boolean | null
    stock: Decimal | null
    rating: number | null
    reviewCount: number | null
    status: string | null
    isFeatured: boolean | null
    isNew: boolean | null
    onSale: boolean | null
    salePercentage: Decimal | null
    salePrice: Decimal | null
    saleStartDate: Date | null
    saleEndDate: Date | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
    categoryId: string | null
    subcategoryId: string | null
    brandId: string | null
    sellerId: string | null
    specialOfferId: string | null
  }

  export type ProductMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    description: string | null
    price: Decimal | null
    priceRange: Decimal | null
    compareAtPrice: Decimal | null
    thumbnail: string | null
    hasVariants: boolean | null
    stock: Decimal | null
    rating: number | null
    reviewCount: number | null
    status: string | null
    isFeatured: boolean | null
    isNew: boolean | null
    onSale: boolean | null
    salePercentage: Decimal | null
    salePrice: Decimal | null
    saleStartDate: Date | null
    saleEndDate: Date | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
    categoryId: string | null
    subcategoryId: string | null
    brandId: string | null
    sellerId: string | null
    specialOfferId: string | null
  }

  export type ProductCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    description: number
    price: number
    priceRange: number
    compareAtPrice: number
    images: number
    thumbnail: number
    hasVariants: number
    stock: number
    tags: number
    rating: number
    reviewCount: number
    status: number
    isFeatured: number
    isNew: number
    onSale: number
    salePercentage: number
    salePrice: number
    saleStartDate: number
    saleEndDate: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    categoryId: number
    subcategoryId: number
    brandId: number
    sellerId: number
    specialOfferId: number
    _all: number
  }


  export type ProductAvgAggregateInputType = {
    price?: true
    priceRange?: true
    compareAtPrice?: true
    stock?: true
    rating?: true
    reviewCount?: true
    salePercentage?: true
    salePrice?: true
  }

  export type ProductSumAggregateInputType = {
    price?: true
    priceRange?: true
    compareAtPrice?: true
    stock?: true
    rating?: true
    reviewCount?: true
    salePercentage?: true
    salePrice?: true
  }

  export type ProductMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    price?: true
    priceRange?: true
    compareAtPrice?: true
    thumbnail?: true
    hasVariants?: true
    stock?: true
    rating?: true
    reviewCount?: true
    status?: true
    isFeatured?: true
    isNew?: true
    onSale?: true
    salePercentage?: true
    salePrice?: true
    saleStartDate?: true
    saleEndDate?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    categoryId?: true
    subcategoryId?: true
    brandId?: true
    sellerId?: true
    specialOfferId?: true
  }

  export type ProductMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    price?: true
    priceRange?: true
    compareAtPrice?: true
    thumbnail?: true
    hasVariants?: true
    stock?: true
    rating?: true
    reviewCount?: true
    status?: true
    isFeatured?: true
    isNew?: true
    onSale?: true
    salePercentage?: true
    salePrice?: true
    saleStartDate?: true
    saleEndDate?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    categoryId?: true
    subcategoryId?: true
    brandId?: true
    sellerId?: true
    specialOfferId?: true
  }

  export type ProductCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    description?: true
    price?: true
    priceRange?: true
    compareAtPrice?: true
    images?: true
    thumbnail?: true
    hasVariants?: true
    stock?: true
    tags?: true
    rating?: true
    reviewCount?: true
    status?: true
    isFeatured?: true
    isNew?: true
    onSale?: true
    salePercentage?: true
    salePrice?: true
    saleStartDate?: true
    saleEndDate?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    categoryId?: true
    subcategoryId?: true
    brandId?: true
    sellerId?: true
    specialOfferId?: true
    _all?: true
  }

  export type ProductAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Product to aggregate.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Products
    **/
    _count?: true | ProductCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductMaxAggregateInputType
  }

  export type GetProductAggregateType<T extends ProductAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct[P]>
      : GetScalarType<T[P], AggregateProduct[P]>
  }




  export type ProductGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithAggregationInput | ProductOrderByWithAggregationInput[]
    by: ProductScalarFieldEnum[] | ProductScalarFieldEnum
    having?: ProductScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductCountAggregateInputType | true
    _avg?: ProductAvgAggregateInputType
    _sum?: ProductSumAggregateInputType
    _min?: ProductMinAggregateInputType
    _max?: ProductMaxAggregateInputType
  }

  export type ProductGroupByOutputType = {
    id: string
    name: string
    slug: string
    description: string
    price: Decimal
    priceRange: Decimal | null
    compareAtPrice: Decimal | null
    images: JsonValue
    thumbnail: string
    hasVariants: boolean
    stock: Decimal
    tags: JsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured: boolean
    isNew: boolean
    onSale: boolean
    salePercentage: Decimal | null
    salePrice: Decimal | null
    saleStartDate: Date | null
    saleEndDate: Date | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    brandId: string
    sellerId: string
    specialOfferId: string | null
    _count: ProductCountAggregateOutputType | null
    _avg: ProductAvgAggregateOutputType | null
    _sum: ProductSumAggregateOutputType | null
    _min: ProductMinAggregateOutputType | null
    _max: ProductMaxAggregateOutputType | null
  }

  type GetProductGroupByPayload<T extends ProductGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductGroupByOutputType[P]>
            : GetScalarType<T[P], ProductGroupByOutputType[P]>
        }
      >
    >


  export type ProductSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    price?: boolean
    priceRange?: boolean
    compareAtPrice?: boolean
    images?: boolean
    thumbnail?: boolean
    hasVariants?: boolean
    stock?: boolean
    tags?: boolean
    rating?: boolean
    reviewCount?: boolean
    status?: boolean
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: boolean
    salePrice?: boolean
    saleStartDate?: boolean
    saleEndDate?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    categoryId?: boolean
    subcategoryId?: boolean
    brandId?: boolean
    sellerId?: boolean
    specialOfferId?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    subcategory?: boolean | SubcategoryDefaultArgs<ExtArgs>
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    seller?: boolean | SellerDefaultArgs<ExtArgs>
    attributes?: boolean | Product$attributesArgs<ExtArgs>
    variants?: boolean | Product$variantsArgs<ExtArgs>
    reviews?: boolean | Product$reviewsArgs<ExtArgs>
    Wishlist?: boolean | Product$WishlistArgs<ExtArgs>
    SpecialOffer?: boolean | Product$SpecialOfferArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product"]>


  export type ProductSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    description?: boolean
    price?: boolean
    priceRange?: boolean
    compareAtPrice?: boolean
    images?: boolean
    thumbnail?: boolean
    hasVariants?: boolean
    stock?: boolean
    tags?: boolean
    rating?: boolean
    reviewCount?: boolean
    status?: boolean
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: boolean
    salePrice?: boolean
    saleStartDate?: boolean
    saleEndDate?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    categoryId?: boolean
    subcategoryId?: boolean
    brandId?: boolean
    sellerId?: boolean
    specialOfferId?: boolean
  }

  export type ProductInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    subcategory?: boolean | SubcategoryDefaultArgs<ExtArgs>
    brand?: boolean | BrandDefaultArgs<ExtArgs>
    seller?: boolean | SellerDefaultArgs<ExtArgs>
    attributes?: boolean | Product$attributesArgs<ExtArgs>
    variants?: boolean | Product$variantsArgs<ExtArgs>
    reviews?: boolean | Product$reviewsArgs<ExtArgs>
    Wishlist?: boolean | Product$WishlistArgs<ExtArgs>
    SpecialOffer?: boolean | Product$SpecialOfferArgs<ExtArgs>
    _count?: boolean | ProductCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $ProductPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Product"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs>
      subcategory: Prisma.$SubcategoryPayload<ExtArgs>
      brand: Prisma.$BrandPayload<ExtArgs>
      seller: Prisma.$SellerPayload<ExtArgs>
      attributes: Prisma.$ProductAttributePayload<ExtArgs>[]
      variants: Prisma.$ProductVariantPayload<ExtArgs>[]
      reviews: Prisma.$ReviewPayload<ExtArgs>[]
      Wishlist: Prisma.$WishlistPayload<ExtArgs>[]
      SpecialOffer: Prisma.$SpecialOfferPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      description: string
      price: Prisma.Decimal
      priceRange: Prisma.Decimal | null
      compareAtPrice: Prisma.Decimal | null
      images: Prisma.JsonValue
      thumbnail: string
      hasVariants: boolean
      stock: Prisma.Decimal
      tags: Prisma.JsonValue
      rating: number
      reviewCount: number
      status: string
      isFeatured: boolean
      isNew: boolean
      onSale: boolean
      salePercentage: Prisma.Decimal | null
      salePrice: Prisma.Decimal | null
      saleStartDate: Date | null
      saleEndDate: Date | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
      categoryId: string
      subcategoryId: string
      brandId: string
      sellerId: string
      specialOfferId: string | null
    }, ExtArgs["result"]["product"]>
    composites: {}
  }

  type ProductGetPayload<S extends boolean | null | undefined | ProductDefaultArgs> = $Result.GetResult<Prisma.$ProductPayload, S>

  type ProductCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductCountAggregateInputType | true
    }

  export interface ProductDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Product'], meta: { name: 'Product' } }
    /**
     * Find zero or one Product that matches the filter.
     * @param {ProductFindUniqueArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductFindUniqueArgs>(args: SelectSubset<T, ProductFindUniqueArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Product that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductFindUniqueOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Product that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductFindFirstArgs>(args?: SelectSubset<T, ProductFindFirstArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Product that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindFirstOrThrowArgs} args - Arguments to find a Product
     * @example
     * // Get one Product
     * const product = await prisma.product.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Products that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Products
     * const products = await prisma.product.findMany()
     * 
     * // Get first 10 Products
     * const products = await prisma.product.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productWithIdOnly = await prisma.product.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductFindManyArgs>(args?: SelectSubset<T, ProductFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Product.
     * @param {ProductCreateArgs} args - Arguments to create a Product.
     * @example
     * // Create one Product
     * const Product = await prisma.product.create({
     *   data: {
     *     // ... data to create a Product
     *   }
     * })
     * 
     */
    create<T extends ProductCreateArgs>(args: SelectSubset<T, ProductCreateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Products.
     * @param {ProductCreateManyArgs} args - Arguments to create many Products.
     * @example
     * // Create many Products
     * const product = await prisma.product.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductCreateManyArgs>(args?: SelectSubset<T, ProductCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Product.
     * @param {ProductDeleteArgs} args - Arguments to delete one Product.
     * @example
     * // Delete one Product
     * const Product = await prisma.product.delete({
     *   where: {
     *     // ... filter to delete one Product
     *   }
     * })
     * 
     */
    delete<T extends ProductDeleteArgs>(args: SelectSubset<T, ProductDeleteArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Product.
     * @param {ProductUpdateArgs} args - Arguments to update one Product.
     * @example
     * // Update one Product
     * const product = await prisma.product.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductUpdateArgs>(args: SelectSubset<T, ProductUpdateArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Products.
     * @param {ProductDeleteManyArgs} args - Arguments to filter Products to delete.
     * @example
     * // Delete a few Products
     * const { count } = await prisma.product.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductDeleteManyArgs>(args?: SelectSubset<T, ProductDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Products
     * const product = await prisma.product.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductUpdateManyArgs>(args: SelectSubset<T, ProductUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product.
     * @param {ProductUpsertArgs} args - Arguments to update or create a Product.
     * @example
     * // Update or create a Product
     * const product = await prisma.product.upsert({
     *   create: {
     *     // ... data to create a Product
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product we want to update
     *   }
     * })
     */
    upsert<T extends ProductUpsertArgs>(args: SelectSubset<T, ProductUpsertArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Products.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductCountArgs} args - Arguments to filter Products to count.
     * @example
     * // Count the number of Products
     * const count = await prisma.product.count({
     *   where: {
     *     // ... the filter for the Products we want to count
     *   }
     * })
    **/
    count<T extends ProductCountArgs>(
      args?: Subset<T, ProductCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAggregateArgs>(args: Subset<T, ProductAggregateArgs>): Prisma.PrismaPromise<GetProductAggregateType<T>>

    /**
     * Group by Product.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductGroupByArgs['orderBy'] }
        : { orderBy?: ProductGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Product model
   */
  readonly fields: ProductFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Product.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    subcategory<T extends SubcategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SubcategoryDefaultArgs<ExtArgs>>): Prisma__SubcategoryClient<$Result.GetResult<Prisma.$SubcategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    brand<T extends BrandDefaultArgs<ExtArgs> = {}>(args?: Subset<T, BrandDefaultArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    seller<T extends SellerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, SellerDefaultArgs<ExtArgs>>): Prisma__SellerClient<$Result.GetResult<Prisma.$SellerPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    attributes<T extends Product$attributesArgs<ExtArgs> = {}>(args?: Subset<T, Product$attributesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "findMany"> | Null>
    variants<T extends Product$variantsArgs<ExtArgs> = {}>(args?: Subset<T, Product$variantsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findMany"> | Null>
    reviews<T extends Product$reviewsArgs<ExtArgs> = {}>(args?: Subset<T, Product$reviewsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany"> | Null>
    Wishlist<T extends Product$WishlistArgs<ExtArgs> = {}>(args?: Subset<T, Product$WishlistArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WishlistPayload<ExtArgs>, T, "findMany"> | Null>
    SpecialOffer<T extends Product$SpecialOfferArgs<ExtArgs> = {}>(args?: Subset<T, Product$SpecialOfferArgs<ExtArgs>>): Prisma__SpecialOfferClient<$Result.GetResult<Prisma.$SpecialOfferPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Product model
   */ 
  interface ProductFieldRefs {
    readonly id: FieldRef<"Product", 'String'>
    readonly name: FieldRef<"Product", 'String'>
    readonly slug: FieldRef<"Product", 'String'>
    readonly description: FieldRef<"Product", 'String'>
    readonly price: FieldRef<"Product", 'Decimal'>
    readonly priceRange: FieldRef<"Product", 'Decimal'>
    readonly compareAtPrice: FieldRef<"Product", 'Decimal'>
    readonly images: FieldRef<"Product", 'Json'>
    readonly thumbnail: FieldRef<"Product", 'String'>
    readonly hasVariants: FieldRef<"Product", 'Boolean'>
    readonly stock: FieldRef<"Product", 'Decimal'>
    readonly tags: FieldRef<"Product", 'Json'>
    readonly rating: FieldRef<"Product", 'Float'>
    readonly reviewCount: FieldRef<"Product", 'Int'>
    readonly status: FieldRef<"Product", 'String'>
    readonly isFeatured: FieldRef<"Product", 'Boolean'>
    readonly isNew: FieldRef<"Product", 'Boolean'>
    readonly onSale: FieldRef<"Product", 'Boolean'>
    readonly salePercentage: FieldRef<"Product", 'Decimal'>
    readonly salePrice: FieldRef<"Product", 'Decimal'>
    readonly saleStartDate: FieldRef<"Product", 'DateTime'>
    readonly saleEndDate: FieldRef<"Product", 'DateTime'>
    readonly created_at: FieldRef<"Product", 'DateTime'>
    readonly created_by: FieldRef<"Product", 'String'>
    readonly created_ip: FieldRef<"Product", 'String'>
    readonly updated_at: FieldRef<"Product", 'DateTime'>
    readonly updated_by: FieldRef<"Product", 'String'>
    readonly updated_ip: FieldRef<"Product", 'String'>
    readonly company_id: FieldRef<"Product", 'String'>
    readonly categoryId: FieldRef<"Product", 'String'>
    readonly subcategoryId: FieldRef<"Product", 'String'>
    readonly brandId: FieldRef<"Product", 'String'>
    readonly sellerId: FieldRef<"Product", 'String'>
    readonly specialOfferId: FieldRef<"Product", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Product findUnique
   */
  export type ProductFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findUniqueOrThrow
   */
  export type ProductFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product findFirst
   */
  export type ProductFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findFirstOrThrow
   */
  export type ProductFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Product to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Products.
     */
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product findMany
   */
  export type ProductFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter, which Products to fetch.
     */
    where?: ProductWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Products to fetch.
     */
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Products.
     */
    cursor?: ProductWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Products from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Products.
     */
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Product create
   */
  export type ProductCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to create a Product.
     */
    data: XOR<ProductCreateInput, ProductUncheckedCreateInput>
  }

  /**
   * Product createMany
   */
  export type ProductCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Products.
     */
    data: ProductCreateManyInput | ProductCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Product update
   */
  export type ProductUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The data needed to update a Product.
     */
    data: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
    /**
     * Choose, which Product to update.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product updateMany
   */
  export type ProductUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Products.
     */
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyInput>
    /**
     * Filter which Products to update
     */
    where?: ProductWhereInput
  }

  /**
   * Product upsert
   */
  export type ProductUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * The filter to search for the Product to update in case it exists.
     */
    where: ProductWhereUniqueInput
    /**
     * In case the Product found by the `where` argument doesn't exist, create a new Product with this data.
     */
    create: XOR<ProductCreateInput, ProductUncheckedCreateInput>
    /**
     * In case the Product was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductUpdateInput, ProductUncheckedUpdateInput>
  }

  /**
   * Product delete
   */
  export type ProductDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    /**
     * Filter which Product to delete.
     */
    where: ProductWhereUniqueInput
  }

  /**
   * Product deleteMany
   */
  export type ProductDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Products to delete
     */
    where?: ProductWhereInput
  }

  /**
   * Product.attributes
   */
  export type Product$attributesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    where?: ProductAttributeWhereInput
    orderBy?: ProductAttributeOrderByWithRelationInput | ProductAttributeOrderByWithRelationInput[]
    cursor?: ProductAttributeWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductAttributeScalarFieldEnum | ProductAttributeScalarFieldEnum[]
  }

  /**
   * Product.variants
   */
  export type Product$variantsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    where?: ProductVariantWhereInput
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    cursor?: ProductVariantWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * Product.reviews
   */
  export type Product$reviewsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    cursor?: ReviewWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Product.Wishlist
   */
  export type Product$WishlistArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wishlist
     */
    select?: WishlistSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WishlistInclude<ExtArgs> | null
    where?: WishlistWhereInput
    orderBy?: WishlistOrderByWithRelationInput | WishlistOrderByWithRelationInput[]
    cursor?: WishlistWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WishlistScalarFieldEnum | WishlistScalarFieldEnum[]
  }

  /**
   * Product.SpecialOffer
   */
  export type Product$SpecialOfferArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialOffer
     */
    select?: SpecialOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialOfferInclude<ExtArgs> | null
    where?: SpecialOfferWhereInput
  }

  /**
   * Product without action
   */
  export type ProductDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
  }


  /**
   * Model Category
   */

  export type AggregateCategory = {
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  export type CategoryAvgAggregateOutputType = {
    productCount: number | null
  }

  export type CategorySumAggregateOutputType = {
    productCount: number | null
  }

  export type CategoryMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    image: string | null
    icon: string | null
    featured: boolean | null
    productCount: number | null
    is_active: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type CategoryMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    image: string | null
    icon: string | null
    featured: boolean | null
    productCount: number | null
    is_active: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type CategoryCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    image: number
    icon: number
    featured: number
    productCount: number
    is_active: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type CategoryAvgAggregateInputType = {
    productCount?: true
  }

  export type CategorySumAggregateInputType = {
    productCount?: true
  }

  export type CategoryMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    image?: true
    icon?: true
    featured?: true
    productCount?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type CategoryMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    image?: true
    icon?: true
    featured?: true
    productCount?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type CategoryCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    image?: true
    icon?: true
    featured?: true
    productCount?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type CategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Category to aggregate.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Categories
    **/
    _count?: true | CategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CategoryMaxAggregateInputType
  }

  export type GetCategoryAggregateType<T extends CategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateCategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCategory[P]>
      : GetScalarType<T[P], AggregateCategory[P]>
  }




  export type CategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CategoryWhereInput
    orderBy?: CategoryOrderByWithAggregationInput | CategoryOrderByWithAggregationInput[]
    by: CategoryScalarFieldEnum[] | CategoryScalarFieldEnum
    having?: CategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CategoryCountAggregateInputType | true
    _avg?: CategoryAvgAggregateInputType
    _sum?: CategorySumAggregateInputType
    _min?: CategoryMinAggregateInputType
    _max?: CategoryMaxAggregateInputType
  }

  export type CategoryGroupByOutputType = {
    id: string
    name: string
    slug: string
    image: string | null
    icon: string | null
    featured: boolean
    productCount: number
    is_active: boolean
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: CategoryCountAggregateOutputType | null
    _avg: CategoryAvgAggregateOutputType | null
    _sum: CategorySumAggregateOutputType | null
    _min: CategoryMinAggregateOutputType | null
    _max: CategoryMaxAggregateOutputType | null
  }

  type GetCategoryGroupByPayload<T extends CategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CategoryGroupByOutputType[P]>
            : GetScalarType<T[P], CategoryGroupByOutputType[P]>
        }
      >
    >


  export type CategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    image?: boolean
    icon?: boolean
    featured?: boolean
    productCount?: boolean
    is_active?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    subcategories?: boolean | Category$subcategoriesArgs<ExtArgs>
    products?: boolean | Category$productsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["category"]>


  export type CategorySelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    image?: boolean
    icon?: boolean
    featured?: boolean
    productCount?: boolean
    is_active?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type CategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    subcategories?: boolean | Category$subcategoriesArgs<ExtArgs>
    products?: boolean | Category$productsArgs<ExtArgs>
    _count?: boolean | CategoryCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Category"
    objects: {
      subcategories: Prisma.$SubcategoryPayload<ExtArgs>[]
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      image: string | null
      icon: string | null
      featured: boolean
      productCount: number
      is_active: boolean
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["category"]>
    composites: {}
  }

  type CategoryGetPayload<S extends boolean | null | undefined | CategoryDefaultArgs> = $Result.GetResult<Prisma.$CategoryPayload, S>

  type CategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CategoryCountAggregateInputType | true
    }

  export interface CategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Category'], meta: { name: 'Category' } }
    /**
     * Find zero or one Category that matches the filter.
     * @param {CategoryFindUniqueArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CategoryFindUniqueArgs>(args: SelectSubset<T, CategoryFindUniqueArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Category that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CategoryFindUniqueOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, CategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CategoryFindFirstArgs>(args?: SelectSubset<T, CategoryFindFirstArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindFirstOrThrowArgs} args - Arguments to find a Category
     * @example
     * // Get one Category
     * const category = await prisma.category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, CategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Categories
     * const categories = await prisma.category.findMany()
     * 
     * // Get first 10 Categories
     * const categories = await prisma.category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const categoryWithIdOnly = await prisma.category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CategoryFindManyArgs>(args?: SelectSubset<T, CategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Category.
     * @param {CategoryCreateArgs} args - Arguments to create a Category.
     * @example
     * // Create one Category
     * const Category = await prisma.category.create({
     *   data: {
     *     // ... data to create a Category
     *   }
     * })
     * 
     */
    create<T extends CategoryCreateArgs>(args: SelectSubset<T, CategoryCreateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Categories.
     * @param {CategoryCreateManyArgs} args - Arguments to create many Categories.
     * @example
     * // Create many Categories
     * const category = await prisma.category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CategoryCreateManyArgs>(args?: SelectSubset<T, CategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Category.
     * @param {CategoryDeleteArgs} args - Arguments to delete one Category.
     * @example
     * // Delete one Category
     * const Category = await prisma.category.delete({
     *   where: {
     *     // ... filter to delete one Category
     *   }
     * })
     * 
     */
    delete<T extends CategoryDeleteArgs>(args: SelectSubset<T, CategoryDeleteArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Category.
     * @param {CategoryUpdateArgs} args - Arguments to update one Category.
     * @example
     * // Update one Category
     * const category = await prisma.category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CategoryUpdateArgs>(args: SelectSubset<T, CategoryUpdateArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Categories.
     * @param {CategoryDeleteManyArgs} args - Arguments to filter Categories to delete.
     * @example
     * // Delete a few Categories
     * const { count } = await prisma.category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CategoryDeleteManyArgs>(args?: SelectSubset<T, CategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Categories
     * const category = await prisma.category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CategoryUpdateManyArgs>(args: SelectSubset<T, CategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Category.
     * @param {CategoryUpsertArgs} args - Arguments to update or create a Category.
     * @example
     * // Update or create a Category
     * const category = await prisma.category.upsert({
     *   create: {
     *     // ... data to create a Category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Category we want to update
     *   }
     * })
     */
    upsert<T extends CategoryUpsertArgs>(args: SelectSubset<T, CategoryUpsertArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryCountArgs} args - Arguments to filter Categories to count.
     * @example
     * // Count the number of Categories
     * const count = await prisma.category.count({
     *   where: {
     *     // ... the filter for the Categories we want to count
     *   }
     * })
    **/
    count<T extends CategoryCountArgs>(
      args?: Subset<T, CategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CategoryAggregateArgs>(args: Subset<T, CategoryAggregateArgs>): Prisma.PrismaPromise<GetCategoryAggregateType<T>>

    /**
     * Group by Category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CategoryGroupByArgs['orderBy'] }
        : { orderBy?: CategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Category model
   */
  readonly fields: CategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    subcategories<T extends Category$subcategoriesArgs<ExtArgs> = {}>(args?: Subset<T, Category$subcategoriesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubcategoryPayload<ExtArgs>, T, "findMany"> | Null>
    products<T extends Category$productsArgs<ExtArgs> = {}>(args?: Subset<T, Category$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Category model
   */ 
  interface CategoryFieldRefs {
    readonly id: FieldRef<"Category", 'String'>
    readonly name: FieldRef<"Category", 'String'>
    readonly slug: FieldRef<"Category", 'String'>
    readonly image: FieldRef<"Category", 'String'>
    readonly icon: FieldRef<"Category", 'String'>
    readonly featured: FieldRef<"Category", 'Boolean'>
    readonly productCount: FieldRef<"Category", 'Int'>
    readonly is_active: FieldRef<"Category", 'Boolean'>
    readonly created_at: FieldRef<"Category", 'DateTime'>
    readonly created_by: FieldRef<"Category", 'String'>
    readonly created_ip: FieldRef<"Category", 'String'>
    readonly updated_at: FieldRef<"Category", 'DateTime'>
    readonly updated_by: FieldRef<"Category", 'String'>
    readonly updated_ip: FieldRef<"Category", 'String'>
    readonly company_id: FieldRef<"Category", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Category findUnique
   */
  export type CategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findUniqueOrThrow
   */
  export type CategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category findFirst
   */
  export type CategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findFirstOrThrow
   */
  export type CategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Category to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Categories.
     */
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category findMany
   */
  export type CategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter, which Categories to fetch.
     */
    where?: CategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Categories to fetch.
     */
    orderBy?: CategoryOrderByWithRelationInput | CategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Categories.
     */
    cursor?: CategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Categories.
     */
    skip?: number
    distinct?: CategoryScalarFieldEnum | CategoryScalarFieldEnum[]
  }

  /**
   * Category create
   */
  export type CategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Category.
     */
    data: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
  }

  /**
   * Category createMany
   */
  export type CategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Categories.
     */
    data: CategoryCreateManyInput | CategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Category update
   */
  export type CategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Category.
     */
    data: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
    /**
     * Choose, which Category to update.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category updateMany
   */
  export type CategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Categories.
     */
    data: XOR<CategoryUpdateManyMutationInput, CategoryUncheckedUpdateManyInput>
    /**
     * Filter which Categories to update
     */
    where?: CategoryWhereInput
  }

  /**
   * Category upsert
   */
  export type CategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Category to update in case it exists.
     */
    where: CategoryWhereUniqueInput
    /**
     * In case the Category found by the `where` argument doesn't exist, create a new Category with this data.
     */
    create: XOR<CategoryCreateInput, CategoryUncheckedCreateInput>
    /**
     * In case the Category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CategoryUpdateInput, CategoryUncheckedUpdateInput>
  }

  /**
   * Category delete
   */
  export type CategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
    /**
     * Filter which Category to delete.
     */
    where: CategoryWhereUniqueInput
  }

  /**
   * Category deleteMany
   */
  export type CategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Categories to delete
     */
    where?: CategoryWhereInput
  }

  /**
   * Category.subcategories
   */
  export type Category$subcategoriesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subcategory
     */
    select?: SubcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubcategoryInclude<ExtArgs> | null
    where?: SubcategoryWhereInput
    orderBy?: SubcategoryOrderByWithRelationInput | SubcategoryOrderByWithRelationInput[]
    cursor?: SubcategoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: SubcategoryScalarFieldEnum | SubcategoryScalarFieldEnum[]
  }

  /**
   * Category.products
   */
  export type Category$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Category without action
   */
  export type CategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Category
     */
    select?: CategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CategoryInclude<ExtArgs> | null
  }


  /**
   * Model Subcategory
   */

  export type AggregateSubcategory = {
    _count: SubcategoryCountAggregateOutputType | null
    _avg: SubcategoryAvgAggregateOutputType | null
    _sum: SubcategorySumAggregateOutputType | null
    _min: SubcategoryMinAggregateOutputType | null
    _max: SubcategoryMaxAggregateOutputType | null
  }

  export type SubcategoryAvgAggregateOutputType = {
    productCount: number | null
  }

  export type SubcategorySumAggregateOutputType = {
    productCount: number | null
  }

  export type SubcategoryMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    productCount: number | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
    categoryId: string | null
  }

  export type SubcategoryMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    productCount: number | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
    categoryId: string | null
  }

  export type SubcategoryCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    productCount: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    categoryId: number
    _all: number
  }


  export type SubcategoryAvgAggregateInputType = {
    productCount?: true
  }

  export type SubcategorySumAggregateInputType = {
    productCount?: true
  }

  export type SubcategoryMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    productCount?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    categoryId?: true
  }

  export type SubcategoryMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    productCount?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    categoryId?: true
  }

  export type SubcategoryCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    productCount?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    categoryId?: true
    _all?: true
  }

  export type SubcategoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subcategory to aggregate.
     */
    where?: SubcategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subcategories to fetch.
     */
    orderBy?: SubcategoryOrderByWithRelationInput | SubcategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SubcategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subcategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subcategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Subcategories
    **/
    _count?: true | SubcategoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SubcategoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SubcategorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SubcategoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SubcategoryMaxAggregateInputType
  }

  export type GetSubcategoryAggregateType<T extends SubcategoryAggregateArgs> = {
        [P in keyof T & keyof AggregateSubcategory]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSubcategory[P]>
      : GetScalarType<T[P], AggregateSubcategory[P]>
  }




  export type SubcategoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SubcategoryWhereInput
    orderBy?: SubcategoryOrderByWithAggregationInput | SubcategoryOrderByWithAggregationInput[]
    by: SubcategoryScalarFieldEnum[] | SubcategoryScalarFieldEnum
    having?: SubcategoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SubcategoryCountAggregateInputType | true
    _avg?: SubcategoryAvgAggregateInputType
    _sum?: SubcategorySumAggregateInputType
    _min?: SubcategoryMinAggregateInputType
    _max?: SubcategoryMaxAggregateInputType
  }

  export type SubcategoryGroupByOutputType = {
    id: string
    name: string
    slug: string
    productCount: number
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    categoryId: string
    _count: SubcategoryCountAggregateOutputType | null
    _avg: SubcategoryAvgAggregateOutputType | null
    _sum: SubcategorySumAggregateOutputType | null
    _min: SubcategoryMinAggregateOutputType | null
    _max: SubcategoryMaxAggregateOutputType | null
  }

  type GetSubcategoryGroupByPayload<T extends SubcategoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SubcategoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SubcategoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SubcategoryGroupByOutputType[P]>
            : GetScalarType<T[P], SubcategoryGroupByOutputType[P]>
        }
      >
    >


  export type SubcategorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    productCount?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    categoryId?: boolean
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    products?: boolean | Subcategory$productsArgs<ExtArgs>
    _count?: boolean | SubcategoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["subcategory"]>


  export type SubcategorySelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    productCount?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    categoryId?: boolean
  }

  export type SubcategoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    category?: boolean | CategoryDefaultArgs<ExtArgs>
    products?: boolean | Subcategory$productsArgs<ExtArgs>
    _count?: boolean | SubcategoryCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SubcategoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Subcategory"
    objects: {
      category: Prisma.$CategoryPayload<ExtArgs>
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      productCount: number
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
      categoryId: string
    }, ExtArgs["result"]["subcategory"]>
    composites: {}
  }

  type SubcategoryGetPayload<S extends boolean | null | undefined | SubcategoryDefaultArgs> = $Result.GetResult<Prisma.$SubcategoryPayload, S>

  type SubcategoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SubcategoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SubcategoryCountAggregateInputType | true
    }

  export interface SubcategoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Subcategory'], meta: { name: 'Subcategory' } }
    /**
     * Find zero or one Subcategory that matches the filter.
     * @param {SubcategoryFindUniqueArgs} args - Arguments to find a Subcategory
     * @example
     * // Get one Subcategory
     * const subcategory = await prisma.subcategory.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SubcategoryFindUniqueArgs>(args: SelectSubset<T, SubcategoryFindUniqueArgs<ExtArgs>>): Prisma__SubcategoryClient<$Result.GetResult<Prisma.$SubcategoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Subcategory that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SubcategoryFindUniqueOrThrowArgs} args - Arguments to find a Subcategory
     * @example
     * // Get one Subcategory
     * const subcategory = await prisma.subcategory.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SubcategoryFindUniqueOrThrowArgs>(args: SelectSubset<T, SubcategoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SubcategoryClient<$Result.GetResult<Prisma.$SubcategoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Subcategory that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubcategoryFindFirstArgs} args - Arguments to find a Subcategory
     * @example
     * // Get one Subcategory
     * const subcategory = await prisma.subcategory.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SubcategoryFindFirstArgs>(args?: SelectSubset<T, SubcategoryFindFirstArgs<ExtArgs>>): Prisma__SubcategoryClient<$Result.GetResult<Prisma.$SubcategoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Subcategory that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubcategoryFindFirstOrThrowArgs} args - Arguments to find a Subcategory
     * @example
     * // Get one Subcategory
     * const subcategory = await prisma.subcategory.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SubcategoryFindFirstOrThrowArgs>(args?: SelectSubset<T, SubcategoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__SubcategoryClient<$Result.GetResult<Prisma.$SubcategoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Subcategories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubcategoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Subcategories
     * const subcategories = await prisma.subcategory.findMany()
     * 
     * // Get first 10 Subcategories
     * const subcategories = await prisma.subcategory.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const subcategoryWithIdOnly = await prisma.subcategory.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SubcategoryFindManyArgs>(args?: SelectSubset<T, SubcategoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SubcategoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Subcategory.
     * @param {SubcategoryCreateArgs} args - Arguments to create a Subcategory.
     * @example
     * // Create one Subcategory
     * const Subcategory = await prisma.subcategory.create({
     *   data: {
     *     // ... data to create a Subcategory
     *   }
     * })
     * 
     */
    create<T extends SubcategoryCreateArgs>(args: SelectSubset<T, SubcategoryCreateArgs<ExtArgs>>): Prisma__SubcategoryClient<$Result.GetResult<Prisma.$SubcategoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Subcategories.
     * @param {SubcategoryCreateManyArgs} args - Arguments to create many Subcategories.
     * @example
     * // Create many Subcategories
     * const subcategory = await prisma.subcategory.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SubcategoryCreateManyArgs>(args?: SelectSubset<T, SubcategoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Subcategory.
     * @param {SubcategoryDeleteArgs} args - Arguments to delete one Subcategory.
     * @example
     * // Delete one Subcategory
     * const Subcategory = await prisma.subcategory.delete({
     *   where: {
     *     // ... filter to delete one Subcategory
     *   }
     * })
     * 
     */
    delete<T extends SubcategoryDeleteArgs>(args: SelectSubset<T, SubcategoryDeleteArgs<ExtArgs>>): Prisma__SubcategoryClient<$Result.GetResult<Prisma.$SubcategoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Subcategory.
     * @param {SubcategoryUpdateArgs} args - Arguments to update one Subcategory.
     * @example
     * // Update one Subcategory
     * const subcategory = await prisma.subcategory.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SubcategoryUpdateArgs>(args: SelectSubset<T, SubcategoryUpdateArgs<ExtArgs>>): Prisma__SubcategoryClient<$Result.GetResult<Prisma.$SubcategoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Subcategories.
     * @param {SubcategoryDeleteManyArgs} args - Arguments to filter Subcategories to delete.
     * @example
     * // Delete a few Subcategories
     * const { count } = await prisma.subcategory.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SubcategoryDeleteManyArgs>(args?: SelectSubset<T, SubcategoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Subcategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubcategoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Subcategories
     * const subcategory = await prisma.subcategory.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SubcategoryUpdateManyArgs>(args: SelectSubset<T, SubcategoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Subcategory.
     * @param {SubcategoryUpsertArgs} args - Arguments to update or create a Subcategory.
     * @example
     * // Update or create a Subcategory
     * const subcategory = await prisma.subcategory.upsert({
     *   create: {
     *     // ... data to create a Subcategory
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Subcategory we want to update
     *   }
     * })
     */
    upsert<T extends SubcategoryUpsertArgs>(args: SelectSubset<T, SubcategoryUpsertArgs<ExtArgs>>): Prisma__SubcategoryClient<$Result.GetResult<Prisma.$SubcategoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Subcategories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubcategoryCountArgs} args - Arguments to filter Subcategories to count.
     * @example
     * // Count the number of Subcategories
     * const count = await prisma.subcategory.count({
     *   where: {
     *     // ... the filter for the Subcategories we want to count
     *   }
     * })
    **/
    count<T extends SubcategoryCountArgs>(
      args?: Subset<T, SubcategoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SubcategoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Subcategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubcategoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SubcategoryAggregateArgs>(args: Subset<T, SubcategoryAggregateArgs>): Prisma.PrismaPromise<GetSubcategoryAggregateType<T>>

    /**
     * Group by Subcategory.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SubcategoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SubcategoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SubcategoryGroupByArgs['orderBy'] }
        : { orderBy?: SubcategoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SubcategoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSubcategoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Subcategory model
   */
  readonly fields: SubcategoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Subcategory.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SubcategoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    category<T extends CategoryDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CategoryDefaultArgs<ExtArgs>>): Prisma__CategoryClient<$Result.GetResult<Prisma.$CategoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    products<T extends Subcategory$productsArgs<ExtArgs> = {}>(args?: Subset<T, Subcategory$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Subcategory model
   */ 
  interface SubcategoryFieldRefs {
    readonly id: FieldRef<"Subcategory", 'String'>
    readonly name: FieldRef<"Subcategory", 'String'>
    readonly slug: FieldRef<"Subcategory", 'String'>
    readonly productCount: FieldRef<"Subcategory", 'Int'>
    readonly created_at: FieldRef<"Subcategory", 'DateTime'>
    readonly created_by: FieldRef<"Subcategory", 'String'>
    readonly created_ip: FieldRef<"Subcategory", 'String'>
    readonly updated_at: FieldRef<"Subcategory", 'DateTime'>
    readonly updated_by: FieldRef<"Subcategory", 'String'>
    readonly updated_ip: FieldRef<"Subcategory", 'String'>
    readonly company_id: FieldRef<"Subcategory", 'String'>
    readonly categoryId: FieldRef<"Subcategory", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Subcategory findUnique
   */
  export type SubcategoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subcategory
     */
    select?: SubcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubcategoryInclude<ExtArgs> | null
    /**
     * Filter, which Subcategory to fetch.
     */
    where: SubcategoryWhereUniqueInput
  }

  /**
   * Subcategory findUniqueOrThrow
   */
  export type SubcategoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subcategory
     */
    select?: SubcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubcategoryInclude<ExtArgs> | null
    /**
     * Filter, which Subcategory to fetch.
     */
    where: SubcategoryWhereUniqueInput
  }

  /**
   * Subcategory findFirst
   */
  export type SubcategoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subcategory
     */
    select?: SubcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubcategoryInclude<ExtArgs> | null
    /**
     * Filter, which Subcategory to fetch.
     */
    where?: SubcategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subcategories to fetch.
     */
    orderBy?: SubcategoryOrderByWithRelationInput | SubcategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subcategories.
     */
    cursor?: SubcategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subcategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subcategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subcategories.
     */
    distinct?: SubcategoryScalarFieldEnum | SubcategoryScalarFieldEnum[]
  }

  /**
   * Subcategory findFirstOrThrow
   */
  export type SubcategoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subcategory
     */
    select?: SubcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubcategoryInclude<ExtArgs> | null
    /**
     * Filter, which Subcategory to fetch.
     */
    where?: SubcategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subcategories to fetch.
     */
    orderBy?: SubcategoryOrderByWithRelationInput | SubcategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Subcategories.
     */
    cursor?: SubcategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subcategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subcategories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Subcategories.
     */
    distinct?: SubcategoryScalarFieldEnum | SubcategoryScalarFieldEnum[]
  }

  /**
   * Subcategory findMany
   */
  export type SubcategoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subcategory
     */
    select?: SubcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubcategoryInclude<ExtArgs> | null
    /**
     * Filter, which Subcategories to fetch.
     */
    where?: SubcategoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Subcategories to fetch.
     */
    orderBy?: SubcategoryOrderByWithRelationInput | SubcategoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Subcategories.
     */
    cursor?: SubcategoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Subcategories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Subcategories.
     */
    skip?: number
    distinct?: SubcategoryScalarFieldEnum | SubcategoryScalarFieldEnum[]
  }

  /**
   * Subcategory create
   */
  export type SubcategoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subcategory
     */
    select?: SubcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubcategoryInclude<ExtArgs> | null
    /**
     * The data needed to create a Subcategory.
     */
    data: XOR<SubcategoryCreateInput, SubcategoryUncheckedCreateInput>
  }

  /**
   * Subcategory createMany
   */
  export type SubcategoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Subcategories.
     */
    data: SubcategoryCreateManyInput | SubcategoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Subcategory update
   */
  export type SubcategoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subcategory
     */
    select?: SubcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubcategoryInclude<ExtArgs> | null
    /**
     * The data needed to update a Subcategory.
     */
    data: XOR<SubcategoryUpdateInput, SubcategoryUncheckedUpdateInput>
    /**
     * Choose, which Subcategory to update.
     */
    where: SubcategoryWhereUniqueInput
  }

  /**
   * Subcategory updateMany
   */
  export type SubcategoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Subcategories.
     */
    data: XOR<SubcategoryUpdateManyMutationInput, SubcategoryUncheckedUpdateManyInput>
    /**
     * Filter which Subcategories to update
     */
    where?: SubcategoryWhereInput
  }

  /**
   * Subcategory upsert
   */
  export type SubcategoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subcategory
     */
    select?: SubcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubcategoryInclude<ExtArgs> | null
    /**
     * The filter to search for the Subcategory to update in case it exists.
     */
    where: SubcategoryWhereUniqueInput
    /**
     * In case the Subcategory found by the `where` argument doesn't exist, create a new Subcategory with this data.
     */
    create: XOR<SubcategoryCreateInput, SubcategoryUncheckedCreateInput>
    /**
     * In case the Subcategory was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SubcategoryUpdateInput, SubcategoryUncheckedUpdateInput>
  }

  /**
   * Subcategory delete
   */
  export type SubcategoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subcategory
     */
    select?: SubcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubcategoryInclude<ExtArgs> | null
    /**
     * Filter which Subcategory to delete.
     */
    where: SubcategoryWhereUniqueInput
  }

  /**
   * Subcategory deleteMany
   */
  export type SubcategoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Subcategories to delete
     */
    where?: SubcategoryWhereInput
  }

  /**
   * Subcategory.products
   */
  export type Subcategory$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Subcategory without action
   */
  export type SubcategoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Subcategory
     */
    select?: SubcategorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SubcategoryInclude<ExtArgs> | null
  }


  /**
   * Model Brand
   */

  export type AggregateBrand = {
    _count: BrandCountAggregateOutputType | null
    _min: BrandMinAggregateOutputType | null
    _max: BrandMaxAggregateOutputType | null
  }

  export type BrandMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type BrandMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type BrandCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type BrandMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type BrandMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type BrandCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type BrandAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Brand to aggregate.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Brands
    **/
    _count?: true | BrandCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BrandMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BrandMaxAggregateInputType
  }

  export type GetBrandAggregateType<T extends BrandAggregateArgs> = {
        [P in keyof T & keyof AggregateBrand]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBrand[P]>
      : GetScalarType<T[P], AggregateBrand[P]>
  }




  export type BrandGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BrandWhereInput
    orderBy?: BrandOrderByWithAggregationInput | BrandOrderByWithAggregationInput[]
    by: BrandScalarFieldEnum[] | BrandScalarFieldEnum
    having?: BrandScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BrandCountAggregateInputType | true
    _min?: BrandMinAggregateInputType
    _max?: BrandMaxAggregateInputType
  }

  export type BrandGroupByOutputType = {
    id: string
    name: string
    slug: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: BrandCountAggregateOutputType | null
    _min: BrandMinAggregateOutputType | null
    _max: BrandMaxAggregateOutputType | null
  }

  type GetBrandGroupByPayload<T extends BrandGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BrandGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BrandGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BrandGroupByOutputType[P]>
            : GetScalarType<T[P], BrandGroupByOutputType[P]>
        }
      >
    >


  export type BrandSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    products?: boolean | Brand$productsArgs<ExtArgs>
    _count?: boolean | BrandCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["brand"]>


  export type BrandSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type BrandInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Brand$productsArgs<ExtArgs>
    _count?: boolean | BrandCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $BrandPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Brand"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["brand"]>
    composites: {}
  }

  type BrandGetPayload<S extends boolean | null | undefined | BrandDefaultArgs> = $Result.GetResult<Prisma.$BrandPayload, S>

  type BrandCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BrandFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BrandCountAggregateInputType | true
    }

  export interface BrandDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Brand'], meta: { name: 'Brand' } }
    /**
     * Find zero or one Brand that matches the filter.
     * @param {BrandFindUniqueArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BrandFindUniqueArgs>(args: SelectSubset<T, BrandFindUniqueArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Brand that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BrandFindUniqueOrThrowArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BrandFindUniqueOrThrowArgs>(args: SelectSubset<T, BrandFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Brand that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindFirstArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BrandFindFirstArgs>(args?: SelectSubset<T, BrandFindFirstArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Brand that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindFirstOrThrowArgs} args - Arguments to find a Brand
     * @example
     * // Get one Brand
     * const brand = await prisma.brand.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BrandFindFirstOrThrowArgs>(args?: SelectSubset<T, BrandFindFirstOrThrowArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Brands that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Brands
     * const brands = await prisma.brand.findMany()
     * 
     * // Get first 10 Brands
     * const brands = await prisma.brand.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const brandWithIdOnly = await prisma.brand.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BrandFindManyArgs>(args?: SelectSubset<T, BrandFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Brand.
     * @param {BrandCreateArgs} args - Arguments to create a Brand.
     * @example
     * // Create one Brand
     * const Brand = await prisma.brand.create({
     *   data: {
     *     // ... data to create a Brand
     *   }
     * })
     * 
     */
    create<T extends BrandCreateArgs>(args: SelectSubset<T, BrandCreateArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Brands.
     * @param {BrandCreateManyArgs} args - Arguments to create many Brands.
     * @example
     * // Create many Brands
     * const brand = await prisma.brand.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BrandCreateManyArgs>(args?: SelectSubset<T, BrandCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Brand.
     * @param {BrandDeleteArgs} args - Arguments to delete one Brand.
     * @example
     * // Delete one Brand
     * const Brand = await prisma.brand.delete({
     *   where: {
     *     // ... filter to delete one Brand
     *   }
     * })
     * 
     */
    delete<T extends BrandDeleteArgs>(args: SelectSubset<T, BrandDeleteArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Brand.
     * @param {BrandUpdateArgs} args - Arguments to update one Brand.
     * @example
     * // Update one Brand
     * const brand = await prisma.brand.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BrandUpdateArgs>(args: SelectSubset<T, BrandUpdateArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Brands.
     * @param {BrandDeleteManyArgs} args - Arguments to filter Brands to delete.
     * @example
     * // Delete a few Brands
     * const { count } = await prisma.brand.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BrandDeleteManyArgs>(args?: SelectSubset<T, BrandDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Brands
     * const brand = await prisma.brand.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BrandUpdateManyArgs>(args: SelectSubset<T, BrandUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Brand.
     * @param {BrandUpsertArgs} args - Arguments to update or create a Brand.
     * @example
     * // Update or create a Brand
     * const brand = await prisma.brand.upsert({
     *   create: {
     *     // ... data to create a Brand
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Brand we want to update
     *   }
     * })
     */
    upsert<T extends BrandUpsertArgs>(args: SelectSubset<T, BrandUpsertArgs<ExtArgs>>): Prisma__BrandClient<$Result.GetResult<Prisma.$BrandPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Brands.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandCountArgs} args - Arguments to filter Brands to count.
     * @example
     * // Count the number of Brands
     * const count = await prisma.brand.count({
     *   where: {
     *     // ... the filter for the Brands we want to count
     *   }
     * })
    **/
    count<T extends BrandCountArgs>(
      args?: Subset<T, BrandCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BrandCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Brand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BrandAggregateArgs>(args: Subset<T, BrandAggregateArgs>): Prisma.PrismaPromise<GetBrandAggregateType<T>>

    /**
     * Group by Brand.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BrandGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BrandGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BrandGroupByArgs['orderBy'] }
        : { orderBy?: BrandGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BrandGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBrandGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Brand model
   */
  readonly fields: BrandFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Brand.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BrandClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Brand$productsArgs<ExtArgs> = {}>(args?: Subset<T, Brand$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Brand model
   */ 
  interface BrandFieldRefs {
    readonly id: FieldRef<"Brand", 'String'>
    readonly name: FieldRef<"Brand", 'String'>
    readonly slug: FieldRef<"Brand", 'String'>
    readonly created_at: FieldRef<"Brand", 'DateTime'>
    readonly created_by: FieldRef<"Brand", 'String'>
    readonly created_ip: FieldRef<"Brand", 'String'>
    readonly updated_at: FieldRef<"Brand", 'DateTime'>
    readonly updated_by: FieldRef<"Brand", 'String'>
    readonly updated_ip: FieldRef<"Brand", 'String'>
    readonly company_id: FieldRef<"Brand", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Brand findUnique
   */
  export type BrandFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand findUniqueOrThrow
   */
  export type BrandFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand findFirst
   */
  export type BrandFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Brands.
     */
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand findFirstOrThrow
   */
  export type BrandFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brand to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Brands.
     */
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand findMany
   */
  export type BrandFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter, which Brands to fetch.
     */
    where?: BrandWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Brands to fetch.
     */
    orderBy?: BrandOrderByWithRelationInput | BrandOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Brands.
     */
    cursor?: BrandWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Brands from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Brands.
     */
    skip?: number
    distinct?: BrandScalarFieldEnum | BrandScalarFieldEnum[]
  }

  /**
   * Brand create
   */
  export type BrandCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The data needed to create a Brand.
     */
    data: XOR<BrandCreateInput, BrandUncheckedCreateInput>
  }

  /**
   * Brand createMany
   */
  export type BrandCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Brands.
     */
    data: BrandCreateManyInput | BrandCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Brand update
   */
  export type BrandUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The data needed to update a Brand.
     */
    data: XOR<BrandUpdateInput, BrandUncheckedUpdateInput>
    /**
     * Choose, which Brand to update.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand updateMany
   */
  export type BrandUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Brands.
     */
    data: XOR<BrandUpdateManyMutationInput, BrandUncheckedUpdateManyInput>
    /**
     * Filter which Brands to update
     */
    where?: BrandWhereInput
  }

  /**
   * Brand upsert
   */
  export type BrandUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * The filter to search for the Brand to update in case it exists.
     */
    where: BrandWhereUniqueInput
    /**
     * In case the Brand found by the `where` argument doesn't exist, create a new Brand with this data.
     */
    create: XOR<BrandCreateInput, BrandUncheckedCreateInput>
    /**
     * In case the Brand was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BrandUpdateInput, BrandUncheckedUpdateInput>
  }

  /**
   * Brand delete
   */
  export type BrandDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
    /**
     * Filter which Brand to delete.
     */
    where: BrandWhereUniqueInput
  }

  /**
   * Brand deleteMany
   */
  export type BrandDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Brands to delete
     */
    where?: BrandWhereInput
  }

  /**
   * Brand.products
   */
  export type Brand$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Brand without action
   */
  export type BrandDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Brand
     */
    select?: BrandSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: BrandInclude<ExtArgs> | null
  }


  /**
   * Model ProductAttribute
   */

  export type AggregateProductAttribute = {
    _count: ProductAttributeCountAggregateOutputType | null
    _min: ProductAttributeMinAggregateOutputType | null
    _max: ProductAttributeMaxAggregateOutputType | null
  }

  export type ProductAttributeMinAggregateOutputType = {
    id: string | null
    name: string | null
    type: string | null
    value: string | null
    unit: string | null
    displayValue: string | null
    productId: string | null
  }

  export type ProductAttributeMaxAggregateOutputType = {
    id: string | null
    name: string | null
    type: string | null
    value: string | null
    unit: string | null
    displayValue: string | null
    productId: string | null
  }

  export type ProductAttributeCountAggregateOutputType = {
    id: number
    name: number
    type: number
    value: number
    unit: number
    displayValue: number
    options: number
    productId: number
    _all: number
  }


  export type ProductAttributeMinAggregateInputType = {
    id?: true
    name?: true
    type?: true
    value?: true
    unit?: true
    displayValue?: true
    productId?: true
  }

  export type ProductAttributeMaxAggregateInputType = {
    id?: true
    name?: true
    type?: true
    value?: true
    unit?: true
    displayValue?: true
    productId?: true
  }

  export type ProductAttributeCountAggregateInputType = {
    id?: true
    name?: true
    type?: true
    value?: true
    unit?: true
    displayValue?: true
    options?: true
    productId?: true
    _all?: true
  }

  export type ProductAttributeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductAttribute to aggregate.
     */
    where?: ProductAttributeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAttributes to fetch.
     */
    orderBy?: ProductAttributeOrderByWithRelationInput | ProductAttributeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductAttributeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAttributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAttributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductAttributes
    **/
    _count?: true | ProductAttributeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductAttributeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductAttributeMaxAggregateInputType
  }

  export type GetProductAttributeAggregateType<T extends ProductAttributeAggregateArgs> = {
        [P in keyof T & keyof AggregateProductAttribute]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductAttribute[P]>
      : GetScalarType<T[P], AggregateProductAttribute[P]>
  }




  export type ProductAttributeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductAttributeWhereInput
    orderBy?: ProductAttributeOrderByWithAggregationInput | ProductAttributeOrderByWithAggregationInput[]
    by: ProductAttributeScalarFieldEnum[] | ProductAttributeScalarFieldEnum
    having?: ProductAttributeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductAttributeCountAggregateInputType | true
    _min?: ProductAttributeMinAggregateInputType
    _max?: ProductAttributeMaxAggregateInputType
  }

  export type ProductAttributeGroupByOutputType = {
    id: string
    name: string
    type: string
    value: string
    unit: string | null
    displayValue: string | null
    options: JsonValue | null
    productId: string
    _count: ProductAttributeCountAggregateOutputType | null
    _min: ProductAttributeMinAggregateOutputType | null
    _max: ProductAttributeMaxAggregateOutputType | null
  }

  type GetProductAttributeGroupByPayload<T extends ProductAttributeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductAttributeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductAttributeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductAttributeGroupByOutputType[P]>
            : GetScalarType<T[P], ProductAttributeGroupByOutputType[P]>
        }
      >
    >


  export type ProductAttributeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    type?: boolean
    value?: boolean
    unit?: boolean
    displayValue?: boolean
    options?: boolean
    productId?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productAttribute"]>


  export type ProductAttributeSelectScalar = {
    id?: boolean
    name?: boolean
    type?: boolean
    value?: boolean
    unit?: boolean
    displayValue?: boolean
    options?: boolean
    productId?: boolean
  }

  export type ProductAttributeInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductAttributePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductAttribute"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      type: string
      value: string
      unit: string | null
      displayValue: string | null
      options: Prisma.JsonValue | null
      productId: string
    }, ExtArgs["result"]["productAttribute"]>
    composites: {}
  }

  type ProductAttributeGetPayload<S extends boolean | null | undefined | ProductAttributeDefaultArgs> = $Result.GetResult<Prisma.$ProductAttributePayload, S>

  type ProductAttributeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductAttributeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductAttributeCountAggregateInputType | true
    }

  export interface ProductAttributeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductAttribute'], meta: { name: 'ProductAttribute' } }
    /**
     * Find zero or one ProductAttribute that matches the filter.
     * @param {ProductAttributeFindUniqueArgs} args - Arguments to find a ProductAttribute
     * @example
     * // Get one ProductAttribute
     * const productAttribute = await prisma.productAttribute.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductAttributeFindUniqueArgs>(args: SelectSubset<T, ProductAttributeFindUniqueArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProductAttribute that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductAttributeFindUniqueOrThrowArgs} args - Arguments to find a ProductAttribute
     * @example
     * // Get one ProductAttribute
     * const productAttribute = await prisma.productAttribute.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductAttributeFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductAttributeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProductAttribute that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeFindFirstArgs} args - Arguments to find a ProductAttribute
     * @example
     * // Get one ProductAttribute
     * const productAttribute = await prisma.productAttribute.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductAttributeFindFirstArgs>(args?: SelectSubset<T, ProductAttributeFindFirstArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProductAttribute that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeFindFirstOrThrowArgs} args - Arguments to find a ProductAttribute
     * @example
     * // Get one ProductAttribute
     * const productAttribute = await prisma.productAttribute.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductAttributeFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductAttributeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProductAttributes that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductAttributes
     * const productAttributes = await prisma.productAttribute.findMany()
     * 
     * // Get first 10 ProductAttributes
     * const productAttributes = await prisma.productAttribute.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productAttributeWithIdOnly = await prisma.productAttribute.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductAttributeFindManyArgs>(args?: SelectSubset<T, ProductAttributeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProductAttribute.
     * @param {ProductAttributeCreateArgs} args - Arguments to create a ProductAttribute.
     * @example
     * // Create one ProductAttribute
     * const ProductAttribute = await prisma.productAttribute.create({
     *   data: {
     *     // ... data to create a ProductAttribute
     *   }
     * })
     * 
     */
    create<T extends ProductAttributeCreateArgs>(args: SelectSubset<T, ProductAttributeCreateArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProductAttributes.
     * @param {ProductAttributeCreateManyArgs} args - Arguments to create many ProductAttributes.
     * @example
     * // Create many ProductAttributes
     * const productAttribute = await prisma.productAttribute.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductAttributeCreateManyArgs>(args?: SelectSubset<T, ProductAttributeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ProductAttribute.
     * @param {ProductAttributeDeleteArgs} args - Arguments to delete one ProductAttribute.
     * @example
     * // Delete one ProductAttribute
     * const ProductAttribute = await prisma.productAttribute.delete({
     *   where: {
     *     // ... filter to delete one ProductAttribute
     *   }
     * })
     * 
     */
    delete<T extends ProductAttributeDeleteArgs>(args: SelectSubset<T, ProductAttributeDeleteArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProductAttribute.
     * @param {ProductAttributeUpdateArgs} args - Arguments to update one ProductAttribute.
     * @example
     * // Update one ProductAttribute
     * const productAttribute = await prisma.productAttribute.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductAttributeUpdateArgs>(args: SelectSubset<T, ProductAttributeUpdateArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProductAttributes.
     * @param {ProductAttributeDeleteManyArgs} args - Arguments to filter ProductAttributes to delete.
     * @example
     * // Delete a few ProductAttributes
     * const { count } = await prisma.productAttribute.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductAttributeDeleteManyArgs>(args?: SelectSubset<T, ProductAttributeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductAttributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductAttributes
     * const productAttribute = await prisma.productAttribute.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductAttributeUpdateManyArgs>(args: SelectSubset<T, ProductAttributeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductAttribute.
     * @param {ProductAttributeUpsertArgs} args - Arguments to update or create a ProductAttribute.
     * @example
     * // Update or create a ProductAttribute
     * const productAttribute = await prisma.productAttribute.upsert({
     *   create: {
     *     // ... data to create a ProductAttribute
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductAttribute we want to update
     *   }
     * })
     */
    upsert<T extends ProductAttributeUpsertArgs>(args: SelectSubset<T, ProductAttributeUpsertArgs<ExtArgs>>): Prisma__ProductAttributeClient<$Result.GetResult<Prisma.$ProductAttributePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProductAttributes.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeCountArgs} args - Arguments to filter ProductAttributes to count.
     * @example
     * // Count the number of ProductAttributes
     * const count = await prisma.productAttribute.count({
     *   where: {
     *     // ... the filter for the ProductAttributes we want to count
     *   }
     * })
    **/
    count<T extends ProductAttributeCountArgs>(
      args?: Subset<T, ProductAttributeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductAttributeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductAttribute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductAttributeAggregateArgs>(args: Subset<T, ProductAttributeAggregateArgs>): Prisma.PrismaPromise<GetProductAttributeAggregateType<T>>

    /**
     * Group by ProductAttribute.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductAttributeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductAttributeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductAttributeGroupByArgs['orderBy'] }
        : { orderBy?: ProductAttributeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductAttributeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductAttributeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductAttribute model
   */
  readonly fields: ProductAttributeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductAttribute.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductAttributeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductAttribute model
   */ 
  interface ProductAttributeFieldRefs {
    readonly id: FieldRef<"ProductAttribute", 'String'>
    readonly name: FieldRef<"ProductAttribute", 'String'>
    readonly type: FieldRef<"ProductAttribute", 'String'>
    readonly value: FieldRef<"ProductAttribute", 'String'>
    readonly unit: FieldRef<"ProductAttribute", 'String'>
    readonly displayValue: FieldRef<"ProductAttribute", 'String'>
    readonly options: FieldRef<"ProductAttribute", 'Json'>
    readonly productId: FieldRef<"ProductAttribute", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductAttribute findUnique
   */
  export type ProductAttributeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ProductAttribute to fetch.
     */
    where: ProductAttributeWhereUniqueInput
  }

  /**
   * ProductAttribute findUniqueOrThrow
   */
  export type ProductAttributeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ProductAttribute to fetch.
     */
    where: ProductAttributeWhereUniqueInput
  }

  /**
   * ProductAttribute findFirst
   */
  export type ProductAttributeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ProductAttribute to fetch.
     */
    where?: ProductAttributeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAttributes to fetch.
     */
    orderBy?: ProductAttributeOrderByWithRelationInput | ProductAttributeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductAttributes.
     */
    cursor?: ProductAttributeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAttributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAttributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductAttributes.
     */
    distinct?: ProductAttributeScalarFieldEnum | ProductAttributeScalarFieldEnum[]
  }

  /**
   * ProductAttribute findFirstOrThrow
   */
  export type ProductAttributeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ProductAttribute to fetch.
     */
    where?: ProductAttributeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAttributes to fetch.
     */
    orderBy?: ProductAttributeOrderByWithRelationInput | ProductAttributeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductAttributes.
     */
    cursor?: ProductAttributeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAttributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAttributes.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductAttributes.
     */
    distinct?: ProductAttributeScalarFieldEnum | ProductAttributeScalarFieldEnum[]
  }

  /**
   * ProductAttribute findMany
   */
  export type ProductAttributeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * Filter, which ProductAttributes to fetch.
     */
    where?: ProductAttributeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductAttributes to fetch.
     */
    orderBy?: ProductAttributeOrderByWithRelationInput | ProductAttributeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductAttributes.
     */
    cursor?: ProductAttributeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductAttributes from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductAttributes.
     */
    skip?: number
    distinct?: ProductAttributeScalarFieldEnum | ProductAttributeScalarFieldEnum[]
  }

  /**
   * ProductAttribute create
   */
  export type ProductAttributeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductAttribute.
     */
    data: XOR<ProductAttributeCreateInput, ProductAttributeUncheckedCreateInput>
  }

  /**
   * ProductAttribute createMany
   */
  export type ProductAttributeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductAttributes.
     */
    data: ProductAttributeCreateManyInput | ProductAttributeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductAttribute update
   */
  export type ProductAttributeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductAttribute.
     */
    data: XOR<ProductAttributeUpdateInput, ProductAttributeUncheckedUpdateInput>
    /**
     * Choose, which ProductAttribute to update.
     */
    where: ProductAttributeWhereUniqueInput
  }

  /**
   * ProductAttribute updateMany
   */
  export type ProductAttributeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductAttributes.
     */
    data: XOR<ProductAttributeUpdateManyMutationInput, ProductAttributeUncheckedUpdateManyInput>
    /**
     * Filter which ProductAttributes to update
     */
    where?: ProductAttributeWhereInput
  }

  /**
   * ProductAttribute upsert
   */
  export type ProductAttributeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductAttribute to update in case it exists.
     */
    where: ProductAttributeWhereUniqueInput
    /**
     * In case the ProductAttribute found by the `where` argument doesn't exist, create a new ProductAttribute with this data.
     */
    create: XOR<ProductAttributeCreateInput, ProductAttributeUncheckedCreateInput>
    /**
     * In case the ProductAttribute was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductAttributeUpdateInput, ProductAttributeUncheckedUpdateInput>
  }

  /**
   * ProductAttribute delete
   */
  export type ProductAttributeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
    /**
     * Filter which ProductAttribute to delete.
     */
    where: ProductAttributeWhereUniqueInput
  }

  /**
   * ProductAttribute deleteMany
   */
  export type ProductAttributeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductAttributes to delete
     */
    where?: ProductAttributeWhereInput
  }

  /**
   * ProductAttribute without action
   */
  export type ProductAttributeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductAttribute
     */
    select?: ProductAttributeSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductAttributeInclude<ExtArgs> | null
  }


  /**
   * Model ProductVariant
   */

  export type AggregateProductVariant = {
    _count: ProductVariantCountAggregateOutputType | null
    _avg: ProductVariantAvgAggregateOutputType | null
    _sum: ProductVariantSumAggregateOutputType | null
    _min: ProductVariantMinAggregateOutputType | null
    _max: ProductVariantMaxAggregateOutputType | null
  }

  export type ProductVariantAvgAggregateOutputType = {
    price: Decimal | null
    stock: Decimal | null
    sequence_no: number | null
  }

  export type ProductVariantSumAggregateOutputType = {
    price: Decimal | null
    stock: Decimal | null
    sequence_no: number | null
  }

  export type ProductVariantMinAggregateOutputType = {
    id: string | null
    sku: string | null
    price: Decimal | null
    stock: Decimal | null
    sequence_no: number | null
    productId: string | null
  }

  export type ProductVariantMaxAggregateOutputType = {
    id: string | null
    sku: string | null
    price: Decimal | null
    stock: Decimal | null
    sequence_no: number | null
    productId: string | null
  }

  export type ProductVariantCountAggregateOutputType = {
    id: number
    sku: number
    price: number
    stock: number
    attributes: number
    images: number
    sequence_no: number
    productId: number
    _all: number
  }


  export type ProductVariantAvgAggregateInputType = {
    price?: true
    stock?: true
    sequence_no?: true
  }

  export type ProductVariantSumAggregateInputType = {
    price?: true
    stock?: true
    sequence_no?: true
  }

  export type ProductVariantMinAggregateInputType = {
    id?: true
    sku?: true
    price?: true
    stock?: true
    sequence_no?: true
    productId?: true
  }

  export type ProductVariantMaxAggregateInputType = {
    id?: true
    sku?: true
    price?: true
    stock?: true
    sequence_no?: true
    productId?: true
  }

  export type ProductVariantCountAggregateInputType = {
    id?: true
    sku?: true
    price?: true
    stock?: true
    attributes?: true
    images?: true
    sequence_no?: true
    productId?: true
    _all?: true
  }

  export type ProductVariantAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductVariant to aggregate.
     */
    where?: ProductVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductVariants to fetch.
     */
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ProductVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductVariants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ProductVariants
    **/
    _count?: true | ProductVariantCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ProductVariantAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ProductVariantSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ProductVariantMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ProductVariantMaxAggregateInputType
  }

  export type GetProductVariantAggregateType<T extends ProductVariantAggregateArgs> = {
        [P in keyof T & keyof AggregateProductVariant]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProductVariant[P]>
      : GetScalarType<T[P], AggregateProductVariant[P]>
  }




  export type ProductVariantGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ProductVariantWhereInput
    orderBy?: ProductVariantOrderByWithAggregationInput | ProductVariantOrderByWithAggregationInput[]
    by: ProductVariantScalarFieldEnum[] | ProductVariantScalarFieldEnum
    having?: ProductVariantScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ProductVariantCountAggregateInputType | true
    _avg?: ProductVariantAvgAggregateInputType
    _sum?: ProductVariantSumAggregateInputType
    _min?: ProductVariantMinAggregateInputType
    _max?: ProductVariantMaxAggregateInputType
  }

  export type ProductVariantGroupByOutputType = {
    id: string
    sku: string
    price: Decimal
    stock: Decimal
    attributes: JsonValue
    images: JsonValue
    sequence_no: number
    productId: string
    _count: ProductVariantCountAggregateOutputType | null
    _avg: ProductVariantAvgAggregateOutputType | null
    _sum: ProductVariantSumAggregateOutputType | null
    _min: ProductVariantMinAggregateOutputType | null
    _max: ProductVariantMaxAggregateOutputType | null
  }

  type GetProductVariantGroupByPayload<T extends ProductVariantGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ProductVariantGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ProductVariantGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ProductVariantGroupByOutputType[P]>
            : GetScalarType<T[P], ProductVariantGroupByOutputType[P]>
        }
      >
    >


  export type ProductVariantSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    sku?: boolean
    price?: boolean
    stock?: boolean
    attributes?: boolean
    images?: boolean
    sequence_no?: boolean
    productId?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["productVariant"]>


  export type ProductVariantSelectScalar = {
    id?: boolean
    sku?: boolean
    price?: boolean
    stock?: boolean
    attributes?: boolean
    images?: boolean
    sequence_no?: boolean
    productId?: boolean
  }

  export type ProductVariantInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ProductVariantPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ProductVariant"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      sku: string
      price: Prisma.Decimal
      stock: Prisma.Decimal
      attributes: Prisma.JsonValue
      images: Prisma.JsonValue
      sequence_no: number
      productId: string
    }, ExtArgs["result"]["productVariant"]>
    composites: {}
  }

  type ProductVariantGetPayload<S extends boolean | null | undefined | ProductVariantDefaultArgs> = $Result.GetResult<Prisma.$ProductVariantPayload, S>

  type ProductVariantCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ProductVariantFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ProductVariantCountAggregateInputType | true
    }

  export interface ProductVariantDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ProductVariant'], meta: { name: 'ProductVariant' } }
    /**
     * Find zero or one ProductVariant that matches the filter.
     * @param {ProductVariantFindUniqueArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ProductVariantFindUniqueArgs>(args: SelectSubset<T, ProductVariantFindUniqueArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ProductVariant that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ProductVariantFindUniqueOrThrowArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ProductVariantFindUniqueOrThrowArgs>(args: SelectSubset<T, ProductVariantFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ProductVariant that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantFindFirstArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ProductVariantFindFirstArgs>(args?: SelectSubset<T, ProductVariantFindFirstArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ProductVariant that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantFindFirstOrThrowArgs} args - Arguments to find a ProductVariant
     * @example
     * // Get one ProductVariant
     * const productVariant = await prisma.productVariant.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ProductVariantFindFirstOrThrowArgs>(args?: SelectSubset<T, ProductVariantFindFirstOrThrowArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ProductVariants that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ProductVariants
     * const productVariants = await prisma.productVariant.findMany()
     * 
     * // Get first 10 ProductVariants
     * const productVariants = await prisma.productVariant.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const productVariantWithIdOnly = await prisma.productVariant.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ProductVariantFindManyArgs>(args?: SelectSubset<T, ProductVariantFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ProductVariant.
     * @param {ProductVariantCreateArgs} args - Arguments to create a ProductVariant.
     * @example
     * // Create one ProductVariant
     * const ProductVariant = await prisma.productVariant.create({
     *   data: {
     *     // ... data to create a ProductVariant
     *   }
     * })
     * 
     */
    create<T extends ProductVariantCreateArgs>(args: SelectSubset<T, ProductVariantCreateArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ProductVariants.
     * @param {ProductVariantCreateManyArgs} args - Arguments to create many ProductVariants.
     * @example
     * // Create many ProductVariants
     * const productVariant = await prisma.productVariant.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ProductVariantCreateManyArgs>(args?: SelectSubset<T, ProductVariantCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ProductVariant.
     * @param {ProductVariantDeleteArgs} args - Arguments to delete one ProductVariant.
     * @example
     * // Delete one ProductVariant
     * const ProductVariant = await prisma.productVariant.delete({
     *   where: {
     *     // ... filter to delete one ProductVariant
     *   }
     * })
     * 
     */
    delete<T extends ProductVariantDeleteArgs>(args: SelectSubset<T, ProductVariantDeleteArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ProductVariant.
     * @param {ProductVariantUpdateArgs} args - Arguments to update one ProductVariant.
     * @example
     * // Update one ProductVariant
     * const productVariant = await prisma.productVariant.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ProductVariantUpdateArgs>(args: SelectSubset<T, ProductVariantUpdateArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ProductVariants.
     * @param {ProductVariantDeleteManyArgs} args - Arguments to filter ProductVariants to delete.
     * @example
     * // Delete a few ProductVariants
     * const { count } = await prisma.productVariant.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ProductVariantDeleteManyArgs>(args?: SelectSubset<T, ProductVariantDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ProductVariants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ProductVariants
     * const productVariant = await prisma.productVariant.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ProductVariantUpdateManyArgs>(args: SelectSubset<T, ProductVariantUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ProductVariant.
     * @param {ProductVariantUpsertArgs} args - Arguments to update or create a ProductVariant.
     * @example
     * // Update or create a ProductVariant
     * const productVariant = await prisma.productVariant.upsert({
     *   create: {
     *     // ... data to create a ProductVariant
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ProductVariant we want to update
     *   }
     * })
     */
    upsert<T extends ProductVariantUpsertArgs>(args: SelectSubset<T, ProductVariantUpsertArgs<ExtArgs>>): Prisma__ProductVariantClient<$Result.GetResult<Prisma.$ProductVariantPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ProductVariants.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantCountArgs} args - Arguments to filter ProductVariants to count.
     * @example
     * // Count the number of ProductVariants
     * const count = await prisma.productVariant.count({
     *   where: {
     *     // ... the filter for the ProductVariants we want to count
     *   }
     * })
    **/
    count<T extends ProductVariantCountArgs>(
      args?: Subset<T, ProductVariantCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ProductVariantCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ProductVariant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ProductVariantAggregateArgs>(args: Subset<T, ProductVariantAggregateArgs>): Prisma.PrismaPromise<GetProductVariantAggregateType<T>>

    /**
     * Group by ProductVariant.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ProductVariantGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ProductVariantGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ProductVariantGroupByArgs['orderBy'] }
        : { orderBy?: ProductVariantGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ProductVariantGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProductVariantGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ProductVariant model
   */
  readonly fields: ProductVariantFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ProductVariant.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ProductVariantClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ProductVariant model
   */ 
  interface ProductVariantFieldRefs {
    readonly id: FieldRef<"ProductVariant", 'String'>
    readonly sku: FieldRef<"ProductVariant", 'String'>
    readonly price: FieldRef<"ProductVariant", 'Decimal'>
    readonly stock: FieldRef<"ProductVariant", 'Decimal'>
    readonly attributes: FieldRef<"ProductVariant", 'Json'>
    readonly images: FieldRef<"ProductVariant", 'Json'>
    readonly sequence_no: FieldRef<"ProductVariant", 'Int'>
    readonly productId: FieldRef<"ProductVariant", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ProductVariant findUnique
   */
  export type ProductVariantFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariant to fetch.
     */
    where: ProductVariantWhereUniqueInput
  }

  /**
   * ProductVariant findUniqueOrThrow
   */
  export type ProductVariantFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariant to fetch.
     */
    where: ProductVariantWhereUniqueInput
  }

  /**
   * ProductVariant findFirst
   */
  export type ProductVariantFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariant to fetch.
     */
    where?: ProductVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductVariants to fetch.
     */
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductVariants.
     */
    cursor?: ProductVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductVariants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductVariants.
     */
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * ProductVariant findFirstOrThrow
   */
  export type ProductVariantFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariant to fetch.
     */
    where?: ProductVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductVariants to fetch.
     */
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ProductVariants.
     */
    cursor?: ProductVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductVariants.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ProductVariants.
     */
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * ProductVariant findMany
   */
  export type ProductVariantFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter, which ProductVariants to fetch.
     */
    where?: ProductVariantWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ProductVariants to fetch.
     */
    orderBy?: ProductVariantOrderByWithRelationInput | ProductVariantOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ProductVariants.
     */
    cursor?: ProductVariantWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ProductVariants from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ProductVariants.
     */
    skip?: number
    distinct?: ProductVariantScalarFieldEnum | ProductVariantScalarFieldEnum[]
  }

  /**
   * ProductVariant create
   */
  export type ProductVariantCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * The data needed to create a ProductVariant.
     */
    data: XOR<ProductVariantCreateInput, ProductVariantUncheckedCreateInput>
  }

  /**
   * ProductVariant createMany
   */
  export type ProductVariantCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ProductVariants.
     */
    data: ProductVariantCreateManyInput | ProductVariantCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ProductVariant update
   */
  export type ProductVariantUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * The data needed to update a ProductVariant.
     */
    data: XOR<ProductVariantUpdateInput, ProductVariantUncheckedUpdateInput>
    /**
     * Choose, which ProductVariant to update.
     */
    where: ProductVariantWhereUniqueInput
  }

  /**
   * ProductVariant updateMany
   */
  export type ProductVariantUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ProductVariants.
     */
    data: XOR<ProductVariantUpdateManyMutationInput, ProductVariantUncheckedUpdateManyInput>
    /**
     * Filter which ProductVariants to update
     */
    where?: ProductVariantWhereInput
  }

  /**
   * ProductVariant upsert
   */
  export type ProductVariantUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * The filter to search for the ProductVariant to update in case it exists.
     */
    where: ProductVariantWhereUniqueInput
    /**
     * In case the ProductVariant found by the `where` argument doesn't exist, create a new ProductVariant with this data.
     */
    create: XOR<ProductVariantCreateInput, ProductVariantUncheckedCreateInput>
    /**
     * In case the ProductVariant was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ProductVariantUpdateInput, ProductVariantUncheckedUpdateInput>
  }

  /**
   * ProductVariant delete
   */
  export type ProductVariantDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
    /**
     * Filter which ProductVariant to delete.
     */
    where: ProductVariantWhereUniqueInput
  }

  /**
   * ProductVariant deleteMany
   */
  export type ProductVariantDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ProductVariants to delete
     */
    where?: ProductVariantWhereInput
  }

  /**
   * ProductVariant without action
   */
  export type ProductVariantDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ProductVariant
     */
    select?: ProductVariantSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductVariantInclude<ExtArgs> | null
  }


  /**
   * Model Seller
   */

  export type AggregateSeller = {
    _count: SellerCountAggregateOutputType | null
    _avg: SellerAvgAggregateOutputType | null
    _sum: SellerSumAggregateOutputType | null
    _min: SellerMinAggregateOutputType | null
    _max: SellerMaxAggregateOutputType | null
  }

  export type SellerAvgAggregateOutputType = {
    rating: number | null
    reviewCount: number | null
  }

  export type SellerSumAggregateOutputType = {
    rating: number | null
    reviewCount: number | null
  }

  export type SellerMinAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    email: string | null
    phone: string | null
    logo: string | null
    rating: number | null
    reviewCount: number | null
    verified: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SellerMaxAggregateOutputType = {
    id: string | null
    name: string | null
    slug: string | null
    email: string | null
    phone: string | null
    logo: string | null
    rating: number | null
    reviewCount: number | null
    verified: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SellerCountAggregateOutputType = {
    id: number
    name: number
    slug: number
    email: number
    phone: number
    logo: number
    rating: number
    reviewCount: number
    verified: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type SellerAvgAggregateInputType = {
    rating?: true
    reviewCount?: true
  }

  export type SellerSumAggregateInputType = {
    rating?: true
    reviewCount?: true
  }

  export type SellerMinAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    email?: true
    phone?: true
    logo?: true
    rating?: true
    reviewCount?: true
    verified?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SellerMaxAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    email?: true
    phone?: true
    logo?: true
    rating?: true
    reviewCount?: true
    verified?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SellerCountAggregateInputType = {
    id?: true
    name?: true
    slug?: true
    email?: true
    phone?: true
    logo?: true
    rating?: true
    reviewCount?: true
    verified?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type SellerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Seller to aggregate.
     */
    where?: SellerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sellers to fetch.
     */
    orderBy?: SellerOrderByWithRelationInput | SellerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SellerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sellers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sellers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Sellers
    **/
    _count?: true | SellerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SellerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SellerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SellerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SellerMaxAggregateInputType
  }

  export type GetSellerAggregateType<T extends SellerAggregateArgs> = {
        [P in keyof T & keyof AggregateSeller]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSeller[P]>
      : GetScalarType<T[P], AggregateSeller[P]>
  }




  export type SellerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SellerWhereInput
    orderBy?: SellerOrderByWithAggregationInput | SellerOrderByWithAggregationInput[]
    by: SellerScalarFieldEnum[] | SellerScalarFieldEnum
    having?: SellerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SellerCountAggregateInputType | true
    _avg?: SellerAvgAggregateInputType
    _sum?: SellerSumAggregateInputType
    _min?: SellerMinAggregateInputType
    _max?: SellerMaxAggregateInputType
  }

  export type SellerGroupByOutputType = {
    id: string
    name: string
    slug: string
    email: string
    phone: string | null
    logo: string | null
    rating: number
    reviewCount: number
    verified: boolean
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: SellerCountAggregateOutputType | null
    _avg: SellerAvgAggregateOutputType | null
    _sum: SellerSumAggregateOutputType | null
    _min: SellerMinAggregateOutputType | null
    _max: SellerMaxAggregateOutputType | null
  }

  type GetSellerGroupByPayload<T extends SellerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SellerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SellerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SellerGroupByOutputType[P]>
            : GetScalarType<T[P], SellerGroupByOutputType[P]>
        }
      >
    >


  export type SellerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    slug?: boolean
    email?: boolean
    phone?: boolean
    logo?: boolean
    rating?: boolean
    reviewCount?: boolean
    verified?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    products?: boolean | Seller$productsArgs<ExtArgs>
    companies?: boolean | Seller$companiesArgs<ExtArgs>
    _count?: boolean | SellerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["seller"]>


  export type SellerSelectScalar = {
    id?: boolean
    name?: boolean
    slug?: boolean
    email?: boolean
    phone?: boolean
    logo?: boolean
    rating?: boolean
    reviewCount?: boolean
    verified?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type SellerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | Seller$productsArgs<ExtArgs>
    companies?: boolean | Seller$companiesArgs<ExtArgs>
    _count?: boolean | SellerCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SellerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Seller"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
      companies: Prisma.$CompanyPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      slug: string
      email: string
      phone: string | null
      logo: string | null
      rating: number
      reviewCount: number
      verified: boolean
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["seller"]>
    composites: {}
  }

  type SellerGetPayload<S extends boolean | null | undefined | SellerDefaultArgs> = $Result.GetResult<Prisma.$SellerPayload, S>

  type SellerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SellerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SellerCountAggregateInputType | true
    }

  export interface SellerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Seller'], meta: { name: 'Seller' } }
    /**
     * Find zero or one Seller that matches the filter.
     * @param {SellerFindUniqueArgs} args - Arguments to find a Seller
     * @example
     * // Get one Seller
     * const seller = await prisma.seller.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SellerFindUniqueArgs>(args: SelectSubset<T, SellerFindUniqueArgs<ExtArgs>>): Prisma__SellerClient<$Result.GetResult<Prisma.$SellerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Seller that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SellerFindUniqueOrThrowArgs} args - Arguments to find a Seller
     * @example
     * // Get one Seller
     * const seller = await prisma.seller.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SellerFindUniqueOrThrowArgs>(args: SelectSubset<T, SellerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SellerClient<$Result.GetResult<Prisma.$SellerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Seller that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerFindFirstArgs} args - Arguments to find a Seller
     * @example
     * // Get one Seller
     * const seller = await prisma.seller.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SellerFindFirstArgs>(args?: SelectSubset<T, SellerFindFirstArgs<ExtArgs>>): Prisma__SellerClient<$Result.GetResult<Prisma.$SellerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Seller that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerFindFirstOrThrowArgs} args - Arguments to find a Seller
     * @example
     * // Get one Seller
     * const seller = await prisma.seller.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SellerFindFirstOrThrowArgs>(args?: SelectSubset<T, SellerFindFirstOrThrowArgs<ExtArgs>>): Prisma__SellerClient<$Result.GetResult<Prisma.$SellerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Sellers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Sellers
     * const sellers = await prisma.seller.findMany()
     * 
     * // Get first 10 Sellers
     * const sellers = await prisma.seller.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const sellerWithIdOnly = await prisma.seller.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SellerFindManyArgs>(args?: SelectSubset<T, SellerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SellerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Seller.
     * @param {SellerCreateArgs} args - Arguments to create a Seller.
     * @example
     * // Create one Seller
     * const Seller = await prisma.seller.create({
     *   data: {
     *     // ... data to create a Seller
     *   }
     * })
     * 
     */
    create<T extends SellerCreateArgs>(args: SelectSubset<T, SellerCreateArgs<ExtArgs>>): Prisma__SellerClient<$Result.GetResult<Prisma.$SellerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Sellers.
     * @param {SellerCreateManyArgs} args - Arguments to create many Sellers.
     * @example
     * // Create many Sellers
     * const seller = await prisma.seller.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SellerCreateManyArgs>(args?: SelectSubset<T, SellerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Seller.
     * @param {SellerDeleteArgs} args - Arguments to delete one Seller.
     * @example
     * // Delete one Seller
     * const Seller = await prisma.seller.delete({
     *   where: {
     *     // ... filter to delete one Seller
     *   }
     * })
     * 
     */
    delete<T extends SellerDeleteArgs>(args: SelectSubset<T, SellerDeleteArgs<ExtArgs>>): Prisma__SellerClient<$Result.GetResult<Prisma.$SellerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Seller.
     * @param {SellerUpdateArgs} args - Arguments to update one Seller.
     * @example
     * // Update one Seller
     * const seller = await prisma.seller.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SellerUpdateArgs>(args: SelectSubset<T, SellerUpdateArgs<ExtArgs>>): Prisma__SellerClient<$Result.GetResult<Prisma.$SellerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Sellers.
     * @param {SellerDeleteManyArgs} args - Arguments to filter Sellers to delete.
     * @example
     * // Delete a few Sellers
     * const { count } = await prisma.seller.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SellerDeleteManyArgs>(args?: SelectSubset<T, SellerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Sellers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Sellers
     * const seller = await prisma.seller.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SellerUpdateManyArgs>(args: SelectSubset<T, SellerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Seller.
     * @param {SellerUpsertArgs} args - Arguments to update or create a Seller.
     * @example
     * // Update or create a Seller
     * const seller = await prisma.seller.upsert({
     *   create: {
     *     // ... data to create a Seller
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Seller we want to update
     *   }
     * })
     */
    upsert<T extends SellerUpsertArgs>(args: SelectSubset<T, SellerUpsertArgs<ExtArgs>>): Prisma__SellerClient<$Result.GetResult<Prisma.$SellerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Sellers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerCountArgs} args - Arguments to filter Sellers to count.
     * @example
     * // Count the number of Sellers
     * const count = await prisma.seller.count({
     *   where: {
     *     // ... the filter for the Sellers we want to count
     *   }
     * })
    **/
    count<T extends SellerCountArgs>(
      args?: Subset<T, SellerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SellerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Seller.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SellerAggregateArgs>(args: Subset<T, SellerAggregateArgs>): Prisma.PrismaPromise<GetSellerAggregateType<T>>

    /**
     * Group by Seller.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SellerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SellerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SellerGroupByArgs['orderBy'] }
        : { orderBy?: SellerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SellerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSellerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Seller model
   */
  readonly fields: SellerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Seller.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SellerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends Seller$productsArgs<ExtArgs> = {}>(args?: Subset<T, Seller$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany"> | Null>
    companies<T extends Seller$companiesArgs<ExtArgs> = {}>(args?: Subset<T, Seller$companiesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CompanyPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Seller model
   */ 
  interface SellerFieldRefs {
    readonly id: FieldRef<"Seller", 'String'>
    readonly name: FieldRef<"Seller", 'String'>
    readonly slug: FieldRef<"Seller", 'String'>
    readonly email: FieldRef<"Seller", 'String'>
    readonly phone: FieldRef<"Seller", 'String'>
    readonly logo: FieldRef<"Seller", 'String'>
    readonly rating: FieldRef<"Seller", 'Float'>
    readonly reviewCount: FieldRef<"Seller", 'Int'>
    readonly verified: FieldRef<"Seller", 'Boolean'>
    readonly created_at: FieldRef<"Seller", 'DateTime'>
    readonly created_by: FieldRef<"Seller", 'String'>
    readonly created_ip: FieldRef<"Seller", 'String'>
    readonly updated_at: FieldRef<"Seller", 'DateTime'>
    readonly updated_by: FieldRef<"Seller", 'String'>
    readonly updated_ip: FieldRef<"Seller", 'String'>
    readonly company_id: FieldRef<"Seller", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Seller findUnique
   */
  export type SellerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seller
     */
    select?: SellerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerInclude<ExtArgs> | null
    /**
     * Filter, which Seller to fetch.
     */
    where: SellerWhereUniqueInput
  }

  /**
   * Seller findUniqueOrThrow
   */
  export type SellerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seller
     */
    select?: SellerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerInclude<ExtArgs> | null
    /**
     * Filter, which Seller to fetch.
     */
    where: SellerWhereUniqueInput
  }

  /**
   * Seller findFirst
   */
  export type SellerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seller
     */
    select?: SellerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerInclude<ExtArgs> | null
    /**
     * Filter, which Seller to fetch.
     */
    where?: SellerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sellers to fetch.
     */
    orderBy?: SellerOrderByWithRelationInput | SellerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sellers.
     */
    cursor?: SellerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sellers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sellers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sellers.
     */
    distinct?: SellerScalarFieldEnum | SellerScalarFieldEnum[]
  }

  /**
   * Seller findFirstOrThrow
   */
  export type SellerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seller
     */
    select?: SellerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerInclude<ExtArgs> | null
    /**
     * Filter, which Seller to fetch.
     */
    where?: SellerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sellers to fetch.
     */
    orderBy?: SellerOrderByWithRelationInput | SellerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Sellers.
     */
    cursor?: SellerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sellers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sellers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Sellers.
     */
    distinct?: SellerScalarFieldEnum | SellerScalarFieldEnum[]
  }

  /**
   * Seller findMany
   */
  export type SellerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seller
     */
    select?: SellerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerInclude<ExtArgs> | null
    /**
     * Filter, which Sellers to fetch.
     */
    where?: SellerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Sellers to fetch.
     */
    orderBy?: SellerOrderByWithRelationInput | SellerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Sellers.
     */
    cursor?: SellerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Sellers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Sellers.
     */
    skip?: number
    distinct?: SellerScalarFieldEnum | SellerScalarFieldEnum[]
  }

  /**
   * Seller create
   */
  export type SellerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seller
     */
    select?: SellerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerInclude<ExtArgs> | null
    /**
     * The data needed to create a Seller.
     */
    data: XOR<SellerCreateInput, SellerUncheckedCreateInput>
  }

  /**
   * Seller createMany
   */
  export type SellerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Sellers.
     */
    data: SellerCreateManyInput | SellerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Seller update
   */
  export type SellerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seller
     */
    select?: SellerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerInclude<ExtArgs> | null
    /**
     * The data needed to update a Seller.
     */
    data: XOR<SellerUpdateInput, SellerUncheckedUpdateInput>
    /**
     * Choose, which Seller to update.
     */
    where: SellerWhereUniqueInput
  }

  /**
   * Seller updateMany
   */
  export type SellerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Sellers.
     */
    data: XOR<SellerUpdateManyMutationInput, SellerUncheckedUpdateManyInput>
    /**
     * Filter which Sellers to update
     */
    where?: SellerWhereInput
  }

  /**
   * Seller upsert
   */
  export type SellerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seller
     */
    select?: SellerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerInclude<ExtArgs> | null
    /**
     * The filter to search for the Seller to update in case it exists.
     */
    where: SellerWhereUniqueInput
    /**
     * In case the Seller found by the `where` argument doesn't exist, create a new Seller with this data.
     */
    create: XOR<SellerCreateInput, SellerUncheckedCreateInput>
    /**
     * In case the Seller was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SellerUpdateInput, SellerUncheckedUpdateInput>
  }

  /**
   * Seller delete
   */
  export type SellerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seller
     */
    select?: SellerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerInclude<ExtArgs> | null
    /**
     * Filter which Seller to delete.
     */
    where: SellerWhereUniqueInput
  }

  /**
   * Seller deleteMany
   */
  export type SellerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Sellers to delete
     */
    where?: SellerWhereInput
  }

  /**
   * Seller.products
   */
  export type Seller$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * Seller.companies
   */
  export type Seller$companiesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Company
     */
    select?: CompanySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CompanyInclude<ExtArgs> | null
    where?: CompanyWhereInput
    orderBy?: CompanyOrderByWithRelationInput | CompanyOrderByWithRelationInput[]
    cursor?: CompanyWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * Seller without action
   */
  export type SellerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Seller
     */
    select?: SellerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SellerInclude<ExtArgs> | null
  }


  /**
   * Model Review
   */

  export type AggregateReview = {
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  export type ReviewAvgAggregateOutputType = {
    rating: number | null
    helpful: number | null
  }

  export type ReviewSumAggregateOutputType = {
    rating: number | null
    helpful: number | null
  }

  export type ReviewMinAggregateOutputType = {
    id: string | null
    userId: string | null
    userName: string | null
    userAvatar: string | null
    rating: number | null
    title: string | null
    comment: string | null
    helpful: number | null
    createdAt: Date | null
    variantId: string | null
    productId: string | null
  }

  export type ReviewMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    userName: string | null
    userAvatar: string | null
    rating: number | null
    title: string | null
    comment: string | null
    helpful: number | null
    createdAt: Date | null
    variantId: string | null
    productId: string | null
  }

  export type ReviewCountAggregateOutputType = {
    id: number
    userId: number
    userName: number
    userAvatar: number
    rating: number
    title: number
    comment: number
    helpful: number
    createdAt: number
    variantId: number
    productId: number
    _all: number
  }


  export type ReviewAvgAggregateInputType = {
    rating?: true
    helpful?: true
  }

  export type ReviewSumAggregateInputType = {
    rating?: true
    helpful?: true
  }

  export type ReviewMinAggregateInputType = {
    id?: true
    userId?: true
    userName?: true
    userAvatar?: true
    rating?: true
    title?: true
    comment?: true
    helpful?: true
    createdAt?: true
    variantId?: true
    productId?: true
  }

  export type ReviewMaxAggregateInputType = {
    id?: true
    userId?: true
    userName?: true
    userAvatar?: true
    rating?: true
    title?: true
    comment?: true
    helpful?: true
    createdAt?: true
    variantId?: true
    productId?: true
  }

  export type ReviewCountAggregateInputType = {
    id?: true
    userId?: true
    userName?: true
    userAvatar?: true
    rating?: true
    title?: true
    comment?: true
    helpful?: true
    createdAt?: true
    variantId?: true
    productId?: true
    _all?: true
  }

  export type ReviewAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Review to aggregate.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Reviews
    **/
    _count?: true | ReviewCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ReviewAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ReviewSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ReviewMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ReviewMaxAggregateInputType
  }

  export type GetReviewAggregateType<T extends ReviewAggregateArgs> = {
        [P in keyof T & keyof AggregateReview]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateReview[P]>
      : GetScalarType<T[P], AggregateReview[P]>
  }




  export type ReviewGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ReviewWhereInput
    orderBy?: ReviewOrderByWithAggregationInput | ReviewOrderByWithAggregationInput[]
    by: ReviewScalarFieldEnum[] | ReviewScalarFieldEnum
    having?: ReviewScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ReviewCountAggregateInputType | true
    _avg?: ReviewAvgAggregateInputType
    _sum?: ReviewSumAggregateInputType
    _min?: ReviewMinAggregateInputType
    _max?: ReviewMaxAggregateInputType
  }

  export type ReviewGroupByOutputType = {
    id: string
    userId: string
    userName: string
    userAvatar: string | null
    rating: number
    title: string | null
    comment: string
    helpful: number
    createdAt: Date
    variantId: string | null
    productId: string
    _count: ReviewCountAggregateOutputType | null
    _avg: ReviewAvgAggregateOutputType | null
    _sum: ReviewSumAggregateOutputType | null
    _min: ReviewMinAggregateOutputType | null
    _max: ReviewMaxAggregateOutputType | null
  }

  type GetReviewGroupByPayload<T extends ReviewGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ReviewGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ReviewGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ReviewGroupByOutputType[P]>
            : GetScalarType<T[P], ReviewGroupByOutputType[P]>
        }
      >
    >


  export type ReviewSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    userName?: boolean
    userAvatar?: boolean
    rating?: boolean
    title?: boolean
    comment?: boolean
    helpful?: boolean
    createdAt?: boolean
    variantId?: boolean
    productId?: boolean
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["review"]>


  export type ReviewSelectScalar = {
    id?: boolean
    userId?: boolean
    userName?: boolean
    userAvatar?: boolean
    rating?: boolean
    title?: boolean
    comment?: boolean
    helpful?: boolean
    createdAt?: boolean
    variantId?: boolean
    productId?: boolean
  }

  export type ReviewInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $ReviewPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Review"
    objects: {
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      userName: string
      userAvatar: string | null
      rating: number
      title: string | null
      comment: string
      helpful: number
      createdAt: Date
      variantId: string | null
      productId: string
    }, ExtArgs["result"]["review"]>
    composites: {}
  }

  type ReviewGetPayload<S extends boolean | null | undefined | ReviewDefaultArgs> = $Result.GetResult<Prisma.$ReviewPayload, S>

  type ReviewCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ReviewFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ReviewCountAggregateInputType | true
    }

  export interface ReviewDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Review'], meta: { name: 'Review' } }
    /**
     * Find zero or one Review that matches the filter.
     * @param {ReviewFindUniqueArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ReviewFindUniqueArgs>(args: SelectSubset<T, ReviewFindUniqueArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Review that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ReviewFindUniqueOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ReviewFindUniqueOrThrowArgs>(args: SelectSubset<T, ReviewFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Review that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ReviewFindFirstArgs>(args?: SelectSubset<T, ReviewFindFirstArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Review that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindFirstOrThrowArgs} args - Arguments to find a Review
     * @example
     * // Get one Review
     * const review = await prisma.review.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ReviewFindFirstOrThrowArgs>(args?: SelectSubset<T, ReviewFindFirstOrThrowArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Reviews that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Reviews
     * const reviews = await prisma.review.findMany()
     * 
     * // Get first 10 Reviews
     * const reviews = await prisma.review.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const reviewWithIdOnly = await prisma.review.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ReviewFindManyArgs>(args?: SelectSubset<T, ReviewFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Review.
     * @param {ReviewCreateArgs} args - Arguments to create a Review.
     * @example
     * // Create one Review
     * const Review = await prisma.review.create({
     *   data: {
     *     // ... data to create a Review
     *   }
     * })
     * 
     */
    create<T extends ReviewCreateArgs>(args: SelectSubset<T, ReviewCreateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Reviews.
     * @param {ReviewCreateManyArgs} args - Arguments to create many Reviews.
     * @example
     * // Create many Reviews
     * const review = await prisma.review.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ReviewCreateManyArgs>(args?: SelectSubset<T, ReviewCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Review.
     * @param {ReviewDeleteArgs} args - Arguments to delete one Review.
     * @example
     * // Delete one Review
     * const Review = await prisma.review.delete({
     *   where: {
     *     // ... filter to delete one Review
     *   }
     * })
     * 
     */
    delete<T extends ReviewDeleteArgs>(args: SelectSubset<T, ReviewDeleteArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Review.
     * @param {ReviewUpdateArgs} args - Arguments to update one Review.
     * @example
     * // Update one Review
     * const review = await prisma.review.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ReviewUpdateArgs>(args: SelectSubset<T, ReviewUpdateArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Reviews.
     * @param {ReviewDeleteManyArgs} args - Arguments to filter Reviews to delete.
     * @example
     * // Delete a few Reviews
     * const { count } = await prisma.review.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ReviewDeleteManyArgs>(args?: SelectSubset<T, ReviewDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Reviews
     * const review = await prisma.review.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ReviewUpdateManyArgs>(args: SelectSubset<T, ReviewUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Review.
     * @param {ReviewUpsertArgs} args - Arguments to update or create a Review.
     * @example
     * // Update or create a Review
     * const review = await prisma.review.upsert({
     *   create: {
     *     // ... data to create a Review
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Review we want to update
     *   }
     * })
     */
    upsert<T extends ReviewUpsertArgs>(args: SelectSubset<T, ReviewUpsertArgs<ExtArgs>>): Prisma__ReviewClient<$Result.GetResult<Prisma.$ReviewPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Reviews.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewCountArgs} args - Arguments to filter Reviews to count.
     * @example
     * // Count the number of Reviews
     * const count = await prisma.review.count({
     *   where: {
     *     // ... the filter for the Reviews we want to count
     *   }
     * })
    **/
    count<T extends ReviewCountArgs>(
      args?: Subset<T, ReviewCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ReviewCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ReviewAggregateArgs>(args: Subset<T, ReviewAggregateArgs>): Prisma.PrismaPromise<GetReviewAggregateType<T>>

    /**
     * Group by Review.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ReviewGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ReviewGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ReviewGroupByArgs['orderBy'] }
        : { orderBy?: ReviewGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ReviewGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetReviewGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Review model
   */
  readonly fields: ReviewFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Review.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ReviewClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Review model
   */ 
  interface ReviewFieldRefs {
    readonly id: FieldRef<"Review", 'String'>
    readonly userId: FieldRef<"Review", 'String'>
    readonly userName: FieldRef<"Review", 'String'>
    readonly userAvatar: FieldRef<"Review", 'String'>
    readonly rating: FieldRef<"Review", 'Float'>
    readonly title: FieldRef<"Review", 'String'>
    readonly comment: FieldRef<"Review", 'String'>
    readonly helpful: FieldRef<"Review", 'Int'>
    readonly createdAt: FieldRef<"Review", 'DateTime'>
    readonly variantId: FieldRef<"Review", 'String'>
    readonly productId: FieldRef<"Review", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Review findUnique
   */
  export type ReviewFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findUniqueOrThrow
   */
  export type ReviewFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review findFirst
   */
  export type ReviewFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findFirstOrThrow
   */
  export type ReviewFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Review to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Reviews.
     */
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review findMany
   */
  export type ReviewFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter, which Reviews to fetch.
     */
    where?: ReviewWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Reviews to fetch.
     */
    orderBy?: ReviewOrderByWithRelationInput | ReviewOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Reviews.
     */
    cursor?: ReviewWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Reviews from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Reviews.
     */
    skip?: number
    distinct?: ReviewScalarFieldEnum | ReviewScalarFieldEnum[]
  }

  /**
   * Review create
   */
  export type ReviewCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to create a Review.
     */
    data: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
  }

  /**
   * Review createMany
   */
  export type ReviewCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Reviews.
     */
    data: ReviewCreateManyInput | ReviewCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Review update
   */
  export type ReviewUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The data needed to update a Review.
     */
    data: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
    /**
     * Choose, which Review to update.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review updateMany
   */
  export type ReviewUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Reviews.
     */
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyInput>
    /**
     * Filter which Reviews to update
     */
    where?: ReviewWhereInput
  }

  /**
   * Review upsert
   */
  export type ReviewUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * The filter to search for the Review to update in case it exists.
     */
    where: ReviewWhereUniqueInput
    /**
     * In case the Review found by the `where` argument doesn't exist, create a new Review with this data.
     */
    create: XOR<ReviewCreateInput, ReviewUncheckedCreateInput>
    /**
     * In case the Review was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ReviewUpdateInput, ReviewUncheckedUpdateInput>
  }

  /**
   * Review delete
   */
  export type ReviewDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
    /**
     * Filter which Review to delete.
     */
    where: ReviewWhereUniqueInput
  }

  /**
   * Review deleteMany
   */
  export type ReviewDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Reviews to delete
     */
    where?: ReviewWhereInput
  }

  /**
   * Review without action
   */
  export type ReviewDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Review
     */
    select?: ReviewSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ReviewInclude<ExtArgs> | null
  }


  /**
   * Model Customer
   */

  export type AggregateCustomer = {
    _count: CustomerCountAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  export type CustomerMinAggregateOutputType = {
    id: string | null
    first_name: string | null
    last_name: string | null
    email: string | null
    phone: string | null
    password: string | null
    is_active: boolean | null
    remember_token: string | null
    email_verified: Date | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
  }

  export type CustomerMaxAggregateOutputType = {
    id: string | null
    first_name: string | null
    last_name: string | null
    email: string | null
    phone: string | null
    password: string | null
    is_active: boolean | null
    remember_token: string | null
    email_verified: Date | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
  }

  export type CustomerCountAggregateOutputType = {
    id: number
    first_name: number
    last_name: number
    email: number
    phone: number
    password: number
    is_active: number
    remember_token: number
    email_verified: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    _all: number
  }


  export type CustomerMinAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    phone?: true
    password?: true
    is_active?: true
    remember_token?: true
    email_verified?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
  }

  export type CustomerMaxAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    phone?: true
    password?: true
    is_active?: true
    remember_token?: true
    email_verified?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
  }

  export type CustomerCountAggregateInputType = {
    id?: true
    first_name?: true
    last_name?: true
    email?: true
    phone?: true
    password?: true
    is_active?: true
    remember_token?: true
    email_verified?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    _all?: true
  }

  export type CustomerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customer to aggregate.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Customers
    **/
    _count?: true | CustomerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerMaxAggregateInputType
  }

  export type GetCustomerAggregateType<T extends CustomerAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomer[P]>
      : GetScalarType<T[P], AggregateCustomer[P]>
  }




  export type CustomerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerWhereInput
    orderBy?: CustomerOrderByWithAggregationInput | CustomerOrderByWithAggregationInput[]
    by: CustomerScalarFieldEnum[] | CustomerScalarFieldEnum
    having?: CustomerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerCountAggregateInputType | true
    _min?: CustomerMinAggregateInputType
    _max?: CustomerMaxAggregateInputType
  }

  export type CustomerGroupByOutputType = {
    id: string
    first_name: string
    last_name: string
    email: string
    phone: string | null
    password: string
    is_active: boolean
    remember_token: string | null
    email_verified: Date | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    _count: CustomerCountAggregateOutputType | null
    _min: CustomerMinAggregateOutputType | null
    _max: CustomerMaxAggregateOutputType | null
  }

  type GetCustomerGroupByPayload<T extends CustomerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerGroupByOutputType[P]>
        }
      >
    >


  export type CustomerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    phone?: boolean
    password?: boolean
    is_active?: boolean
    remember_token?: boolean
    email_verified?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    orders?: boolean | Customer$ordersArgs<ExtArgs>
    refresh_tokens?: boolean | Customer$refresh_tokensArgs<ExtArgs>
    addresses?: boolean | Customer$addressesArgs<ExtArgs>
    Wishlist?: boolean | Customer$WishlistArgs<ExtArgs>
    PendingOrder?: boolean | Customer$PendingOrderArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customer"]>


  export type CustomerSelectScalar = {
    id?: boolean
    first_name?: boolean
    last_name?: boolean
    email?: boolean
    phone?: boolean
    password?: boolean
    is_active?: boolean
    remember_token?: boolean
    email_verified?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
  }

  export type CustomerInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orders?: boolean | Customer$ordersArgs<ExtArgs>
    refresh_tokens?: boolean | Customer$refresh_tokensArgs<ExtArgs>
    addresses?: boolean | Customer$addressesArgs<ExtArgs>
    Wishlist?: boolean | Customer$WishlistArgs<ExtArgs>
    PendingOrder?: boolean | Customer$PendingOrderArgs<ExtArgs>
    _count?: boolean | CustomerCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CustomerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Customer"
    objects: {
      orders: Prisma.$OrderPayload<ExtArgs>[]
      refresh_tokens: Prisma.$CustomerRefreshTokenPayload<ExtArgs>[]
      addresses: Prisma.$CustomerAddressPayload<ExtArgs>[]
      Wishlist: Prisma.$WishlistPayload<ExtArgs>[]
      PendingOrder: Prisma.$PendingOrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      first_name: string
      last_name: string
      email: string
      phone: string | null
      password: string
      is_active: boolean
      remember_token: string | null
      email_verified: Date | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
    }, ExtArgs["result"]["customer"]>
    composites: {}
  }

  type CustomerGetPayload<S extends boolean | null | undefined | CustomerDefaultArgs> = $Result.GetResult<Prisma.$CustomerPayload, S>

  type CustomerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CustomerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CustomerCountAggregateInputType | true
    }

  export interface CustomerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Customer'], meta: { name: 'Customer' } }
    /**
     * Find zero or one Customer that matches the filter.
     * @param {CustomerFindUniqueArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerFindUniqueArgs>(args: SelectSubset<T, CustomerFindUniqueArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Customer that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CustomerFindUniqueOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Customer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerFindFirstArgs>(args?: SelectSubset<T, CustomerFindFirstArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Customer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindFirstOrThrowArgs} args - Arguments to find a Customer
     * @example
     * // Get one Customer
     * const customer = await prisma.customer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Customers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Customers
     * const customers = await prisma.customer.findMany()
     * 
     * // Get first 10 Customers
     * const customers = await prisma.customer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customerWithIdOnly = await prisma.customer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomerFindManyArgs>(args?: SelectSubset<T, CustomerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Customer.
     * @param {CustomerCreateArgs} args - Arguments to create a Customer.
     * @example
     * // Create one Customer
     * const Customer = await prisma.customer.create({
     *   data: {
     *     // ... data to create a Customer
     *   }
     * })
     * 
     */
    create<T extends CustomerCreateArgs>(args: SelectSubset<T, CustomerCreateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Customers.
     * @param {CustomerCreateManyArgs} args - Arguments to create many Customers.
     * @example
     * // Create many Customers
     * const customer = await prisma.customer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerCreateManyArgs>(args?: SelectSubset<T, CustomerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Customer.
     * @param {CustomerDeleteArgs} args - Arguments to delete one Customer.
     * @example
     * // Delete one Customer
     * const Customer = await prisma.customer.delete({
     *   where: {
     *     // ... filter to delete one Customer
     *   }
     * })
     * 
     */
    delete<T extends CustomerDeleteArgs>(args: SelectSubset<T, CustomerDeleteArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Customer.
     * @param {CustomerUpdateArgs} args - Arguments to update one Customer.
     * @example
     * // Update one Customer
     * const customer = await prisma.customer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerUpdateArgs>(args: SelectSubset<T, CustomerUpdateArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Customers.
     * @param {CustomerDeleteManyArgs} args - Arguments to filter Customers to delete.
     * @example
     * // Delete a few Customers
     * const { count } = await prisma.customer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerDeleteManyArgs>(args?: SelectSubset<T, CustomerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Customers
     * const customer = await prisma.customer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerUpdateManyArgs>(args: SelectSubset<T, CustomerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Customer.
     * @param {CustomerUpsertArgs} args - Arguments to update or create a Customer.
     * @example
     * // Update or create a Customer
     * const customer = await prisma.customer.upsert({
     *   create: {
     *     // ... data to create a Customer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Customer we want to update
     *   }
     * })
     */
    upsert<T extends CustomerUpsertArgs>(args: SelectSubset<T, CustomerUpsertArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Customers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerCountArgs} args - Arguments to filter Customers to count.
     * @example
     * // Count the number of Customers
     * const count = await prisma.customer.count({
     *   where: {
     *     // ... the filter for the Customers we want to count
     *   }
     * })
    **/
    count<T extends CustomerCountArgs>(
      args?: Subset<T, CustomerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerAggregateArgs>(args: Subset<T, CustomerAggregateArgs>): Prisma.PrismaPromise<GetCustomerAggregateType<T>>

    /**
     * Group by Customer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerGroupByArgs['orderBy'] }
        : { orderBy?: CustomerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Customer model
   */
  readonly fields: CustomerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Customer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orders<T extends Customer$ordersArgs<ExtArgs> = {}>(args?: Subset<T, Customer$ordersArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    refresh_tokens<T extends Customer$refresh_tokensArgs<ExtArgs> = {}>(args?: Subset<T, Customer$refresh_tokensArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerRefreshTokenPayload<ExtArgs>, T, "findMany"> | Null>
    addresses<T extends Customer$addressesArgs<ExtArgs> = {}>(args?: Subset<T, Customer$addressesArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerAddressPayload<ExtArgs>, T, "findMany"> | Null>
    Wishlist<T extends Customer$WishlistArgs<ExtArgs> = {}>(args?: Subset<T, Customer$WishlistArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WishlistPayload<ExtArgs>, T, "findMany"> | Null>
    PendingOrder<T extends Customer$PendingOrderArgs<ExtArgs> = {}>(args?: Subset<T, Customer$PendingOrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PendingOrderPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Customer model
   */ 
  interface CustomerFieldRefs {
    readonly id: FieldRef<"Customer", 'String'>
    readonly first_name: FieldRef<"Customer", 'String'>
    readonly last_name: FieldRef<"Customer", 'String'>
    readonly email: FieldRef<"Customer", 'String'>
    readonly phone: FieldRef<"Customer", 'String'>
    readonly password: FieldRef<"Customer", 'String'>
    readonly is_active: FieldRef<"Customer", 'Boolean'>
    readonly remember_token: FieldRef<"Customer", 'String'>
    readonly email_verified: FieldRef<"Customer", 'DateTime'>
    readonly created_at: FieldRef<"Customer", 'DateTime'>
    readonly created_by: FieldRef<"Customer", 'String'>
    readonly created_ip: FieldRef<"Customer", 'String'>
    readonly updated_at: FieldRef<"Customer", 'DateTime'>
    readonly updated_by: FieldRef<"Customer", 'String'>
    readonly updated_ip: FieldRef<"Customer", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Customer findUnique
   */
  export type CustomerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findUniqueOrThrow
   */
  export type CustomerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer findFirst
   */
  export type CustomerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findFirstOrThrow
   */
  export type CustomerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customer to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Customers.
     */
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer findMany
   */
  export type CustomerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter, which Customers to fetch.
     */
    where?: CustomerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Customers to fetch.
     */
    orderBy?: CustomerOrderByWithRelationInput | CustomerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Customers.
     */
    cursor?: CustomerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Customers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Customers.
     */
    skip?: number
    distinct?: CustomerScalarFieldEnum | CustomerScalarFieldEnum[]
  }

  /**
   * Customer create
   */
  export type CustomerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to create a Customer.
     */
    data: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
  }

  /**
   * Customer createMany
   */
  export type CustomerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Customers.
     */
    data: CustomerCreateManyInput | CustomerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Customer update
   */
  export type CustomerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The data needed to update a Customer.
     */
    data: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
    /**
     * Choose, which Customer to update.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer updateMany
   */
  export type CustomerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Customers.
     */
    data: XOR<CustomerUpdateManyMutationInput, CustomerUncheckedUpdateManyInput>
    /**
     * Filter which Customers to update
     */
    where?: CustomerWhereInput
  }

  /**
   * Customer upsert
   */
  export type CustomerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * The filter to search for the Customer to update in case it exists.
     */
    where: CustomerWhereUniqueInput
    /**
     * In case the Customer found by the `where` argument doesn't exist, create a new Customer with this data.
     */
    create: XOR<CustomerCreateInput, CustomerUncheckedCreateInput>
    /**
     * In case the Customer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerUpdateInput, CustomerUncheckedUpdateInput>
  }

  /**
   * Customer delete
   */
  export type CustomerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    /**
     * Filter which Customer to delete.
     */
    where: CustomerWhereUniqueInput
  }

  /**
   * Customer deleteMany
   */
  export type CustomerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Customers to delete
     */
    where?: CustomerWhereInput
  }

  /**
   * Customer.orders
   */
  export type Customer$ordersArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Customer.refresh_tokens
   */
  export type Customer$refresh_tokensArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerRefreshToken
     */
    select?: CustomerRefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerRefreshTokenInclude<ExtArgs> | null
    where?: CustomerRefreshTokenWhereInput
    orderBy?: CustomerRefreshTokenOrderByWithRelationInput | CustomerRefreshTokenOrderByWithRelationInput[]
    cursor?: CustomerRefreshTokenWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomerRefreshTokenScalarFieldEnum | CustomerRefreshTokenScalarFieldEnum[]
  }

  /**
   * Customer.addresses
   */
  export type Customer$addressesArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerAddress
     */
    select?: CustomerAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerAddressInclude<ExtArgs> | null
    where?: CustomerAddressWhereInput
    orderBy?: CustomerAddressOrderByWithRelationInput | CustomerAddressOrderByWithRelationInput[]
    cursor?: CustomerAddressWhereUniqueInput
    take?: number
    skip?: number
    distinct?: CustomerAddressScalarFieldEnum | CustomerAddressScalarFieldEnum[]
  }

  /**
   * Customer.Wishlist
   */
  export type Customer$WishlistArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wishlist
     */
    select?: WishlistSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WishlistInclude<ExtArgs> | null
    where?: WishlistWhereInput
    orderBy?: WishlistOrderByWithRelationInput | WishlistOrderByWithRelationInput[]
    cursor?: WishlistWhereUniqueInput
    take?: number
    skip?: number
    distinct?: WishlistScalarFieldEnum | WishlistScalarFieldEnum[]
  }

  /**
   * Customer.PendingOrder
   */
  export type Customer$PendingOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendingOrder
     */
    select?: PendingOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendingOrderInclude<ExtArgs> | null
    where?: PendingOrderWhereInput
    orderBy?: PendingOrderOrderByWithRelationInput | PendingOrderOrderByWithRelationInput[]
    cursor?: PendingOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PendingOrderScalarFieldEnum | PendingOrderScalarFieldEnum[]
  }

  /**
   * Customer without action
   */
  export type CustomerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
  }


  /**
   * Model CustomerRefreshToken
   */

  export type AggregateCustomerRefreshToken = {
    _count: CustomerRefreshTokenCountAggregateOutputType | null
    _min: CustomerRefreshTokenMinAggregateOutputType | null
    _max: CustomerRefreshTokenMaxAggregateOutputType | null
  }

  export type CustomerRefreshTokenMinAggregateOutputType = {
    id: string | null
    token: string | null
    customerId: string | null
    expiresAt: Date | null
    createdAt: Date | null
    isRevoked: boolean | null
  }

  export type CustomerRefreshTokenMaxAggregateOutputType = {
    id: string | null
    token: string | null
    customerId: string | null
    expiresAt: Date | null
    createdAt: Date | null
    isRevoked: boolean | null
  }

  export type CustomerRefreshTokenCountAggregateOutputType = {
    id: number
    token: number
    customerId: number
    expiresAt: number
    createdAt: number
    isRevoked: number
    _all: number
  }


  export type CustomerRefreshTokenMinAggregateInputType = {
    id?: true
    token?: true
    customerId?: true
    expiresAt?: true
    createdAt?: true
    isRevoked?: true
  }

  export type CustomerRefreshTokenMaxAggregateInputType = {
    id?: true
    token?: true
    customerId?: true
    expiresAt?: true
    createdAt?: true
    isRevoked?: true
  }

  export type CustomerRefreshTokenCountAggregateInputType = {
    id?: true
    token?: true
    customerId?: true
    expiresAt?: true
    createdAt?: true
    isRevoked?: true
    _all?: true
  }

  export type CustomerRefreshTokenAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomerRefreshToken to aggregate.
     */
    where?: CustomerRefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerRefreshTokens to fetch.
     */
    orderBy?: CustomerRefreshTokenOrderByWithRelationInput | CustomerRefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerRefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerRefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerRefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CustomerRefreshTokens
    **/
    _count?: true | CustomerRefreshTokenCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerRefreshTokenMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerRefreshTokenMaxAggregateInputType
  }

  export type GetCustomerRefreshTokenAggregateType<T extends CustomerRefreshTokenAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomerRefreshToken]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomerRefreshToken[P]>
      : GetScalarType<T[P], AggregateCustomerRefreshToken[P]>
  }




  export type CustomerRefreshTokenGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerRefreshTokenWhereInput
    orderBy?: CustomerRefreshTokenOrderByWithAggregationInput | CustomerRefreshTokenOrderByWithAggregationInput[]
    by: CustomerRefreshTokenScalarFieldEnum[] | CustomerRefreshTokenScalarFieldEnum
    having?: CustomerRefreshTokenScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerRefreshTokenCountAggregateInputType | true
    _min?: CustomerRefreshTokenMinAggregateInputType
    _max?: CustomerRefreshTokenMaxAggregateInputType
  }

  export type CustomerRefreshTokenGroupByOutputType = {
    id: string
    token: string
    customerId: string
    expiresAt: Date
    createdAt: Date
    isRevoked: boolean
    _count: CustomerRefreshTokenCountAggregateOutputType | null
    _min: CustomerRefreshTokenMinAggregateOutputType | null
    _max: CustomerRefreshTokenMaxAggregateOutputType | null
  }

  type GetCustomerRefreshTokenGroupByPayload<T extends CustomerRefreshTokenGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerRefreshTokenGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerRefreshTokenGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerRefreshTokenGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerRefreshTokenGroupByOutputType[P]>
        }
      >
    >


  export type CustomerRefreshTokenSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    token?: boolean
    customerId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    isRevoked?: boolean
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["customerRefreshToken"]>


  export type CustomerRefreshTokenSelectScalar = {
    id?: boolean
    token?: boolean
    customerId?: boolean
    expiresAt?: boolean
    createdAt?: boolean
    isRevoked?: boolean
  }

  export type CustomerRefreshTokenInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerDefaultArgs<ExtArgs>
  }

  export type $CustomerRefreshTokenPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CustomerRefreshToken"
    objects: {
      customer: Prisma.$CustomerPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      token: string
      customerId: string
      expiresAt: Date
      createdAt: Date
      isRevoked: boolean
    }, ExtArgs["result"]["customerRefreshToken"]>
    composites: {}
  }

  type CustomerRefreshTokenGetPayload<S extends boolean | null | undefined | CustomerRefreshTokenDefaultArgs> = $Result.GetResult<Prisma.$CustomerRefreshTokenPayload, S>

  type CustomerRefreshTokenCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CustomerRefreshTokenFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CustomerRefreshTokenCountAggregateInputType | true
    }

  export interface CustomerRefreshTokenDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CustomerRefreshToken'], meta: { name: 'CustomerRefreshToken' } }
    /**
     * Find zero or one CustomerRefreshToken that matches the filter.
     * @param {CustomerRefreshTokenFindUniqueArgs} args - Arguments to find a CustomerRefreshToken
     * @example
     * // Get one CustomerRefreshToken
     * const customerRefreshToken = await prisma.customerRefreshToken.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerRefreshTokenFindUniqueArgs>(args: SelectSubset<T, CustomerRefreshTokenFindUniqueArgs<ExtArgs>>): Prisma__CustomerRefreshTokenClient<$Result.GetResult<Prisma.$CustomerRefreshTokenPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CustomerRefreshToken that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CustomerRefreshTokenFindUniqueOrThrowArgs} args - Arguments to find a CustomerRefreshToken
     * @example
     * // Get one CustomerRefreshToken
     * const customerRefreshToken = await prisma.customerRefreshToken.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerRefreshTokenFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerRefreshTokenFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerRefreshTokenClient<$Result.GetResult<Prisma.$CustomerRefreshTokenPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CustomerRefreshToken that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerRefreshTokenFindFirstArgs} args - Arguments to find a CustomerRefreshToken
     * @example
     * // Get one CustomerRefreshToken
     * const customerRefreshToken = await prisma.customerRefreshToken.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerRefreshTokenFindFirstArgs>(args?: SelectSubset<T, CustomerRefreshTokenFindFirstArgs<ExtArgs>>): Prisma__CustomerRefreshTokenClient<$Result.GetResult<Prisma.$CustomerRefreshTokenPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CustomerRefreshToken that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerRefreshTokenFindFirstOrThrowArgs} args - Arguments to find a CustomerRefreshToken
     * @example
     * // Get one CustomerRefreshToken
     * const customerRefreshToken = await prisma.customerRefreshToken.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerRefreshTokenFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerRefreshTokenFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerRefreshTokenClient<$Result.GetResult<Prisma.$CustomerRefreshTokenPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CustomerRefreshTokens that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerRefreshTokenFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CustomerRefreshTokens
     * const customerRefreshTokens = await prisma.customerRefreshToken.findMany()
     * 
     * // Get first 10 CustomerRefreshTokens
     * const customerRefreshTokens = await prisma.customerRefreshToken.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customerRefreshTokenWithIdOnly = await prisma.customerRefreshToken.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomerRefreshTokenFindManyArgs>(args?: SelectSubset<T, CustomerRefreshTokenFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerRefreshTokenPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CustomerRefreshToken.
     * @param {CustomerRefreshTokenCreateArgs} args - Arguments to create a CustomerRefreshToken.
     * @example
     * // Create one CustomerRefreshToken
     * const CustomerRefreshToken = await prisma.customerRefreshToken.create({
     *   data: {
     *     // ... data to create a CustomerRefreshToken
     *   }
     * })
     * 
     */
    create<T extends CustomerRefreshTokenCreateArgs>(args: SelectSubset<T, CustomerRefreshTokenCreateArgs<ExtArgs>>): Prisma__CustomerRefreshTokenClient<$Result.GetResult<Prisma.$CustomerRefreshTokenPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CustomerRefreshTokens.
     * @param {CustomerRefreshTokenCreateManyArgs} args - Arguments to create many CustomerRefreshTokens.
     * @example
     * // Create many CustomerRefreshTokens
     * const customerRefreshToken = await prisma.customerRefreshToken.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerRefreshTokenCreateManyArgs>(args?: SelectSubset<T, CustomerRefreshTokenCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CustomerRefreshToken.
     * @param {CustomerRefreshTokenDeleteArgs} args - Arguments to delete one CustomerRefreshToken.
     * @example
     * // Delete one CustomerRefreshToken
     * const CustomerRefreshToken = await prisma.customerRefreshToken.delete({
     *   where: {
     *     // ... filter to delete one CustomerRefreshToken
     *   }
     * })
     * 
     */
    delete<T extends CustomerRefreshTokenDeleteArgs>(args: SelectSubset<T, CustomerRefreshTokenDeleteArgs<ExtArgs>>): Prisma__CustomerRefreshTokenClient<$Result.GetResult<Prisma.$CustomerRefreshTokenPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CustomerRefreshToken.
     * @param {CustomerRefreshTokenUpdateArgs} args - Arguments to update one CustomerRefreshToken.
     * @example
     * // Update one CustomerRefreshToken
     * const customerRefreshToken = await prisma.customerRefreshToken.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerRefreshTokenUpdateArgs>(args: SelectSubset<T, CustomerRefreshTokenUpdateArgs<ExtArgs>>): Prisma__CustomerRefreshTokenClient<$Result.GetResult<Prisma.$CustomerRefreshTokenPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CustomerRefreshTokens.
     * @param {CustomerRefreshTokenDeleteManyArgs} args - Arguments to filter CustomerRefreshTokens to delete.
     * @example
     * // Delete a few CustomerRefreshTokens
     * const { count } = await prisma.customerRefreshToken.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerRefreshTokenDeleteManyArgs>(args?: SelectSubset<T, CustomerRefreshTokenDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomerRefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerRefreshTokenUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CustomerRefreshTokens
     * const customerRefreshToken = await prisma.customerRefreshToken.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerRefreshTokenUpdateManyArgs>(args: SelectSubset<T, CustomerRefreshTokenUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CustomerRefreshToken.
     * @param {CustomerRefreshTokenUpsertArgs} args - Arguments to update or create a CustomerRefreshToken.
     * @example
     * // Update or create a CustomerRefreshToken
     * const customerRefreshToken = await prisma.customerRefreshToken.upsert({
     *   create: {
     *     // ... data to create a CustomerRefreshToken
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CustomerRefreshToken we want to update
     *   }
     * })
     */
    upsert<T extends CustomerRefreshTokenUpsertArgs>(args: SelectSubset<T, CustomerRefreshTokenUpsertArgs<ExtArgs>>): Prisma__CustomerRefreshTokenClient<$Result.GetResult<Prisma.$CustomerRefreshTokenPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CustomerRefreshTokens.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerRefreshTokenCountArgs} args - Arguments to filter CustomerRefreshTokens to count.
     * @example
     * // Count the number of CustomerRefreshTokens
     * const count = await prisma.customerRefreshToken.count({
     *   where: {
     *     // ... the filter for the CustomerRefreshTokens we want to count
     *   }
     * })
    **/
    count<T extends CustomerRefreshTokenCountArgs>(
      args?: Subset<T, CustomerRefreshTokenCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerRefreshTokenCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CustomerRefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerRefreshTokenAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerRefreshTokenAggregateArgs>(args: Subset<T, CustomerRefreshTokenAggregateArgs>): Prisma.PrismaPromise<GetCustomerRefreshTokenAggregateType<T>>

    /**
     * Group by CustomerRefreshToken.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerRefreshTokenGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerRefreshTokenGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerRefreshTokenGroupByArgs['orderBy'] }
        : { orderBy?: CustomerRefreshTokenGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerRefreshTokenGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerRefreshTokenGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CustomerRefreshToken model
   */
  readonly fields: CustomerRefreshTokenFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CustomerRefreshToken.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerRefreshTokenClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer<T extends CustomerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerDefaultArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CustomerRefreshToken model
   */ 
  interface CustomerRefreshTokenFieldRefs {
    readonly id: FieldRef<"CustomerRefreshToken", 'String'>
    readonly token: FieldRef<"CustomerRefreshToken", 'String'>
    readonly customerId: FieldRef<"CustomerRefreshToken", 'String'>
    readonly expiresAt: FieldRef<"CustomerRefreshToken", 'DateTime'>
    readonly createdAt: FieldRef<"CustomerRefreshToken", 'DateTime'>
    readonly isRevoked: FieldRef<"CustomerRefreshToken", 'Boolean'>
  }
    

  // Custom InputTypes
  /**
   * CustomerRefreshToken findUnique
   */
  export type CustomerRefreshTokenFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerRefreshToken
     */
    select?: CustomerRefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerRefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which CustomerRefreshToken to fetch.
     */
    where: CustomerRefreshTokenWhereUniqueInput
  }

  /**
   * CustomerRefreshToken findUniqueOrThrow
   */
  export type CustomerRefreshTokenFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerRefreshToken
     */
    select?: CustomerRefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerRefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which CustomerRefreshToken to fetch.
     */
    where: CustomerRefreshTokenWhereUniqueInput
  }

  /**
   * CustomerRefreshToken findFirst
   */
  export type CustomerRefreshTokenFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerRefreshToken
     */
    select?: CustomerRefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerRefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which CustomerRefreshToken to fetch.
     */
    where?: CustomerRefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerRefreshTokens to fetch.
     */
    orderBy?: CustomerRefreshTokenOrderByWithRelationInput | CustomerRefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomerRefreshTokens.
     */
    cursor?: CustomerRefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerRefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerRefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomerRefreshTokens.
     */
    distinct?: CustomerRefreshTokenScalarFieldEnum | CustomerRefreshTokenScalarFieldEnum[]
  }

  /**
   * CustomerRefreshToken findFirstOrThrow
   */
  export type CustomerRefreshTokenFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerRefreshToken
     */
    select?: CustomerRefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerRefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which CustomerRefreshToken to fetch.
     */
    where?: CustomerRefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerRefreshTokens to fetch.
     */
    orderBy?: CustomerRefreshTokenOrderByWithRelationInput | CustomerRefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomerRefreshTokens.
     */
    cursor?: CustomerRefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerRefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerRefreshTokens.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomerRefreshTokens.
     */
    distinct?: CustomerRefreshTokenScalarFieldEnum | CustomerRefreshTokenScalarFieldEnum[]
  }

  /**
   * CustomerRefreshToken findMany
   */
  export type CustomerRefreshTokenFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerRefreshToken
     */
    select?: CustomerRefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerRefreshTokenInclude<ExtArgs> | null
    /**
     * Filter, which CustomerRefreshTokens to fetch.
     */
    where?: CustomerRefreshTokenWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerRefreshTokens to fetch.
     */
    orderBy?: CustomerRefreshTokenOrderByWithRelationInput | CustomerRefreshTokenOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CustomerRefreshTokens.
     */
    cursor?: CustomerRefreshTokenWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerRefreshTokens from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerRefreshTokens.
     */
    skip?: number
    distinct?: CustomerRefreshTokenScalarFieldEnum | CustomerRefreshTokenScalarFieldEnum[]
  }

  /**
   * CustomerRefreshToken create
   */
  export type CustomerRefreshTokenCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerRefreshToken
     */
    select?: CustomerRefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerRefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to create a CustomerRefreshToken.
     */
    data: XOR<CustomerRefreshTokenCreateInput, CustomerRefreshTokenUncheckedCreateInput>
  }

  /**
   * CustomerRefreshToken createMany
   */
  export type CustomerRefreshTokenCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CustomerRefreshTokens.
     */
    data: CustomerRefreshTokenCreateManyInput | CustomerRefreshTokenCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CustomerRefreshToken update
   */
  export type CustomerRefreshTokenUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerRefreshToken
     */
    select?: CustomerRefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerRefreshTokenInclude<ExtArgs> | null
    /**
     * The data needed to update a CustomerRefreshToken.
     */
    data: XOR<CustomerRefreshTokenUpdateInput, CustomerRefreshTokenUncheckedUpdateInput>
    /**
     * Choose, which CustomerRefreshToken to update.
     */
    where: CustomerRefreshTokenWhereUniqueInput
  }

  /**
   * CustomerRefreshToken updateMany
   */
  export type CustomerRefreshTokenUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CustomerRefreshTokens.
     */
    data: XOR<CustomerRefreshTokenUpdateManyMutationInput, CustomerRefreshTokenUncheckedUpdateManyInput>
    /**
     * Filter which CustomerRefreshTokens to update
     */
    where?: CustomerRefreshTokenWhereInput
  }

  /**
   * CustomerRefreshToken upsert
   */
  export type CustomerRefreshTokenUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerRefreshToken
     */
    select?: CustomerRefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerRefreshTokenInclude<ExtArgs> | null
    /**
     * The filter to search for the CustomerRefreshToken to update in case it exists.
     */
    where: CustomerRefreshTokenWhereUniqueInput
    /**
     * In case the CustomerRefreshToken found by the `where` argument doesn't exist, create a new CustomerRefreshToken with this data.
     */
    create: XOR<CustomerRefreshTokenCreateInput, CustomerRefreshTokenUncheckedCreateInput>
    /**
     * In case the CustomerRefreshToken was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerRefreshTokenUpdateInput, CustomerRefreshTokenUncheckedUpdateInput>
  }

  /**
   * CustomerRefreshToken delete
   */
  export type CustomerRefreshTokenDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerRefreshToken
     */
    select?: CustomerRefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerRefreshTokenInclude<ExtArgs> | null
    /**
     * Filter which CustomerRefreshToken to delete.
     */
    where: CustomerRefreshTokenWhereUniqueInput
  }

  /**
   * CustomerRefreshToken deleteMany
   */
  export type CustomerRefreshTokenDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomerRefreshTokens to delete
     */
    where?: CustomerRefreshTokenWhereInput
  }

  /**
   * CustomerRefreshToken without action
   */
  export type CustomerRefreshTokenDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerRefreshToken
     */
    select?: CustomerRefreshTokenSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerRefreshTokenInclude<ExtArgs> | null
  }


  /**
   * Model Order
   */

  export type AggregateOrder = {
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  export type OrderAvgAggregateOutputType = {
    totalAmount: Decimal | null
    shippingCost: Decimal | null
    tax: Decimal | null
    discount: Decimal | null
    finalAmount: Decimal | null
    discount_amount: Decimal | null
  }

  export type OrderSumAggregateOutputType = {
    totalAmount: Decimal | null
    shippingCost: Decimal | null
    tax: Decimal | null
    discount: Decimal | null
    finalAmount: Decimal | null
    discount_amount: Decimal | null
  }

  export type OrderMinAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    userId: string | null
    status: $Enums.OrderStatus | null
    totalAmount: Decimal | null
    shippingCost: Decimal | null
    tax: Decimal | null
    discount: Decimal | null
    finalAmount: Decimal | null
    paymentMethod: string | null
    paymentStatus: $Enums.PaymentStatus | null
    trackingNumber: string | null
    trackingStatus: string | null
    customerId: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
    paymentGateway: string | null
    sslcommerzTransactionId: string | null
    paypalOrderId: string | null
    coupon_id: string | null
    discount_amount: Decimal | null
  }

  export type OrderMaxAggregateOutputType = {
    id: string | null
    orderNumber: string | null
    userId: string | null
    status: $Enums.OrderStatus | null
    totalAmount: Decimal | null
    shippingCost: Decimal | null
    tax: Decimal | null
    discount: Decimal | null
    finalAmount: Decimal | null
    paymentMethod: string | null
    paymentStatus: $Enums.PaymentStatus | null
    trackingNumber: string | null
    trackingStatus: string | null
    customerId: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
    paymentGateway: string | null
    sslcommerzTransactionId: string | null
    paypalOrderId: string | null
    coupon_id: string | null
    discount_amount: Decimal | null
  }

  export type OrderCountAggregateOutputType = {
    id: number
    orderNumber: number
    userId: number
    status: number
    totalAmount: number
    shippingCost: number
    tax: number
    discount: number
    finalAmount: number
    shippingAddress: number
    billingAddress: number
    paymentMethod: number
    paymentStatus: number
    trackingNumber: number
    trackingStatus: number
    customerId: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    paymentGateway: number
    sslcommerzTransactionId: number
    paypalOrderId: number
    paymentMetadata: number
    coupon_id: number
    discount_amount: number
    _all: number
  }


  export type OrderAvgAggregateInputType = {
    totalAmount?: true
    shippingCost?: true
    tax?: true
    discount?: true
    finalAmount?: true
    discount_amount?: true
  }

  export type OrderSumAggregateInputType = {
    totalAmount?: true
    shippingCost?: true
    tax?: true
    discount?: true
    finalAmount?: true
    discount_amount?: true
  }

  export type OrderMinAggregateInputType = {
    id?: true
    orderNumber?: true
    userId?: true
    status?: true
    totalAmount?: true
    shippingCost?: true
    tax?: true
    discount?: true
    finalAmount?: true
    paymentMethod?: true
    paymentStatus?: true
    trackingNumber?: true
    trackingStatus?: true
    customerId?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    paymentGateway?: true
    sslcommerzTransactionId?: true
    paypalOrderId?: true
    coupon_id?: true
    discount_amount?: true
  }

  export type OrderMaxAggregateInputType = {
    id?: true
    orderNumber?: true
    userId?: true
    status?: true
    totalAmount?: true
    shippingCost?: true
    tax?: true
    discount?: true
    finalAmount?: true
    paymentMethod?: true
    paymentStatus?: true
    trackingNumber?: true
    trackingStatus?: true
    customerId?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    paymentGateway?: true
    sslcommerzTransactionId?: true
    paypalOrderId?: true
    coupon_id?: true
    discount_amount?: true
  }

  export type OrderCountAggregateInputType = {
    id?: true
    orderNumber?: true
    userId?: true
    status?: true
    totalAmount?: true
    shippingCost?: true
    tax?: true
    discount?: true
    finalAmount?: true
    shippingAddress?: true
    billingAddress?: true
    paymentMethod?: true
    paymentStatus?: true
    trackingNumber?: true
    trackingStatus?: true
    customerId?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    paymentGateway?: true
    sslcommerzTransactionId?: true
    paypalOrderId?: true
    paymentMetadata?: true
    coupon_id?: true
    discount_amount?: true
    _all?: true
  }

  export type OrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Order to aggregate.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Orders
    **/
    _count?: true | OrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderMaxAggregateInputType
  }

  export type GetOrderAggregateType<T extends OrderAggregateArgs> = {
        [P in keyof T & keyof AggregateOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrder[P]>
      : GetScalarType<T[P], AggregateOrder[P]>
  }




  export type OrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithAggregationInput | OrderOrderByWithAggregationInput[]
    by: OrderScalarFieldEnum[] | OrderScalarFieldEnum
    having?: OrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderCountAggregateInputType | true
    _avg?: OrderAvgAggregateInputType
    _sum?: OrderSumAggregateInputType
    _min?: OrderMinAggregateInputType
    _max?: OrderMaxAggregateInputType
  }

  export type OrderGroupByOutputType = {
    id: string
    orderNumber: string
    userId: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal
    shippingCost: Decimal
    tax: Decimal
    discount: Decimal | null
    finalAmount: Decimal
    shippingAddress: JsonValue
    billingAddress: JsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber: string | null
    trackingStatus: string | null
    customerId: string | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    paymentGateway: string | null
    sslcommerzTransactionId: string | null
    paypalOrderId: string | null
    paymentMetadata: JsonValue | null
    coupon_id: string | null
    discount_amount: Decimal | null
    _count: OrderCountAggregateOutputType | null
    _avg: OrderAvgAggregateOutputType | null
    _sum: OrderSumAggregateOutputType | null
    _min: OrderMinAggregateOutputType | null
    _max: OrderMaxAggregateOutputType | null
  }

  type GetOrderGroupByPayload<T extends OrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderGroupByOutputType[P]>
            : GetScalarType<T[P], OrderGroupByOutputType[P]>
        }
      >
    >


  export type OrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderNumber?: boolean
    userId?: boolean
    status?: boolean
    totalAmount?: boolean
    shippingCost?: boolean
    tax?: boolean
    discount?: boolean
    finalAmount?: boolean
    shippingAddress?: boolean
    billingAddress?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    trackingNumber?: boolean
    trackingStatus?: boolean
    customerId?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    paymentGateway?: boolean
    sslcommerzTransactionId?: boolean
    paypalOrderId?: boolean
    paymentMetadata?: boolean
    coupon_id?: boolean
    discount_amount?: boolean
    orderItems?: boolean | Order$orderItemsArgs<ExtArgs>
    customer?: boolean | Order$customerArgs<ExtArgs>
    PaymentTransaction?: boolean | Order$PaymentTransactionArgs<ExtArgs>
    coupon?: boolean | Order$couponArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["order"]>


  export type OrderSelectScalar = {
    id?: boolean
    orderNumber?: boolean
    userId?: boolean
    status?: boolean
    totalAmount?: boolean
    shippingCost?: boolean
    tax?: boolean
    discount?: boolean
    finalAmount?: boolean
    shippingAddress?: boolean
    billingAddress?: boolean
    paymentMethod?: boolean
    paymentStatus?: boolean
    trackingNumber?: boolean
    trackingStatus?: boolean
    customerId?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    paymentGateway?: boolean
    sslcommerzTransactionId?: boolean
    paypalOrderId?: boolean
    paymentMetadata?: boolean
    coupon_id?: boolean
    discount_amount?: boolean
  }

  export type OrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    orderItems?: boolean | Order$orderItemsArgs<ExtArgs>
    customer?: boolean | Order$customerArgs<ExtArgs>
    PaymentTransaction?: boolean | Order$PaymentTransactionArgs<ExtArgs>
    coupon?: boolean | Order$couponArgs<ExtArgs>
    _count?: boolean | OrderCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $OrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Order"
    objects: {
      orderItems: Prisma.$OrderItemPayload<ExtArgs>[]
      customer: Prisma.$CustomerPayload<ExtArgs> | null
      PaymentTransaction: Prisma.$PaymentTransactionPayload<ExtArgs>[]
      coupon: Prisma.$CouponPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderNumber: string
      userId: string | null
      status: $Enums.OrderStatus
      totalAmount: Prisma.Decimal
      shippingCost: Prisma.Decimal
      tax: Prisma.Decimal
      discount: Prisma.Decimal | null
      finalAmount: Prisma.Decimal
      shippingAddress: Prisma.JsonValue
      billingAddress: Prisma.JsonValue
      paymentMethod: string
      paymentStatus: $Enums.PaymentStatus
      trackingNumber: string | null
      trackingStatus: string | null
      customerId: string | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
      paymentGateway: string | null
      sslcommerzTransactionId: string | null
      paypalOrderId: string | null
      paymentMetadata: Prisma.JsonValue | null
      coupon_id: string | null
      discount_amount: Prisma.Decimal | null
    }, ExtArgs["result"]["order"]>
    composites: {}
  }

  type OrderGetPayload<S extends boolean | null | undefined | OrderDefaultArgs> = $Result.GetResult<Prisma.$OrderPayload, S>

  type OrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrderFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrderCountAggregateInputType | true
    }

  export interface OrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Order'], meta: { name: 'Order' } }
    /**
     * Find zero or one Order that matches the filter.
     * @param {OrderFindUniqueArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderFindUniqueArgs>(args: SelectSubset<T, OrderFindUniqueArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Order that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrderFindUniqueOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Order that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderFindFirstArgs>(args?: SelectSubset<T, OrderFindFirstArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Order that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindFirstOrThrowArgs} args - Arguments to find a Order
     * @example
     * // Get one Order
     * const order = await prisma.order.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Orders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Orders
     * const orders = await prisma.order.findMany()
     * 
     * // Get first 10 Orders
     * const orders = await prisma.order.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderWithIdOnly = await prisma.order.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderFindManyArgs>(args?: SelectSubset<T, OrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Order.
     * @param {OrderCreateArgs} args - Arguments to create a Order.
     * @example
     * // Create one Order
     * const Order = await prisma.order.create({
     *   data: {
     *     // ... data to create a Order
     *   }
     * })
     * 
     */
    create<T extends OrderCreateArgs>(args: SelectSubset<T, OrderCreateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Orders.
     * @param {OrderCreateManyArgs} args - Arguments to create many Orders.
     * @example
     * // Create many Orders
     * const order = await prisma.order.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderCreateManyArgs>(args?: SelectSubset<T, OrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Order.
     * @param {OrderDeleteArgs} args - Arguments to delete one Order.
     * @example
     * // Delete one Order
     * const Order = await prisma.order.delete({
     *   where: {
     *     // ... filter to delete one Order
     *   }
     * })
     * 
     */
    delete<T extends OrderDeleteArgs>(args: SelectSubset<T, OrderDeleteArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Order.
     * @param {OrderUpdateArgs} args - Arguments to update one Order.
     * @example
     * // Update one Order
     * const order = await prisma.order.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderUpdateArgs>(args: SelectSubset<T, OrderUpdateArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Orders.
     * @param {OrderDeleteManyArgs} args - Arguments to filter Orders to delete.
     * @example
     * // Delete a few Orders
     * const { count } = await prisma.order.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderDeleteManyArgs>(args?: SelectSubset<T, OrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Orders
     * const order = await prisma.order.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderUpdateManyArgs>(args: SelectSubset<T, OrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Order.
     * @param {OrderUpsertArgs} args - Arguments to update or create a Order.
     * @example
     * // Update or create a Order
     * const order = await prisma.order.upsert({
     *   create: {
     *     // ... data to create a Order
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Order we want to update
     *   }
     * })
     */
    upsert<T extends OrderUpsertArgs>(args: SelectSubset<T, OrderUpsertArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Orders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderCountArgs} args - Arguments to filter Orders to count.
     * @example
     * // Count the number of Orders
     * const count = await prisma.order.count({
     *   where: {
     *     // ... the filter for the Orders we want to count
     *   }
     * })
    **/
    count<T extends OrderCountArgs>(
      args?: Subset<T, OrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderAggregateArgs>(args: Subset<T, OrderAggregateArgs>): Prisma.PrismaPromise<GetOrderAggregateType<T>>

    /**
     * Group by Order.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderGroupByArgs['orderBy'] }
        : { orderBy?: OrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Order model
   */
  readonly fields: OrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Order.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    orderItems<T extends Order$orderItemsArgs<ExtArgs> = {}>(args?: Subset<T, Order$orderItemsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany"> | Null>
    customer<T extends Order$customerArgs<ExtArgs> = {}>(args?: Subset<T, Order$customerArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    PaymentTransaction<T extends Order$PaymentTransactionArgs<ExtArgs> = {}>(args?: Subset<T, Order$PaymentTransactionArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findMany"> | Null>
    coupon<T extends Order$couponArgs<ExtArgs> = {}>(args?: Subset<T, Order$couponArgs<ExtArgs>>): Prisma__CouponClient<$Result.GetResult<Prisma.$CouponPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Order model
   */ 
  interface OrderFieldRefs {
    readonly id: FieldRef<"Order", 'String'>
    readonly orderNumber: FieldRef<"Order", 'String'>
    readonly userId: FieldRef<"Order", 'String'>
    readonly status: FieldRef<"Order", 'OrderStatus'>
    readonly totalAmount: FieldRef<"Order", 'Decimal'>
    readonly shippingCost: FieldRef<"Order", 'Decimal'>
    readonly tax: FieldRef<"Order", 'Decimal'>
    readonly discount: FieldRef<"Order", 'Decimal'>
    readonly finalAmount: FieldRef<"Order", 'Decimal'>
    readonly shippingAddress: FieldRef<"Order", 'Json'>
    readonly billingAddress: FieldRef<"Order", 'Json'>
    readonly paymentMethod: FieldRef<"Order", 'String'>
    readonly paymentStatus: FieldRef<"Order", 'PaymentStatus'>
    readonly trackingNumber: FieldRef<"Order", 'String'>
    readonly trackingStatus: FieldRef<"Order", 'String'>
    readonly customerId: FieldRef<"Order", 'String'>
    readonly created_at: FieldRef<"Order", 'DateTime'>
    readonly created_by: FieldRef<"Order", 'String'>
    readonly created_ip: FieldRef<"Order", 'String'>
    readonly updated_at: FieldRef<"Order", 'DateTime'>
    readonly updated_by: FieldRef<"Order", 'String'>
    readonly updated_ip: FieldRef<"Order", 'String'>
    readonly company_id: FieldRef<"Order", 'String'>
    readonly paymentGateway: FieldRef<"Order", 'String'>
    readonly sslcommerzTransactionId: FieldRef<"Order", 'String'>
    readonly paypalOrderId: FieldRef<"Order", 'String'>
    readonly paymentMetadata: FieldRef<"Order", 'Json'>
    readonly coupon_id: FieldRef<"Order", 'String'>
    readonly discount_amount: FieldRef<"Order", 'Decimal'>
  }
    

  // Custom InputTypes
  /**
   * Order findUnique
   */
  export type OrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findUniqueOrThrow
   */
  export type OrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order findFirst
   */
  export type OrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findFirstOrThrow
   */
  export type OrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Order to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Orders.
     */
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order findMany
   */
  export type OrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter, which Orders to fetch.
     */
    where?: OrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Orders to fetch.
     */
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Orders.
     */
    cursor?: OrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Orders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Orders.
     */
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Order create
   */
  export type OrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to create a Order.
     */
    data: XOR<OrderCreateInput, OrderUncheckedCreateInput>
  }

  /**
   * Order createMany
   */
  export type OrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Orders.
     */
    data: OrderCreateManyInput | OrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Order update
   */
  export type OrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The data needed to update a Order.
     */
    data: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
    /**
     * Choose, which Order to update.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order updateMany
   */
  export type OrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Orders.
     */
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyInput>
    /**
     * Filter which Orders to update
     */
    where?: OrderWhereInput
  }

  /**
   * Order upsert
   */
  export type OrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * The filter to search for the Order to update in case it exists.
     */
    where: OrderWhereUniqueInput
    /**
     * In case the Order found by the `where` argument doesn't exist, create a new Order with this data.
     */
    create: XOR<OrderCreateInput, OrderUncheckedCreateInput>
    /**
     * In case the Order was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderUpdateInput, OrderUncheckedUpdateInput>
  }

  /**
   * Order delete
   */
  export type OrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    /**
     * Filter which Order to delete.
     */
    where: OrderWhereUniqueInput
  }

  /**
   * Order deleteMany
   */
  export type OrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Orders to delete
     */
    where?: OrderWhereInput
  }

  /**
   * Order.orderItems
   */
  export type Order$orderItemsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    cursor?: OrderItemWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * Order.customer
   */
  export type Order$customerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
  }

  /**
   * Order.PaymentTransaction
   */
  export type Order$PaymentTransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    where?: PaymentTransactionWhereInput
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    cursor?: PaymentTransactionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * Order.coupon
   */
  export type Order$couponArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Coupon
     */
    select?: CouponSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CouponInclude<ExtArgs> | null
    where?: CouponWhereInput
  }

  /**
   * Order without action
   */
  export type OrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
  }


  /**
   * Model OrderItem
   */

  export type AggregateOrderItem = {
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  export type OrderItemAvgAggregateOutputType = {
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
  }

  export type OrderItemSumAggregateOutputType = {
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
  }

  export type OrderItemMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    productId: string | null
    variantId: string | null
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    productName: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type OrderItemMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    productId: string | null
    variantId: string | null
    quantity: number | null
    unitPrice: Decimal | null
    totalPrice: Decimal | null
    productName: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type OrderItemCountAggregateOutputType = {
    id: number
    orderId: number
    productId: number
    variantId: number
    quantity: number
    unitPrice: number
    totalPrice: number
    productName: number
    variantAttributes: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type OrderItemAvgAggregateInputType = {
    quantity?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type OrderItemSumAggregateInputType = {
    quantity?: true
    unitPrice?: true
    totalPrice?: true
  }

  export type OrderItemMinAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    variantId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    productName?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type OrderItemMaxAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    variantId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    productName?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type OrderItemCountAggregateInputType = {
    id?: true
    orderId?: true
    productId?: true
    variantId?: true
    quantity?: true
    unitPrice?: true
    totalPrice?: true
    productName?: true
    variantAttributes?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type OrderItemAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItem to aggregate.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned OrderItems
    **/
    _count?: true | OrderItemCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: OrderItemAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: OrderItemSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: OrderItemMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: OrderItemMaxAggregateInputType
  }

  export type GetOrderItemAggregateType<T extends OrderItemAggregateArgs> = {
        [P in keyof T & keyof AggregateOrderItem]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateOrderItem[P]>
      : GetScalarType<T[P], AggregateOrderItem[P]>
  }




  export type OrderItemGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: OrderItemWhereInput
    orderBy?: OrderItemOrderByWithAggregationInput | OrderItemOrderByWithAggregationInput[]
    by: OrderItemScalarFieldEnum[] | OrderItemScalarFieldEnum
    having?: OrderItemScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: OrderItemCountAggregateInputType | true
    _avg?: OrderItemAvgAggregateInputType
    _sum?: OrderItemSumAggregateInputType
    _min?: OrderItemMinAggregateInputType
    _max?: OrderItemMaxAggregateInputType
  }

  export type OrderItemGroupByOutputType = {
    id: string
    orderId: string
    productId: string
    variantId: string | null
    quantity: number
    unitPrice: Decimal
    totalPrice: Decimal
    productName: string
    variantAttributes: JsonValue | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: OrderItemCountAggregateOutputType | null
    _avg: OrderItemAvgAggregateOutputType | null
    _sum: OrderItemSumAggregateOutputType | null
    _min: OrderItemMinAggregateOutputType | null
    _max: OrderItemMaxAggregateOutputType | null
  }

  type GetOrderItemGroupByPayload<T extends OrderItemGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<OrderItemGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof OrderItemGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
            : GetScalarType<T[P], OrderItemGroupByOutputType[P]>
        }
      >
    >


  export type OrderItemSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    productId?: boolean
    variantId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    productName?: boolean
    variantAttributes?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["orderItem"]>


  export type OrderItemSelectScalar = {
    id?: boolean
    orderId?: boolean
    productId?: boolean
    variantId?: boolean
    quantity?: boolean
    unitPrice?: boolean
    totalPrice?: boolean
    productName?: boolean
    variantAttributes?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type OrderItemInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | OrderDefaultArgs<ExtArgs>
  }

  export type $OrderItemPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "OrderItem"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string
      productId: string
      variantId: string | null
      quantity: number
      unitPrice: Prisma.Decimal
      totalPrice: Prisma.Decimal
      productName: string
      variantAttributes: Prisma.JsonValue | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["orderItem"]>
    composites: {}
  }

  type OrderItemGetPayload<S extends boolean | null | undefined | OrderItemDefaultArgs> = $Result.GetResult<Prisma.$OrderItemPayload, S>

  type OrderItemCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<OrderItemFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: OrderItemCountAggregateInputType | true
    }

  export interface OrderItemDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['OrderItem'], meta: { name: 'OrderItem' } }
    /**
     * Find zero or one OrderItem that matches the filter.
     * @param {OrderItemFindUniqueArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends OrderItemFindUniqueArgs>(args: SelectSubset<T, OrderItemFindUniqueArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one OrderItem that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {OrderItemFindUniqueOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends OrderItemFindUniqueOrThrowArgs>(args: SelectSubset<T, OrderItemFindUniqueOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first OrderItem that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends OrderItemFindFirstArgs>(args?: SelectSubset<T, OrderItemFindFirstArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first OrderItem that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindFirstOrThrowArgs} args - Arguments to find a OrderItem
     * @example
     * // Get one OrderItem
     * const orderItem = await prisma.orderItem.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends OrderItemFindFirstOrThrowArgs>(args?: SelectSubset<T, OrderItemFindFirstOrThrowArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more OrderItems that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all OrderItems
     * const orderItems = await prisma.orderItem.findMany()
     * 
     * // Get first 10 OrderItems
     * const orderItems = await prisma.orderItem.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const orderItemWithIdOnly = await prisma.orderItem.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends OrderItemFindManyArgs>(args?: SelectSubset<T, OrderItemFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a OrderItem.
     * @param {OrderItemCreateArgs} args - Arguments to create a OrderItem.
     * @example
     * // Create one OrderItem
     * const OrderItem = await prisma.orderItem.create({
     *   data: {
     *     // ... data to create a OrderItem
     *   }
     * })
     * 
     */
    create<T extends OrderItemCreateArgs>(args: SelectSubset<T, OrderItemCreateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many OrderItems.
     * @param {OrderItemCreateManyArgs} args - Arguments to create many OrderItems.
     * @example
     * // Create many OrderItems
     * const orderItem = await prisma.orderItem.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends OrderItemCreateManyArgs>(args?: SelectSubset<T, OrderItemCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a OrderItem.
     * @param {OrderItemDeleteArgs} args - Arguments to delete one OrderItem.
     * @example
     * // Delete one OrderItem
     * const OrderItem = await prisma.orderItem.delete({
     *   where: {
     *     // ... filter to delete one OrderItem
     *   }
     * })
     * 
     */
    delete<T extends OrderItemDeleteArgs>(args: SelectSubset<T, OrderItemDeleteArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one OrderItem.
     * @param {OrderItemUpdateArgs} args - Arguments to update one OrderItem.
     * @example
     * // Update one OrderItem
     * const orderItem = await prisma.orderItem.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends OrderItemUpdateArgs>(args: SelectSubset<T, OrderItemUpdateArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more OrderItems.
     * @param {OrderItemDeleteManyArgs} args - Arguments to filter OrderItems to delete.
     * @example
     * // Delete a few OrderItems
     * const { count } = await prisma.orderItem.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends OrderItemDeleteManyArgs>(args?: SelectSubset<T, OrderItemDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many OrderItems
     * const orderItem = await prisma.orderItem.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends OrderItemUpdateManyArgs>(args: SelectSubset<T, OrderItemUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one OrderItem.
     * @param {OrderItemUpsertArgs} args - Arguments to update or create a OrderItem.
     * @example
     * // Update or create a OrderItem
     * const orderItem = await prisma.orderItem.upsert({
     *   create: {
     *     // ... data to create a OrderItem
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the OrderItem we want to update
     *   }
     * })
     */
    upsert<T extends OrderItemUpsertArgs>(args: SelectSubset<T, OrderItemUpsertArgs<ExtArgs>>): Prisma__OrderItemClient<$Result.GetResult<Prisma.$OrderItemPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of OrderItems.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemCountArgs} args - Arguments to filter OrderItems to count.
     * @example
     * // Count the number of OrderItems
     * const count = await prisma.orderItem.count({
     *   where: {
     *     // ... the filter for the OrderItems we want to count
     *   }
     * })
    **/
    count<T extends OrderItemCountArgs>(
      args?: Subset<T, OrderItemCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], OrderItemCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends OrderItemAggregateArgs>(args: Subset<T, OrderItemAggregateArgs>): Prisma.PrismaPromise<GetOrderItemAggregateType<T>>

    /**
     * Group by OrderItem.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {OrderItemGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends OrderItemGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: OrderItemGroupByArgs['orderBy'] }
        : { orderBy?: OrderItemGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, OrderItemGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetOrderItemGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the OrderItem model
   */
  readonly fields: OrderItemFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for OrderItem.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__OrderItemClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends OrderDefaultArgs<ExtArgs> = {}>(args?: Subset<T, OrderDefaultArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the OrderItem model
   */ 
  interface OrderItemFieldRefs {
    readonly id: FieldRef<"OrderItem", 'String'>
    readonly orderId: FieldRef<"OrderItem", 'String'>
    readonly productId: FieldRef<"OrderItem", 'String'>
    readonly variantId: FieldRef<"OrderItem", 'String'>
    readonly quantity: FieldRef<"OrderItem", 'Int'>
    readonly unitPrice: FieldRef<"OrderItem", 'Decimal'>
    readonly totalPrice: FieldRef<"OrderItem", 'Decimal'>
    readonly productName: FieldRef<"OrderItem", 'String'>
    readonly variantAttributes: FieldRef<"OrderItem", 'Json'>
    readonly created_at: FieldRef<"OrderItem", 'DateTime'>
    readonly created_by: FieldRef<"OrderItem", 'String'>
    readonly created_ip: FieldRef<"OrderItem", 'String'>
    readonly updated_at: FieldRef<"OrderItem", 'DateTime'>
    readonly updated_by: FieldRef<"OrderItem", 'String'>
    readonly updated_ip: FieldRef<"OrderItem", 'String'>
    readonly company_id: FieldRef<"OrderItem", 'String'>
  }
    

  // Custom InputTypes
  /**
   * OrderItem findUnique
   */
  export type OrderItemFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findUniqueOrThrow
   */
  export type OrderItemFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem findFirst
   */
  export type OrderItemFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findFirstOrThrow
   */
  export type OrderItemFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItem to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of OrderItems.
     */
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem findMany
   */
  export type OrderItemFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter, which OrderItems to fetch.
     */
    where?: OrderItemWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of OrderItems to fetch.
     */
    orderBy?: OrderItemOrderByWithRelationInput | OrderItemOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing OrderItems.
     */
    cursor?: OrderItemWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` OrderItems from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` OrderItems.
     */
    skip?: number
    distinct?: OrderItemScalarFieldEnum | OrderItemScalarFieldEnum[]
  }

  /**
   * OrderItem create
   */
  export type OrderItemCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to create a OrderItem.
     */
    data: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
  }

  /**
   * OrderItem createMany
   */
  export type OrderItemCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many OrderItems.
     */
    data: OrderItemCreateManyInput | OrderItemCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * OrderItem update
   */
  export type OrderItemUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The data needed to update a OrderItem.
     */
    data: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
    /**
     * Choose, which OrderItem to update.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem updateMany
   */
  export type OrderItemUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update OrderItems.
     */
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyInput>
    /**
     * Filter which OrderItems to update
     */
    where?: OrderItemWhereInput
  }

  /**
   * OrderItem upsert
   */
  export type OrderItemUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * The filter to search for the OrderItem to update in case it exists.
     */
    where: OrderItemWhereUniqueInput
    /**
     * In case the OrderItem found by the `where` argument doesn't exist, create a new OrderItem with this data.
     */
    create: XOR<OrderItemCreateInput, OrderItemUncheckedCreateInput>
    /**
     * In case the OrderItem was found with the provided `where` argument, update it with this data.
     */
    update: XOR<OrderItemUpdateInput, OrderItemUncheckedUpdateInput>
  }

  /**
   * OrderItem delete
   */
  export type OrderItemDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
    /**
     * Filter which OrderItem to delete.
     */
    where: OrderItemWhereUniqueInput
  }

  /**
   * OrderItem deleteMany
   */
  export type OrderItemDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which OrderItems to delete
     */
    where?: OrderItemWhereInput
  }

  /**
   * OrderItem without action
   */
  export type OrderItemDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the OrderItem
     */
    select?: OrderItemSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderItemInclude<ExtArgs> | null
  }


  /**
   * Model StockMovement
   */

  export type AggregateStockMovement = {
    _count: StockMovementCountAggregateOutputType | null
    _avg: StockMovementAvgAggregateOutputType | null
    _sum: StockMovementSumAggregateOutputType | null
    _min: StockMovementMinAggregateOutputType | null
    _max: StockMovementMaxAggregateOutputType | null
  }

  export type StockMovementAvgAggregateOutputType = {
    quantity: Decimal | null
  }

  export type StockMovementSumAggregateOutputType = {
    quantity: Decimal | null
  }

  export type StockMovementMinAggregateOutputType = {
    id: string | null
    productId: string | null
    variantId: string | null
    quantity: Decimal | null
    type: $Enums.MovementType | null
    reference: string | null
    notes: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type StockMovementMaxAggregateOutputType = {
    id: string | null
    productId: string | null
    variantId: string | null
    quantity: Decimal | null
    type: $Enums.MovementType | null
    reference: string | null
    notes: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type StockMovementCountAggregateOutputType = {
    id: number
    productId: number
    variantId: number
    quantity: number
    type: number
    reference: number
    notes: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type StockMovementAvgAggregateInputType = {
    quantity?: true
  }

  export type StockMovementSumAggregateInputType = {
    quantity?: true
  }

  export type StockMovementMinAggregateInputType = {
    id?: true
    productId?: true
    variantId?: true
    quantity?: true
    type?: true
    reference?: true
    notes?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type StockMovementMaxAggregateInputType = {
    id?: true
    productId?: true
    variantId?: true
    quantity?: true
    type?: true
    reference?: true
    notes?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type StockMovementCountAggregateInputType = {
    id?: true
    productId?: true
    variantId?: true
    quantity?: true
    type?: true
    reference?: true
    notes?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type StockMovementAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockMovement to aggregate.
     */
    where?: StockMovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockMovements to fetch.
     */
    orderBy?: StockMovementOrderByWithRelationInput | StockMovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: StockMovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockMovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockMovements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned StockMovements
    **/
    _count?: true | StockMovementCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: StockMovementAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: StockMovementSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: StockMovementMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: StockMovementMaxAggregateInputType
  }

  export type GetStockMovementAggregateType<T extends StockMovementAggregateArgs> = {
        [P in keyof T & keyof AggregateStockMovement]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateStockMovement[P]>
      : GetScalarType<T[P], AggregateStockMovement[P]>
  }




  export type StockMovementGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: StockMovementWhereInput
    orderBy?: StockMovementOrderByWithAggregationInput | StockMovementOrderByWithAggregationInput[]
    by: StockMovementScalarFieldEnum[] | StockMovementScalarFieldEnum
    having?: StockMovementScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: StockMovementCountAggregateInputType | true
    _avg?: StockMovementAvgAggregateInputType
    _sum?: StockMovementSumAggregateInputType
    _min?: StockMovementMinAggregateInputType
    _max?: StockMovementMaxAggregateInputType
  }

  export type StockMovementGroupByOutputType = {
    id: string
    productId: string
    variantId: string | null
    quantity: Decimal
    type: $Enums.MovementType
    reference: string
    notes: string | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: StockMovementCountAggregateOutputType | null
    _avg: StockMovementAvgAggregateOutputType | null
    _sum: StockMovementSumAggregateOutputType | null
    _min: StockMovementMinAggregateOutputType | null
    _max: StockMovementMaxAggregateOutputType | null
  }

  type GetStockMovementGroupByPayload<T extends StockMovementGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<StockMovementGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof StockMovementGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], StockMovementGroupByOutputType[P]>
            : GetScalarType<T[P], StockMovementGroupByOutputType[P]>
        }
      >
    >


  export type StockMovementSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    productId?: boolean
    variantId?: boolean
    quantity?: boolean
    type?: boolean
    reference?: boolean
    notes?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }, ExtArgs["result"]["stockMovement"]>


  export type StockMovementSelectScalar = {
    id?: boolean
    productId?: boolean
    variantId?: boolean
    quantity?: boolean
    type?: boolean
    reference?: boolean
    notes?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }


  export type $StockMovementPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "StockMovement"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      productId: string
      variantId: string | null
      quantity: Prisma.Decimal
      type: $Enums.MovementType
      reference: string
      notes: string | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["stockMovement"]>
    composites: {}
  }

  type StockMovementGetPayload<S extends boolean | null | undefined | StockMovementDefaultArgs> = $Result.GetResult<Prisma.$StockMovementPayload, S>

  type StockMovementCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<StockMovementFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: StockMovementCountAggregateInputType | true
    }

  export interface StockMovementDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['StockMovement'], meta: { name: 'StockMovement' } }
    /**
     * Find zero or one StockMovement that matches the filter.
     * @param {StockMovementFindUniqueArgs} args - Arguments to find a StockMovement
     * @example
     * // Get one StockMovement
     * const stockMovement = await prisma.stockMovement.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends StockMovementFindUniqueArgs>(args: SelectSubset<T, StockMovementFindUniqueArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one StockMovement that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {StockMovementFindUniqueOrThrowArgs} args - Arguments to find a StockMovement
     * @example
     * // Get one StockMovement
     * const stockMovement = await prisma.stockMovement.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends StockMovementFindUniqueOrThrowArgs>(args: SelectSubset<T, StockMovementFindUniqueOrThrowArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first StockMovement that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementFindFirstArgs} args - Arguments to find a StockMovement
     * @example
     * // Get one StockMovement
     * const stockMovement = await prisma.stockMovement.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends StockMovementFindFirstArgs>(args?: SelectSubset<T, StockMovementFindFirstArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first StockMovement that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementFindFirstOrThrowArgs} args - Arguments to find a StockMovement
     * @example
     * // Get one StockMovement
     * const stockMovement = await prisma.stockMovement.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends StockMovementFindFirstOrThrowArgs>(args?: SelectSubset<T, StockMovementFindFirstOrThrowArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more StockMovements that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all StockMovements
     * const stockMovements = await prisma.stockMovement.findMany()
     * 
     * // Get first 10 StockMovements
     * const stockMovements = await prisma.stockMovement.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const stockMovementWithIdOnly = await prisma.stockMovement.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends StockMovementFindManyArgs>(args?: SelectSubset<T, StockMovementFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a StockMovement.
     * @param {StockMovementCreateArgs} args - Arguments to create a StockMovement.
     * @example
     * // Create one StockMovement
     * const StockMovement = await prisma.stockMovement.create({
     *   data: {
     *     // ... data to create a StockMovement
     *   }
     * })
     * 
     */
    create<T extends StockMovementCreateArgs>(args: SelectSubset<T, StockMovementCreateArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many StockMovements.
     * @param {StockMovementCreateManyArgs} args - Arguments to create many StockMovements.
     * @example
     * // Create many StockMovements
     * const stockMovement = await prisma.stockMovement.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends StockMovementCreateManyArgs>(args?: SelectSubset<T, StockMovementCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a StockMovement.
     * @param {StockMovementDeleteArgs} args - Arguments to delete one StockMovement.
     * @example
     * // Delete one StockMovement
     * const StockMovement = await prisma.stockMovement.delete({
     *   where: {
     *     // ... filter to delete one StockMovement
     *   }
     * })
     * 
     */
    delete<T extends StockMovementDeleteArgs>(args: SelectSubset<T, StockMovementDeleteArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one StockMovement.
     * @param {StockMovementUpdateArgs} args - Arguments to update one StockMovement.
     * @example
     * // Update one StockMovement
     * const stockMovement = await prisma.stockMovement.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends StockMovementUpdateArgs>(args: SelectSubset<T, StockMovementUpdateArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more StockMovements.
     * @param {StockMovementDeleteManyArgs} args - Arguments to filter StockMovements to delete.
     * @example
     * // Delete a few StockMovements
     * const { count } = await prisma.stockMovement.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends StockMovementDeleteManyArgs>(args?: SelectSubset<T, StockMovementDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more StockMovements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many StockMovements
     * const stockMovement = await prisma.stockMovement.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends StockMovementUpdateManyArgs>(args: SelectSubset<T, StockMovementUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one StockMovement.
     * @param {StockMovementUpsertArgs} args - Arguments to update or create a StockMovement.
     * @example
     * // Update or create a StockMovement
     * const stockMovement = await prisma.stockMovement.upsert({
     *   create: {
     *     // ... data to create a StockMovement
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the StockMovement we want to update
     *   }
     * })
     */
    upsert<T extends StockMovementUpsertArgs>(args: SelectSubset<T, StockMovementUpsertArgs<ExtArgs>>): Prisma__StockMovementClient<$Result.GetResult<Prisma.$StockMovementPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of StockMovements.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementCountArgs} args - Arguments to filter StockMovements to count.
     * @example
     * // Count the number of StockMovements
     * const count = await prisma.stockMovement.count({
     *   where: {
     *     // ... the filter for the StockMovements we want to count
     *   }
     * })
    **/
    count<T extends StockMovementCountArgs>(
      args?: Subset<T, StockMovementCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], StockMovementCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a StockMovement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends StockMovementAggregateArgs>(args: Subset<T, StockMovementAggregateArgs>): Prisma.PrismaPromise<GetStockMovementAggregateType<T>>

    /**
     * Group by StockMovement.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {StockMovementGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends StockMovementGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: StockMovementGroupByArgs['orderBy'] }
        : { orderBy?: StockMovementGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, StockMovementGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetStockMovementGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the StockMovement model
   */
  readonly fields: StockMovementFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for StockMovement.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__StockMovementClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the StockMovement model
   */ 
  interface StockMovementFieldRefs {
    readonly id: FieldRef<"StockMovement", 'String'>
    readonly productId: FieldRef<"StockMovement", 'String'>
    readonly variantId: FieldRef<"StockMovement", 'String'>
    readonly quantity: FieldRef<"StockMovement", 'Decimal'>
    readonly type: FieldRef<"StockMovement", 'MovementType'>
    readonly reference: FieldRef<"StockMovement", 'String'>
    readonly notes: FieldRef<"StockMovement", 'String'>
    readonly created_at: FieldRef<"StockMovement", 'DateTime'>
    readonly created_by: FieldRef<"StockMovement", 'String'>
    readonly created_ip: FieldRef<"StockMovement", 'String'>
    readonly updated_at: FieldRef<"StockMovement", 'DateTime'>
    readonly updated_by: FieldRef<"StockMovement", 'String'>
    readonly updated_ip: FieldRef<"StockMovement", 'String'>
    readonly company_id: FieldRef<"StockMovement", 'String'>
  }
    

  // Custom InputTypes
  /**
   * StockMovement findUnique
   */
  export type StockMovementFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Filter, which StockMovement to fetch.
     */
    where: StockMovementWhereUniqueInput
  }

  /**
   * StockMovement findUniqueOrThrow
   */
  export type StockMovementFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Filter, which StockMovement to fetch.
     */
    where: StockMovementWhereUniqueInput
  }

  /**
   * StockMovement findFirst
   */
  export type StockMovementFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Filter, which StockMovement to fetch.
     */
    where?: StockMovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockMovements to fetch.
     */
    orderBy?: StockMovementOrderByWithRelationInput | StockMovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockMovements.
     */
    cursor?: StockMovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockMovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockMovements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockMovements.
     */
    distinct?: StockMovementScalarFieldEnum | StockMovementScalarFieldEnum[]
  }

  /**
   * StockMovement findFirstOrThrow
   */
  export type StockMovementFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Filter, which StockMovement to fetch.
     */
    where?: StockMovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockMovements to fetch.
     */
    orderBy?: StockMovementOrderByWithRelationInput | StockMovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for StockMovements.
     */
    cursor?: StockMovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockMovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockMovements.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of StockMovements.
     */
    distinct?: StockMovementScalarFieldEnum | StockMovementScalarFieldEnum[]
  }

  /**
   * StockMovement findMany
   */
  export type StockMovementFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Filter, which StockMovements to fetch.
     */
    where?: StockMovementWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of StockMovements to fetch.
     */
    orderBy?: StockMovementOrderByWithRelationInput | StockMovementOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing StockMovements.
     */
    cursor?: StockMovementWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` StockMovements from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` StockMovements.
     */
    skip?: number
    distinct?: StockMovementScalarFieldEnum | StockMovementScalarFieldEnum[]
  }

  /**
   * StockMovement create
   */
  export type StockMovementCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * The data needed to create a StockMovement.
     */
    data: XOR<StockMovementCreateInput, StockMovementUncheckedCreateInput>
  }

  /**
   * StockMovement createMany
   */
  export type StockMovementCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many StockMovements.
     */
    data: StockMovementCreateManyInput | StockMovementCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * StockMovement update
   */
  export type StockMovementUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * The data needed to update a StockMovement.
     */
    data: XOR<StockMovementUpdateInput, StockMovementUncheckedUpdateInput>
    /**
     * Choose, which StockMovement to update.
     */
    where: StockMovementWhereUniqueInput
  }

  /**
   * StockMovement updateMany
   */
  export type StockMovementUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update StockMovements.
     */
    data: XOR<StockMovementUpdateManyMutationInput, StockMovementUncheckedUpdateManyInput>
    /**
     * Filter which StockMovements to update
     */
    where?: StockMovementWhereInput
  }

  /**
   * StockMovement upsert
   */
  export type StockMovementUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * The filter to search for the StockMovement to update in case it exists.
     */
    where: StockMovementWhereUniqueInput
    /**
     * In case the StockMovement found by the `where` argument doesn't exist, create a new StockMovement with this data.
     */
    create: XOR<StockMovementCreateInput, StockMovementUncheckedCreateInput>
    /**
     * In case the StockMovement was found with the provided `where` argument, update it with this data.
     */
    update: XOR<StockMovementUpdateInput, StockMovementUncheckedUpdateInput>
  }

  /**
   * StockMovement delete
   */
  export type StockMovementDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
    /**
     * Filter which StockMovement to delete.
     */
    where: StockMovementWhereUniqueInput
  }

  /**
   * StockMovement deleteMany
   */
  export type StockMovementDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which StockMovements to delete
     */
    where?: StockMovementWhereInput
  }

  /**
   * StockMovement without action
   */
  export type StockMovementDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the StockMovement
     */
    select?: StockMovementSelect<ExtArgs> | null
  }


  /**
   * Model UserSettings
   */

  export type AggregateUserSettings = {
    _count: UserSettingsCountAggregateOutputType | null
    _min: UserSettingsMinAggregateOutputType | null
    _max: UserSettingsMaxAggregateOutputType | null
  }

  export type UserSettingsMinAggregateOutputType = {
    id: string | null
    user_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type UserSettingsMaxAggregateOutputType = {
    id: string | null
    user_id: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type UserSettingsCountAggregateOutputType = {
    id: number
    user_id: number
    settings: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type UserSettingsMinAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type UserSettingsMaxAggregateInputType = {
    id?: true
    user_id?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type UserSettingsCountAggregateInputType = {
    id?: true
    user_id?: true
    settings?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type UserSettingsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSettings to aggregate.
     */
    where?: UserSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSettings to fetch.
     */
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: UserSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned UserSettings
    **/
    _count?: true | UserSettingsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: UserSettingsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: UserSettingsMaxAggregateInputType
  }

  export type GetUserSettingsAggregateType<T extends UserSettingsAggregateArgs> = {
        [P in keyof T & keyof AggregateUserSettings]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUserSettings[P]>
      : GetScalarType<T[P], AggregateUserSettings[P]>
  }




  export type UserSettingsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: UserSettingsWhereInput
    orderBy?: UserSettingsOrderByWithAggregationInput | UserSettingsOrderByWithAggregationInput[]
    by: UserSettingsScalarFieldEnum[] | UserSettingsScalarFieldEnum
    having?: UserSettingsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: UserSettingsCountAggregateInputType | true
    _min?: UserSettingsMinAggregateInputType
    _max?: UserSettingsMaxAggregateInputType
  }

  export type UserSettingsGroupByOutputType = {
    id: string
    user_id: string
    settings: JsonValue
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: UserSettingsCountAggregateOutputType | null
    _min: UserSettingsMinAggregateOutputType | null
    _max: UserSettingsMaxAggregateOutputType | null
  }

  type GetUserSettingsGroupByPayload<T extends UserSettingsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<UserSettingsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof UserSettingsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], UserSettingsGroupByOutputType[P]>
            : GetScalarType<T[P], UserSettingsGroupByOutputType[P]>
        }
      >
    >


  export type UserSettingsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    user_id?: boolean
    settings?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    user?: boolean | UserDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["userSettings"]>


  export type UserSettingsSelectScalar = {
    id?: boolean
    user_id?: boolean
    settings?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type UserSettingsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | UserDefaultArgs<ExtArgs>
  }

  export type $UserSettingsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "UserSettings"
    objects: {
      user: Prisma.$UserPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      user_id: string
      settings: Prisma.JsonValue
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["userSettings"]>
    composites: {}
  }

  type UserSettingsGetPayload<S extends boolean | null | undefined | UserSettingsDefaultArgs> = $Result.GetResult<Prisma.$UserSettingsPayload, S>

  type UserSettingsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<UserSettingsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: UserSettingsCountAggregateInputType | true
    }

  export interface UserSettingsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['UserSettings'], meta: { name: 'UserSettings' } }
    /**
     * Find zero or one UserSettings that matches the filter.
     * @param {UserSettingsFindUniqueArgs} args - Arguments to find a UserSettings
     * @example
     * // Get one UserSettings
     * const userSettings = await prisma.userSettings.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends UserSettingsFindUniqueArgs>(args: SelectSubset<T, UserSettingsFindUniqueArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one UserSettings that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {UserSettingsFindUniqueOrThrowArgs} args - Arguments to find a UserSettings
     * @example
     * // Get one UserSettings
     * const userSettings = await prisma.userSettings.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends UserSettingsFindUniqueOrThrowArgs>(args: SelectSubset<T, UserSettingsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first UserSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsFindFirstArgs} args - Arguments to find a UserSettings
     * @example
     * // Get one UserSettings
     * const userSettings = await prisma.userSettings.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends UserSettingsFindFirstArgs>(args?: SelectSubset<T, UserSettingsFindFirstArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first UserSettings that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsFindFirstOrThrowArgs} args - Arguments to find a UserSettings
     * @example
     * // Get one UserSettings
     * const userSettings = await prisma.userSettings.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends UserSettingsFindFirstOrThrowArgs>(args?: SelectSubset<T, UserSettingsFindFirstOrThrowArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more UserSettings that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all UserSettings
     * const userSettings = await prisma.userSettings.findMany()
     * 
     * // Get first 10 UserSettings
     * const userSettings = await prisma.userSettings.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const userSettingsWithIdOnly = await prisma.userSettings.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends UserSettingsFindManyArgs>(args?: SelectSubset<T, UserSettingsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a UserSettings.
     * @param {UserSettingsCreateArgs} args - Arguments to create a UserSettings.
     * @example
     * // Create one UserSettings
     * const UserSettings = await prisma.userSettings.create({
     *   data: {
     *     // ... data to create a UserSettings
     *   }
     * })
     * 
     */
    create<T extends UserSettingsCreateArgs>(args: SelectSubset<T, UserSettingsCreateArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many UserSettings.
     * @param {UserSettingsCreateManyArgs} args - Arguments to create many UserSettings.
     * @example
     * // Create many UserSettings
     * const userSettings = await prisma.userSettings.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends UserSettingsCreateManyArgs>(args?: SelectSubset<T, UserSettingsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a UserSettings.
     * @param {UserSettingsDeleteArgs} args - Arguments to delete one UserSettings.
     * @example
     * // Delete one UserSettings
     * const UserSettings = await prisma.userSettings.delete({
     *   where: {
     *     // ... filter to delete one UserSettings
     *   }
     * })
     * 
     */
    delete<T extends UserSettingsDeleteArgs>(args: SelectSubset<T, UserSettingsDeleteArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one UserSettings.
     * @param {UserSettingsUpdateArgs} args - Arguments to update one UserSettings.
     * @example
     * // Update one UserSettings
     * const userSettings = await prisma.userSettings.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends UserSettingsUpdateArgs>(args: SelectSubset<T, UserSettingsUpdateArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more UserSettings.
     * @param {UserSettingsDeleteManyArgs} args - Arguments to filter UserSettings to delete.
     * @example
     * // Delete a few UserSettings
     * const { count } = await prisma.userSettings.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends UserSettingsDeleteManyArgs>(args?: SelectSubset<T, UserSettingsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more UserSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many UserSettings
     * const userSettings = await prisma.userSettings.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends UserSettingsUpdateManyArgs>(args: SelectSubset<T, UserSettingsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one UserSettings.
     * @param {UserSettingsUpsertArgs} args - Arguments to update or create a UserSettings.
     * @example
     * // Update or create a UserSettings
     * const userSettings = await prisma.userSettings.upsert({
     *   create: {
     *     // ... data to create a UserSettings
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the UserSettings we want to update
     *   }
     * })
     */
    upsert<T extends UserSettingsUpsertArgs>(args: SelectSubset<T, UserSettingsUpsertArgs<ExtArgs>>): Prisma__UserSettingsClient<$Result.GetResult<Prisma.$UserSettingsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of UserSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsCountArgs} args - Arguments to filter UserSettings to count.
     * @example
     * // Count the number of UserSettings
     * const count = await prisma.userSettings.count({
     *   where: {
     *     // ... the filter for the UserSettings we want to count
     *   }
     * })
    **/
    count<T extends UserSettingsCountArgs>(
      args?: Subset<T, UserSettingsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], UserSettingsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a UserSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends UserSettingsAggregateArgs>(args: Subset<T, UserSettingsAggregateArgs>): Prisma.PrismaPromise<GetUserSettingsAggregateType<T>>

    /**
     * Group by UserSettings.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {UserSettingsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends UserSettingsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: UserSettingsGroupByArgs['orderBy'] }
        : { orderBy?: UserSettingsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, UserSettingsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUserSettingsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the UserSettings model
   */
  readonly fields: UserSettingsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for UserSettings.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__UserSettingsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends UserDefaultArgs<ExtArgs> = {}>(args?: Subset<T, UserDefaultArgs<ExtArgs>>): Prisma__UserClient<$Result.GetResult<Prisma.$UserPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the UserSettings model
   */ 
  interface UserSettingsFieldRefs {
    readonly id: FieldRef<"UserSettings", 'String'>
    readonly user_id: FieldRef<"UserSettings", 'String'>
    readonly settings: FieldRef<"UserSettings", 'Json'>
    readonly created_at: FieldRef<"UserSettings", 'DateTime'>
    readonly created_by: FieldRef<"UserSettings", 'String'>
    readonly created_ip: FieldRef<"UserSettings", 'String'>
    readonly updated_at: FieldRef<"UserSettings", 'DateTime'>
    readonly updated_by: FieldRef<"UserSettings", 'String'>
    readonly updated_ip: FieldRef<"UserSettings", 'String'>
    readonly company_id: FieldRef<"UserSettings", 'String'>
  }
    

  // Custom InputTypes
  /**
   * UserSettings findUnique
   */
  export type UserSettingsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where: UserSettingsWhereUniqueInput
  }

  /**
   * UserSettings findUniqueOrThrow
   */
  export type UserSettingsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where: UserSettingsWhereUniqueInput
  }

  /**
   * UserSettings findFirst
   */
  export type UserSettingsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where?: UserSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSettings to fetch.
     */
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSettings.
     */
    cursor?: UserSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSettings.
     */
    distinct?: UserSettingsScalarFieldEnum | UserSettingsScalarFieldEnum[]
  }

  /**
   * UserSettings findFirstOrThrow
   */
  export type UserSettingsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where?: UserSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSettings to fetch.
     */
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for UserSettings.
     */
    cursor?: UserSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSettings.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of UserSettings.
     */
    distinct?: UserSettingsScalarFieldEnum | UserSettingsScalarFieldEnum[]
  }

  /**
   * UserSettings findMany
   */
  export type UserSettingsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter, which UserSettings to fetch.
     */
    where?: UserSettingsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of UserSettings to fetch.
     */
    orderBy?: UserSettingsOrderByWithRelationInput | UserSettingsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing UserSettings.
     */
    cursor?: UserSettingsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` UserSettings from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` UserSettings.
     */
    skip?: number
    distinct?: UserSettingsScalarFieldEnum | UserSettingsScalarFieldEnum[]
  }

  /**
   * UserSettings create
   */
  export type UserSettingsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * The data needed to create a UserSettings.
     */
    data: XOR<UserSettingsCreateInput, UserSettingsUncheckedCreateInput>
  }

  /**
   * UserSettings createMany
   */
  export type UserSettingsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many UserSettings.
     */
    data: UserSettingsCreateManyInput | UserSettingsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * UserSettings update
   */
  export type UserSettingsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * The data needed to update a UserSettings.
     */
    data: XOR<UserSettingsUpdateInput, UserSettingsUncheckedUpdateInput>
    /**
     * Choose, which UserSettings to update.
     */
    where: UserSettingsWhereUniqueInput
  }

  /**
   * UserSettings updateMany
   */
  export type UserSettingsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update UserSettings.
     */
    data: XOR<UserSettingsUpdateManyMutationInput, UserSettingsUncheckedUpdateManyInput>
    /**
     * Filter which UserSettings to update
     */
    where?: UserSettingsWhereInput
  }

  /**
   * UserSettings upsert
   */
  export type UserSettingsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * The filter to search for the UserSettings to update in case it exists.
     */
    where: UserSettingsWhereUniqueInput
    /**
     * In case the UserSettings found by the `where` argument doesn't exist, create a new UserSettings with this data.
     */
    create: XOR<UserSettingsCreateInput, UserSettingsUncheckedCreateInput>
    /**
     * In case the UserSettings was found with the provided `where` argument, update it with this data.
     */
    update: XOR<UserSettingsUpdateInput, UserSettingsUncheckedUpdateInput>
  }

  /**
   * UserSettings delete
   */
  export type UserSettingsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
    /**
     * Filter which UserSettings to delete.
     */
    where: UserSettingsWhereUniqueInput
  }

  /**
   * UserSettings deleteMany
   */
  export type UserSettingsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which UserSettings to delete
     */
    where?: UserSettingsWhereInput
  }

  /**
   * UserSettings without action
   */
  export type UserSettingsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the UserSettings
     */
    select?: UserSettingsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: UserSettingsInclude<ExtArgs> | null
  }


  /**
   * Model CustomerAddress
   */

  export type AggregateCustomerAddress = {
    _count: CustomerAddressCountAggregateOutputType | null
    _min: CustomerAddressMinAggregateOutputType | null
    _max: CustomerAddressMaxAggregateOutputType | null
  }

  export type CustomerAddressMinAggregateOutputType = {
    id: string | null
    customerId: string | null
    label: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    email: string | null
    address: string | null
    apartment: string | null
    city: string | null
    state: string | null
    country: string | null
    postalCode: string | null
    isDefault: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
  }

  export type CustomerAddressMaxAggregateOutputType = {
    id: string | null
    customerId: string | null
    label: string | null
    firstName: string | null
    lastName: string | null
    phone: string | null
    email: string | null
    address: string | null
    apartment: string | null
    city: string | null
    state: string | null
    country: string | null
    postalCode: string | null
    isDefault: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
  }

  export type CustomerAddressCountAggregateOutputType = {
    id: number
    customerId: number
    label: number
    firstName: number
    lastName: number
    phone: number
    email: number
    address: number
    apartment: number
    city: number
    state: number
    country: number
    postalCode: number
    isDefault: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    _all: number
  }


  export type CustomerAddressMinAggregateInputType = {
    id?: true
    customerId?: true
    label?: true
    firstName?: true
    lastName?: true
    phone?: true
    email?: true
    address?: true
    apartment?: true
    city?: true
    state?: true
    country?: true
    postalCode?: true
    isDefault?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
  }

  export type CustomerAddressMaxAggregateInputType = {
    id?: true
    customerId?: true
    label?: true
    firstName?: true
    lastName?: true
    phone?: true
    email?: true
    address?: true
    apartment?: true
    city?: true
    state?: true
    country?: true
    postalCode?: true
    isDefault?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
  }

  export type CustomerAddressCountAggregateInputType = {
    id?: true
    customerId?: true
    label?: true
    firstName?: true
    lastName?: true
    phone?: true
    email?: true
    address?: true
    apartment?: true
    city?: true
    state?: true
    country?: true
    postalCode?: true
    isDefault?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    _all?: true
  }

  export type CustomerAddressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomerAddress to aggregate.
     */
    where?: CustomerAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerAddresses to fetch.
     */
    orderBy?: CustomerAddressOrderByWithRelationInput | CustomerAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CustomerAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerAddresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned CustomerAddresses
    **/
    _count?: true | CustomerAddressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CustomerAddressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CustomerAddressMaxAggregateInputType
  }

  export type GetCustomerAddressAggregateType<T extends CustomerAddressAggregateArgs> = {
        [P in keyof T & keyof AggregateCustomerAddress]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCustomerAddress[P]>
      : GetScalarType<T[P], AggregateCustomerAddress[P]>
  }




  export type CustomerAddressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CustomerAddressWhereInput
    orderBy?: CustomerAddressOrderByWithAggregationInput | CustomerAddressOrderByWithAggregationInput[]
    by: CustomerAddressScalarFieldEnum[] | CustomerAddressScalarFieldEnum
    having?: CustomerAddressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CustomerAddressCountAggregateInputType | true
    _min?: CustomerAddressMinAggregateInputType
    _max?: CustomerAddressMaxAggregateInputType
  }

  export type CustomerAddressGroupByOutputType = {
    id: string
    customerId: string | null
    label: string
    firstName: string
    lastName: string
    phone: string
    email: string | null
    address: string
    apartment: string | null
    city: string
    state: string
    country: string
    postalCode: string
    isDefault: boolean
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    _count: CustomerAddressCountAggregateOutputType | null
    _min: CustomerAddressMinAggregateOutputType | null
    _max: CustomerAddressMaxAggregateOutputType | null
  }

  type GetCustomerAddressGroupByPayload<T extends CustomerAddressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CustomerAddressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CustomerAddressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CustomerAddressGroupByOutputType[P]>
            : GetScalarType<T[P], CustomerAddressGroupByOutputType[P]>
        }
      >
    >


  export type CustomerAddressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    customerId?: boolean
    label?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    apartment?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    postalCode?: boolean
    isDefault?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    customer?: boolean | CustomerAddress$customerArgs<ExtArgs>
  }, ExtArgs["result"]["customerAddress"]>


  export type CustomerAddressSelectScalar = {
    id?: boolean
    customerId?: boolean
    label?: boolean
    firstName?: boolean
    lastName?: boolean
    phone?: boolean
    email?: boolean
    address?: boolean
    apartment?: boolean
    city?: boolean
    state?: boolean
    country?: boolean
    postalCode?: boolean
    isDefault?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
  }

  export type CustomerAddressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | CustomerAddress$customerArgs<ExtArgs>
  }

  export type $CustomerAddressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "CustomerAddress"
    objects: {
      customer: Prisma.$CustomerPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      customerId: string | null
      label: string
      firstName: string
      lastName: string
      phone: string
      email: string | null
      address: string
      apartment: string | null
      city: string
      state: string
      country: string
      postalCode: string
      isDefault: boolean
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
    }, ExtArgs["result"]["customerAddress"]>
    composites: {}
  }

  type CustomerAddressGetPayload<S extends boolean | null | undefined | CustomerAddressDefaultArgs> = $Result.GetResult<Prisma.$CustomerAddressPayload, S>

  type CustomerAddressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CustomerAddressFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CustomerAddressCountAggregateInputType | true
    }

  export interface CustomerAddressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['CustomerAddress'], meta: { name: 'CustomerAddress' } }
    /**
     * Find zero or one CustomerAddress that matches the filter.
     * @param {CustomerAddressFindUniqueArgs} args - Arguments to find a CustomerAddress
     * @example
     * // Get one CustomerAddress
     * const customerAddress = await prisma.customerAddress.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CustomerAddressFindUniqueArgs>(args: SelectSubset<T, CustomerAddressFindUniqueArgs<ExtArgs>>): Prisma__CustomerAddressClient<$Result.GetResult<Prisma.$CustomerAddressPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one CustomerAddress that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CustomerAddressFindUniqueOrThrowArgs} args - Arguments to find a CustomerAddress
     * @example
     * // Get one CustomerAddress
     * const customerAddress = await prisma.customerAddress.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CustomerAddressFindUniqueOrThrowArgs>(args: SelectSubset<T, CustomerAddressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CustomerAddressClient<$Result.GetResult<Prisma.$CustomerAddressPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first CustomerAddress that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAddressFindFirstArgs} args - Arguments to find a CustomerAddress
     * @example
     * // Get one CustomerAddress
     * const customerAddress = await prisma.customerAddress.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CustomerAddressFindFirstArgs>(args?: SelectSubset<T, CustomerAddressFindFirstArgs<ExtArgs>>): Prisma__CustomerAddressClient<$Result.GetResult<Prisma.$CustomerAddressPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first CustomerAddress that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAddressFindFirstOrThrowArgs} args - Arguments to find a CustomerAddress
     * @example
     * // Get one CustomerAddress
     * const customerAddress = await prisma.customerAddress.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CustomerAddressFindFirstOrThrowArgs>(args?: SelectSubset<T, CustomerAddressFindFirstOrThrowArgs<ExtArgs>>): Prisma__CustomerAddressClient<$Result.GetResult<Prisma.$CustomerAddressPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more CustomerAddresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAddressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all CustomerAddresses
     * const customerAddresses = await prisma.customerAddress.findMany()
     * 
     * // Get first 10 CustomerAddresses
     * const customerAddresses = await prisma.customerAddress.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const customerAddressWithIdOnly = await prisma.customerAddress.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CustomerAddressFindManyArgs>(args?: SelectSubset<T, CustomerAddressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CustomerAddressPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a CustomerAddress.
     * @param {CustomerAddressCreateArgs} args - Arguments to create a CustomerAddress.
     * @example
     * // Create one CustomerAddress
     * const CustomerAddress = await prisma.customerAddress.create({
     *   data: {
     *     // ... data to create a CustomerAddress
     *   }
     * })
     * 
     */
    create<T extends CustomerAddressCreateArgs>(args: SelectSubset<T, CustomerAddressCreateArgs<ExtArgs>>): Prisma__CustomerAddressClient<$Result.GetResult<Prisma.$CustomerAddressPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many CustomerAddresses.
     * @param {CustomerAddressCreateManyArgs} args - Arguments to create many CustomerAddresses.
     * @example
     * // Create many CustomerAddresses
     * const customerAddress = await prisma.customerAddress.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CustomerAddressCreateManyArgs>(args?: SelectSubset<T, CustomerAddressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a CustomerAddress.
     * @param {CustomerAddressDeleteArgs} args - Arguments to delete one CustomerAddress.
     * @example
     * // Delete one CustomerAddress
     * const CustomerAddress = await prisma.customerAddress.delete({
     *   where: {
     *     // ... filter to delete one CustomerAddress
     *   }
     * })
     * 
     */
    delete<T extends CustomerAddressDeleteArgs>(args: SelectSubset<T, CustomerAddressDeleteArgs<ExtArgs>>): Prisma__CustomerAddressClient<$Result.GetResult<Prisma.$CustomerAddressPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one CustomerAddress.
     * @param {CustomerAddressUpdateArgs} args - Arguments to update one CustomerAddress.
     * @example
     * // Update one CustomerAddress
     * const customerAddress = await prisma.customerAddress.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CustomerAddressUpdateArgs>(args: SelectSubset<T, CustomerAddressUpdateArgs<ExtArgs>>): Prisma__CustomerAddressClient<$Result.GetResult<Prisma.$CustomerAddressPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more CustomerAddresses.
     * @param {CustomerAddressDeleteManyArgs} args - Arguments to filter CustomerAddresses to delete.
     * @example
     * // Delete a few CustomerAddresses
     * const { count } = await prisma.customerAddress.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CustomerAddressDeleteManyArgs>(args?: SelectSubset<T, CustomerAddressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more CustomerAddresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAddressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many CustomerAddresses
     * const customerAddress = await prisma.customerAddress.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CustomerAddressUpdateManyArgs>(args: SelectSubset<T, CustomerAddressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one CustomerAddress.
     * @param {CustomerAddressUpsertArgs} args - Arguments to update or create a CustomerAddress.
     * @example
     * // Update or create a CustomerAddress
     * const customerAddress = await prisma.customerAddress.upsert({
     *   create: {
     *     // ... data to create a CustomerAddress
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the CustomerAddress we want to update
     *   }
     * })
     */
    upsert<T extends CustomerAddressUpsertArgs>(args: SelectSubset<T, CustomerAddressUpsertArgs<ExtArgs>>): Prisma__CustomerAddressClient<$Result.GetResult<Prisma.$CustomerAddressPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of CustomerAddresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAddressCountArgs} args - Arguments to filter CustomerAddresses to count.
     * @example
     * // Count the number of CustomerAddresses
     * const count = await prisma.customerAddress.count({
     *   where: {
     *     // ... the filter for the CustomerAddresses we want to count
     *   }
     * })
    **/
    count<T extends CustomerAddressCountArgs>(
      args?: Subset<T, CustomerAddressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CustomerAddressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a CustomerAddress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAddressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CustomerAddressAggregateArgs>(args: Subset<T, CustomerAddressAggregateArgs>): Prisma.PrismaPromise<GetCustomerAddressAggregateType<T>>

    /**
     * Group by CustomerAddress.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CustomerAddressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CustomerAddressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CustomerAddressGroupByArgs['orderBy'] }
        : { orderBy?: CustomerAddressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CustomerAddressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCustomerAddressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the CustomerAddress model
   */
  readonly fields: CustomerAddressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for CustomerAddress.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CustomerAddressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer<T extends CustomerAddress$customerArgs<ExtArgs> = {}>(args?: Subset<T, CustomerAddress$customerArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the CustomerAddress model
   */ 
  interface CustomerAddressFieldRefs {
    readonly id: FieldRef<"CustomerAddress", 'String'>
    readonly customerId: FieldRef<"CustomerAddress", 'String'>
    readonly label: FieldRef<"CustomerAddress", 'String'>
    readonly firstName: FieldRef<"CustomerAddress", 'String'>
    readonly lastName: FieldRef<"CustomerAddress", 'String'>
    readonly phone: FieldRef<"CustomerAddress", 'String'>
    readonly email: FieldRef<"CustomerAddress", 'String'>
    readonly address: FieldRef<"CustomerAddress", 'String'>
    readonly apartment: FieldRef<"CustomerAddress", 'String'>
    readonly city: FieldRef<"CustomerAddress", 'String'>
    readonly state: FieldRef<"CustomerAddress", 'String'>
    readonly country: FieldRef<"CustomerAddress", 'String'>
    readonly postalCode: FieldRef<"CustomerAddress", 'String'>
    readonly isDefault: FieldRef<"CustomerAddress", 'Boolean'>
    readonly created_at: FieldRef<"CustomerAddress", 'DateTime'>
    readonly created_by: FieldRef<"CustomerAddress", 'String'>
    readonly created_ip: FieldRef<"CustomerAddress", 'String'>
    readonly updated_at: FieldRef<"CustomerAddress", 'DateTime'>
    readonly updated_by: FieldRef<"CustomerAddress", 'String'>
    readonly updated_ip: FieldRef<"CustomerAddress", 'String'>
  }
    

  // Custom InputTypes
  /**
   * CustomerAddress findUnique
   */
  export type CustomerAddressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerAddress
     */
    select?: CustomerAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerAddressInclude<ExtArgs> | null
    /**
     * Filter, which CustomerAddress to fetch.
     */
    where: CustomerAddressWhereUniqueInput
  }

  /**
   * CustomerAddress findUniqueOrThrow
   */
  export type CustomerAddressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerAddress
     */
    select?: CustomerAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerAddressInclude<ExtArgs> | null
    /**
     * Filter, which CustomerAddress to fetch.
     */
    where: CustomerAddressWhereUniqueInput
  }

  /**
   * CustomerAddress findFirst
   */
  export type CustomerAddressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerAddress
     */
    select?: CustomerAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerAddressInclude<ExtArgs> | null
    /**
     * Filter, which CustomerAddress to fetch.
     */
    where?: CustomerAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerAddresses to fetch.
     */
    orderBy?: CustomerAddressOrderByWithRelationInput | CustomerAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomerAddresses.
     */
    cursor?: CustomerAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerAddresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomerAddresses.
     */
    distinct?: CustomerAddressScalarFieldEnum | CustomerAddressScalarFieldEnum[]
  }

  /**
   * CustomerAddress findFirstOrThrow
   */
  export type CustomerAddressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerAddress
     */
    select?: CustomerAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerAddressInclude<ExtArgs> | null
    /**
     * Filter, which CustomerAddress to fetch.
     */
    where?: CustomerAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerAddresses to fetch.
     */
    orderBy?: CustomerAddressOrderByWithRelationInput | CustomerAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for CustomerAddresses.
     */
    cursor?: CustomerAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerAddresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of CustomerAddresses.
     */
    distinct?: CustomerAddressScalarFieldEnum | CustomerAddressScalarFieldEnum[]
  }

  /**
   * CustomerAddress findMany
   */
  export type CustomerAddressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerAddress
     */
    select?: CustomerAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerAddressInclude<ExtArgs> | null
    /**
     * Filter, which CustomerAddresses to fetch.
     */
    where?: CustomerAddressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of CustomerAddresses to fetch.
     */
    orderBy?: CustomerAddressOrderByWithRelationInput | CustomerAddressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing CustomerAddresses.
     */
    cursor?: CustomerAddressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` CustomerAddresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` CustomerAddresses.
     */
    skip?: number
    distinct?: CustomerAddressScalarFieldEnum | CustomerAddressScalarFieldEnum[]
  }

  /**
   * CustomerAddress create
   */
  export type CustomerAddressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerAddress
     */
    select?: CustomerAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerAddressInclude<ExtArgs> | null
    /**
     * The data needed to create a CustomerAddress.
     */
    data: XOR<CustomerAddressCreateInput, CustomerAddressUncheckedCreateInput>
  }

  /**
   * CustomerAddress createMany
   */
  export type CustomerAddressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many CustomerAddresses.
     */
    data: CustomerAddressCreateManyInput | CustomerAddressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * CustomerAddress update
   */
  export type CustomerAddressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerAddress
     */
    select?: CustomerAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerAddressInclude<ExtArgs> | null
    /**
     * The data needed to update a CustomerAddress.
     */
    data: XOR<CustomerAddressUpdateInput, CustomerAddressUncheckedUpdateInput>
    /**
     * Choose, which CustomerAddress to update.
     */
    where: CustomerAddressWhereUniqueInput
  }

  /**
   * CustomerAddress updateMany
   */
  export type CustomerAddressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update CustomerAddresses.
     */
    data: XOR<CustomerAddressUpdateManyMutationInput, CustomerAddressUncheckedUpdateManyInput>
    /**
     * Filter which CustomerAddresses to update
     */
    where?: CustomerAddressWhereInput
  }

  /**
   * CustomerAddress upsert
   */
  export type CustomerAddressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerAddress
     */
    select?: CustomerAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerAddressInclude<ExtArgs> | null
    /**
     * The filter to search for the CustomerAddress to update in case it exists.
     */
    where: CustomerAddressWhereUniqueInput
    /**
     * In case the CustomerAddress found by the `where` argument doesn't exist, create a new CustomerAddress with this data.
     */
    create: XOR<CustomerAddressCreateInput, CustomerAddressUncheckedCreateInput>
    /**
     * In case the CustomerAddress was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CustomerAddressUpdateInput, CustomerAddressUncheckedUpdateInput>
  }

  /**
   * CustomerAddress delete
   */
  export type CustomerAddressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerAddress
     */
    select?: CustomerAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerAddressInclude<ExtArgs> | null
    /**
     * Filter which CustomerAddress to delete.
     */
    where: CustomerAddressWhereUniqueInput
  }

  /**
   * CustomerAddress deleteMany
   */
  export type CustomerAddressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which CustomerAddresses to delete
     */
    where?: CustomerAddressWhereInput
  }

  /**
   * CustomerAddress.customer
   */
  export type CustomerAddress$customerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
  }

  /**
   * CustomerAddress without action
   */
  export type CustomerAddressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CustomerAddress
     */
    select?: CustomerAddressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerAddressInclude<ExtArgs> | null
  }


  /**
   * Model PendingOrder
   */

  export type AggregatePendingOrder = {
    _count: PendingOrderCountAggregateOutputType | null
    _avg: PendingOrderAvgAggregateOutputType | null
    _sum: PendingOrderSumAggregateOutputType | null
    _min: PendingOrderMinAggregateOutputType | null
    _max: PendingOrderMaxAggregateOutputType | null
  }

  export type PendingOrderAvgAggregateOutputType = {
    subtotal: Decimal | null
    shippingCost: Decimal | null
    discount: Decimal | null
    total: Decimal | null
  }

  export type PendingOrderSumAggregateOutputType = {
    subtotal: Decimal | null
    shippingCost: Decimal | null
    discount: Decimal | null
    total: Decimal | null
  }

  export type PendingOrderMinAggregateOutputType = {
    id: string | null
    transactionId: string | null
    customerId: string | null
    addressId: string | null
    couponId: string | null
    couponCode: string | null
    subtotal: Decimal | null
    shippingCost: Decimal | null
    discount: Decimal | null
    total: Decimal | null
    status: string | null
    paymentMethod: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    shippingChargeId: string | null
  }

  export type PendingOrderMaxAggregateOutputType = {
    id: string | null
    transactionId: string | null
    customerId: string | null
    addressId: string | null
    couponId: string | null
    couponCode: string | null
    subtotal: Decimal | null
    shippingCost: Decimal | null
    discount: Decimal | null
    total: Decimal | null
    status: string | null
    paymentMethod: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    shippingChargeId: string | null
  }

  export type PendingOrderCountAggregateOutputType = {
    id: number
    transactionId: number
    customerId: number
    addressId: number
    items: number
    couponId: number
    couponCode: number
    subtotal: number
    shippingCost: number
    discount: number
    total: number
    status: number
    paymentMethod: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    shippingChargeId: number
    _all: number
  }


  export type PendingOrderAvgAggregateInputType = {
    subtotal?: true
    shippingCost?: true
    discount?: true
    total?: true
  }

  export type PendingOrderSumAggregateInputType = {
    subtotal?: true
    shippingCost?: true
    discount?: true
    total?: true
  }

  export type PendingOrderMinAggregateInputType = {
    id?: true
    transactionId?: true
    customerId?: true
    addressId?: true
    couponId?: true
    couponCode?: true
    subtotal?: true
    shippingCost?: true
    discount?: true
    total?: true
    status?: true
    paymentMethod?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    shippingChargeId?: true
  }

  export type PendingOrderMaxAggregateInputType = {
    id?: true
    transactionId?: true
    customerId?: true
    addressId?: true
    couponId?: true
    couponCode?: true
    subtotal?: true
    shippingCost?: true
    discount?: true
    total?: true
    status?: true
    paymentMethod?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    shippingChargeId?: true
  }

  export type PendingOrderCountAggregateInputType = {
    id?: true
    transactionId?: true
    customerId?: true
    addressId?: true
    items?: true
    couponId?: true
    couponCode?: true
    subtotal?: true
    shippingCost?: true
    discount?: true
    total?: true
    status?: true
    paymentMethod?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    shippingChargeId?: true
    _all?: true
  }

  export type PendingOrderAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PendingOrder to aggregate.
     */
    where?: PendingOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PendingOrders to fetch.
     */
    orderBy?: PendingOrderOrderByWithRelationInput | PendingOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PendingOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PendingOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PendingOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PendingOrders
    **/
    _count?: true | PendingOrderCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PendingOrderAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PendingOrderSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PendingOrderMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PendingOrderMaxAggregateInputType
  }

  export type GetPendingOrderAggregateType<T extends PendingOrderAggregateArgs> = {
        [P in keyof T & keyof AggregatePendingOrder]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePendingOrder[P]>
      : GetScalarType<T[P], AggregatePendingOrder[P]>
  }




  export type PendingOrderGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PendingOrderWhereInput
    orderBy?: PendingOrderOrderByWithAggregationInput | PendingOrderOrderByWithAggregationInput[]
    by: PendingOrderScalarFieldEnum[] | PendingOrderScalarFieldEnum
    having?: PendingOrderScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PendingOrderCountAggregateInputType | true
    _avg?: PendingOrderAvgAggregateInputType
    _sum?: PendingOrderSumAggregateInputType
    _min?: PendingOrderMinAggregateInputType
    _max?: PendingOrderMaxAggregateInputType
  }

  export type PendingOrderGroupByOutputType = {
    id: string
    transactionId: string
    customerId: string | null
    addressId: string
    items: JsonValue
    couponId: string | null
    couponCode: string | null
    subtotal: Decimal
    shippingCost: Decimal
    discount: Decimal
    total: Decimal
    status: string
    paymentMethod: string
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    shippingChargeId: string | null
    _count: PendingOrderCountAggregateOutputType | null
    _avg: PendingOrderAvgAggregateOutputType | null
    _sum: PendingOrderSumAggregateOutputType | null
    _min: PendingOrderMinAggregateOutputType | null
    _max: PendingOrderMaxAggregateOutputType | null
  }

  type GetPendingOrderGroupByPayload<T extends PendingOrderGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PendingOrderGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PendingOrderGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PendingOrderGroupByOutputType[P]>
            : GetScalarType<T[P], PendingOrderGroupByOutputType[P]>
        }
      >
    >


  export type PendingOrderSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    transactionId?: boolean
    customerId?: boolean
    addressId?: boolean
    items?: boolean
    couponId?: boolean
    couponCode?: boolean
    subtotal?: boolean
    shippingCost?: boolean
    discount?: boolean
    total?: boolean
    status?: boolean
    paymentMethod?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    shippingChargeId?: boolean
    customer?: boolean | PendingOrder$customerArgs<ExtArgs>
    coupon?: boolean | PendingOrder$couponArgs<ExtArgs>
  }, ExtArgs["result"]["pendingOrder"]>


  export type PendingOrderSelectScalar = {
    id?: boolean
    transactionId?: boolean
    customerId?: boolean
    addressId?: boolean
    items?: boolean
    couponId?: boolean
    couponCode?: boolean
    subtotal?: boolean
    shippingCost?: boolean
    discount?: boolean
    total?: boolean
    status?: boolean
    paymentMethod?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    shippingChargeId?: boolean
  }

  export type PendingOrderInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    customer?: boolean | PendingOrder$customerArgs<ExtArgs>
    coupon?: boolean | PendingOrder$couponArgs<ExtArgs>
  }

  export type $PendingOrderPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PendingOrder"
    objects: {
      customer: Prisma.$CustomerPayload<ExtArgs> | null
      coupon: Prisma.$CouponPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      transactionId: string
      customerId: string | null
      addressId: string
      items: Prisma.JsonValue
      couponId: string | null
      couponCode: string | null
      subtotal: Prisma.Decimal
      shippingCost: Prisma.Decimal
      discount: Prisma.Decimal
      total: Prisma.Decimal
      status: string
      paymentMethod: string
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      shippingChargeId: string | null
    }, ExtArgs["result"]["pendingOrder"]>
    composites: {}
  }

  type PendingOrderGetPayload<S extends boolean | null | undefined | PendingOrderDefaultArgs> = $Result.GetResult<Prisma.$PendingOrderPayload, S>

  type PendingOrderCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PendingOrderFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PendingOrderCountAggregateInputType | true
    }

  export interface PendingOrderDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PendingOrder'], meta: { name: 'PendingOrder' } }
    /**
     * Find zero or one PendingOrder that matches the filter.
     * @param {PendingOrderFindUniqueArgs} args - Arguments to find a PendingOrder
     * @example
     * // Get one PendingOrder
     * const pendingOrder = await prisma.pendingOrder.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PendingOrderFindUniqueArgs>(args: SelectSubset<T, PendingOrderFindUniqueArgs<ExtArgs>>): Prisma__PendingOrderClient<$Result.GetResult<Prisma.$PendingOrderPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PendingOrder that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PendingOrderFindUniqueOrThrowArgs} args - Arguments to find a PendingOrder
     * @example
     * // Get one PendingOrder
     * const pendingOrder = await prisma.pendingOrder.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PendingOrderFindUniqueOrThrowArgs>(args: SelectSubset<T, PendingOrderFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PendingOrderClient<$Result.GetResult<Prisma.$PendingOrderPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PendingOrder that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendingOrderFindFirstArgs} args - Arguments to find a PendingOrder
     * @example
     * // Get one PendingOrder
     * const pendingOrder = await prisma.pendingOrder.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PendingOrderFindFirstArgs>(args?: SelectSubset<T, PendingOrderFindFirstArgs<ExtArgs>>): Prisma__PendingOrderClient<$Result.GetResult<Prisma.$PendingOrderPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PendingOrder that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendingOrderFindFirstOrThrowArgs} args - Arguments to find a PendingOrder
     * @example
     * // Get one PendingOrder
     * const pendingOrder = await prisma.pendingOrder.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PendingOrderFindFirstOrThrowArgs>(args?: SelectSubset<T, PendingOrderFindFirstOrThrowArgs<ExtArgs>>): Prisma__PendingOrderClient<$Result.GetResult<Prisma.$PendingOrderPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PendingOrders that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendingOrderFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PendingOrders
     * const pendingOrders = await prisma.pendingOrder.findMany()
     * 
     * // Get first 10 PendingOrders
     * const pendingOrders = await prisma.pendingOrder.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pendingOrderWithIdOnly = await prisma.pendingOrder.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PendingOrderFindManyArgs>(args?: SelectSubset<T, PendingOrderFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PendingOrderPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PendingOrder.
     * @param {PendingOrderCreateArgs} args - Arguments to create a PendingOrder.
     * @example
     * // Create one PendingOrder
     * const PendingOrder = await prisma.pendingOrder.create({
     *   data: {
     *     // ... data to create a PendingOrder
     *   }
     * })
     * 
     */
    create<T extends PendingOrderCreateArgs>(args: SelectSubset<T, PendingOrderCreateArgs<ExtArgs>>): Prisma__PendingOrderClient<$Result.GetResult<Prisma.$PendingOrderPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PendingOrders.
     * @param {PendingOrderCreateManyArgs} args - Arguments to create many PendingOrders.
     * @example
     * // Create many PendingOrders
     * const pendingOrder = await prisma.pendingOrder.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PendingOrderCreateManyArgs>(args?: SelectSubset<T, PendingOrderCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PendingOrder.
     * @param {PendingOrderDeleteArgs} args - Arguments to delete one PendingOrder.
     * @example
     * // Delete one PendingOrder
     * const PendingOrder = await prisma.pendingOrder.delete({
     *   where: {
     *     // ... filter to delete one PendingOrder
     *   }
     * })
     * 
     */
    delete<T extends PendingOrderDeleteArgs>(args: SelectSubset<T, PendingOrderDeleteArgs<ExtArgs>>): Prisma__PendingOrderClient<$Result.GetResult<Prisma.$PendingOrderPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PendingOrder.
     * @param {PendingOrderUpdateArgs} args - Arguments to update one PendingOrder.
     * @example
     * // Update one PendingOrder
     * const pendingOrder = await prisma.pendingOrder.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PendingOrderUpdateArgs>(args: SelectSubset<T, PendingOrderUpdateArgs<ExtArgs>>): Prisma__PendingOrderClient<$Result.GetResult<Prisma.$PendingOrderPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PendingOrders.
     * @param {PendingOrderDeleteManyArgs} args - Arguments to filter PendingOrders to delete.
     * @example
     * // Delete a few PendingOrders
     * const { count } = await prisma.pendingOrder.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PendingOrderDeleteManyArgs>(args?: SelectSubset<T, PendingOrderDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PendingOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendingOrderUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PendingOrders
     * const pendingOrder = await prisma.pendingOrder.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PendingOrderUpdateManyArgs>(args: SelectSubset<T, PendingOrderUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PendingOrder.
     * @param {PendingOrderUpsertArgs} args - Arguments to update or create a PendingOrder.
     * @example
     * // Update or create a PendingOrder
     * const pendingOrder = await prisma.pendingOrder.upsert({
     *   create: {
     *     // ... data to create a PendingOrder
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PendingOrder we want to update
     *   }
     * })
     */
    upsert<T extends PendingOrderUpsertArgs>(args: SelectSubset<T, PendingOrderUpsertArgs<ExtArgs>>): Prisma__PendingOrderClient<$Result.GetResult<Prisma.$PendingOrderPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PendingOrders.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendingOrderCountArgs} args - Arguments to filter PendingOrders to count.
     * @example
     * // Count the number of PendingOrders
     * const count = await prisma.pendingOrder.count({
     *   where: {
     *     // ... the filter for the PendingOrders we want to count
     *   }
     * })
    **/
    count<T extends PendingOrderCountArgs>(
      args?: Subset<T, PendingOrderCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PendingOrderCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PendingOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendingOrderAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PendingOrderAggregateArgs>(args: Subset<T, PendingOrderAggregateArgs>): Prisma.PrismaPromise<GetPendingOrderAggregateType<T>>

    /**
     * Group by PendingOrder.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PendingOrderGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PendingOrderGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PendingOrderGroupByArgs['orderBy'] }
        : { orderBy?: PendingOrderGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PendingOrderGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPendingOrderGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PendingOrder model
   */
  readonly fields: PendingOrderFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PendingOrder.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PendingOrderClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    customer<T extends PendingOrder$customerArgs<ExtArgs> = {}>(args?: Subset<T, PendingOrder$customerArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    coupon<T extends PendingOrder$couponArgs<ExtArgs> = {}>(args?: Subset<T, PendingOrder$couponArgs<ExtArgs>>): Prisma__CouponClient<$Result.GetResult<Prisma.$CouponPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PendingOrder model
   */ 
  interface PendingOrderFieldRefs {
    readonly id: FieldRef<"PendingOrder", 'String'>
    readonly transactionId: FieldRef<"PendingOrder", 'String'>
    readonly customerId: FieldRef<"PendingOrder", 'String'>
    readonly addressId: FieldRef<"PendingOrder", 'String'>
    readonly items: FieldRef<"PendingOrder", 'Json'>
    readonly couponId: FieldRef<"PendingOrder", 'String'>
    readonly couponCode: FieldRef<"PendingOrder", 'String'>
    readonly subtotal: FieldRef<"PendingOrder", 'Decimal'>
    readonly shippingCost: FieldRef<"PendingOrder", 'Decimal'>
    readonly discount: FieldRef<"PendingOrder", 'Decimal'>
    readonly total: FieldRef<"PendingOrder", 'Decimal'>
    readonly status: FieldRef<"PendingOrder", 'String'>
    readonly paymentMethod: FieldRef<"PendingOrder", 'String'>
    readonly created_at: FieldRef<"PendingOrder", 'DateTime'>
    readonly created_by: FieldRef<"PendingOrder", 'String'>
    readonly created_ip: FieldRef<"PendingOrder", 'String'>
    readonly updated_at: FieldRef<"PendingOrder", 'DateTime'>
    readonly updated_by: FieldRef<"PendingOrder", 'String'>
    readonly updated_ip: FieldRef<"PendingOrder", 'String'>
    readonly shippingChargeId: FieldRef<"PendingOrder", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PendingOrder findUnique
   */
  export type PendingOrderFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendingOrder
     */
    select?: PendingOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendingOrderInclude<ExtArgs> | null
    /**
     * Filter, which PendingOrder to fetch.
     */
    where: PendingOrderWhereUniqueInput
  }

  /**
   * PendingOrder findUniqueOrThrow
   */
  export type PendingOrderFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendingOrder
     */
    select?: PendingOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendingOrderInclude<ExtArgs> | null
    /**
     * Filter, which PendingOrder to fetch.
     */
    where: PendingOrderWhereUniqueInput
  }

  /**
   * PendingOrder findFirst
   */
  export type PendingOrderFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendingOrder
     */
    select?: PendingOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendingOrderInclude<ExtArgs> | null
    /**
     * Filter, which PendingOrder to fetch.
     */
    where?: PendingOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PendingOrders to fetch.
     */
    orderBy?: PendingOrderOrderByWithRelationInput | PendingOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PendingOrders.
     */
    cursor?: PendingOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PendingOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PendingOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PendingOrders.
     */
    distinct?: PendingOrderScalarFieldEnum | PendingOrderScalarFieldEnum[]
  }

  /**
   * PendingOrder findFirstOrThrow
   */
  export type PendingOrderFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendingOrder
     */
    select?: PendingOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendingOrderInclude<ExtArgs> | null
    /**
     * Filter, which PendingOrder to fetch.
     */
    where?: PendingOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PendingOrders to fetch.
     */
    orderBy?: PendingOrderOrderByWithRelationInput | PendingOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PendingOrders.
     */
    cursor?: PendingOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PendingOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PendingOrders.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PendingOrders.
     */
    distinct?: PendingOrderScalarFieldEnum | PendingOrderScalarFieldEnum[]
  }

  /**
   * PendingOrder findMany
   */
  export type PendingOrderFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendingOrder
     */
    select?: PendingOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendingOrderInclude<ExtArgs> | null
    /**
     * Filter, which PendingOrders to fetch.
     */
    where?: PendingOrderWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PendingOrders to fetch.
     */
    orderBy?: PendingOrderOrderByWithRelationInput | PendingOrderOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PendingOrders.
     */
    cursor?: PendingOrderWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PendingOrders from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PendingOrders.
     */
    skip?: number
    distinct?: PendingOrderScalarFieldEnum | PendingOrderScalarFieldEnum[]
  }

  /**
   * PendingOrder create
   */
  export type PendingOrderCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendingOrder
     */
    select?: PendingOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendingOrderInclude<ExtArgs> | null
    /**
     * The data needed to create a PendingOrder.
     */
    data: XOR<PendingOrderCreateInput, PendingOrderUncheckedCreateInput>
  }

  /**
   * PendingOrder createMany
   */
  export type PendingOrderCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PendingOrders.
     */
    data: PendingOrderCreateManyInput | PendingOrderCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PendingOrder update
   */
  export type PendingOrderUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendingOrder
     */
    select?: PendingOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendingOrderInclude<ExtArgs> | null
    /**
     * The data needed to update a PendingOrder.
     */
    data: XOR<PendingOrderUpdateInput, PendingOrderUncheckedUpdateInput>
    /**
     * Choose, which PendingOrder to update.
     */
    where: PendingOrderWhereUniqueInput
  }

  /**
   * PendingOrder updateMany
   */
  export type PendingOrderUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PendingOrders.
     */
    data: XOR<PendingOrderUpdateManyMutationInput, PendingOrderUncheckedUpdateManyInput>
    /**
     * Filter which PendingOrders to update
     */
    where?: PendingOrderWhereInput
  }

  /**
   * PendingOrder upsert
   */
  export type PendingOrderUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendingOrder
     */
    select?: PendingOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendingOrderInclude<ExtArgs> | null
    /**
     * The filter to search for the PendingOrder to update in case it exists.
     */
    where: PendingOrderWhereUniqueInput
    /**
     * In case the PendingOrder found by the `where` argument doesn't exist, create a new PendingOrder with this data.
     */
    create: XOR<PendingOrderCreateInput, PendingOrderUncheckedCreateInput>
    /**
     * In case the PendingOrder was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PendingOrderUpdateInput, PendingOrderUncheckedUpdateInput>
  }

  /**
   * PendingOrder delete
   */
  export type PendingOrderDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendingOrder
     */
    select?: PendingOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendingOrderInclude<ExtArgs> | null
    /**
     * Filter which PendingOrder to delete.
     */
    where: PendingOrderWhereUniqueInput
  }

  /**
   * PendingOrder deleteMany
   */
  export type PendingOrderDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PendingOrders to delete
     */
    where?: PendingOrderWhereInput
  }

  /**
   * PendingOrder.customer
   */
  export type PendingOrder$customerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Customer
     */
    select?: CustomerSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CustomerInclude<ExtArgs> | null
    where?: CustomerWhereInput
  }

  /**
   * PendingOrder.coupon
   */
  export type PendingOrder$couponArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Coupon
     */
    select?: CouponSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CouponInclude<ExtArgs> | null
    where?: CouponWhereInput
  }

  /**
   * PendingOrder without action
   */
  export type PendingOrderDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendingOrder
     */
    select?: PendingOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendingOrderInclude<ExtArgs> | null
  }


  /**
   * Model PaymentTransaction
   */

  export type AggregatePaymentTransaction = {
    _count: PaymentTransactionCountAggregateOutputType | null
    _avg: PaymentTransactionAvgAggregateOutputType | null
    _sum: PaymentTransactionSumAggregateOutputType | null
    _min: PaymentTransactionMinAggregateOutputType | null
    _max: PaymentTransactionMaxAggregateOutputType | null
  }

  export type PaymentTransactionAvgAggregateOutputType = {
    amount: Decimal | null
  }

  export type PaymentTransactionSumAggregateOutputType = {
    amount: Decimal | null
  }

  export type PaymentTransactionMinAggregateOutputType = {
    id: string | null
    orderId: string | null
    transactionId: string | null
    gateway: string | null
    amount: Decimal | null
    currency: string | null
    status: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
  }

  export type PaymentTransactionMaxAggregateOutputType = {
    id: string | null
    orderId: string | null
    transactionId: string | null
    gateway: string | null
    amount: Decimal | null
    currency: string | null
    status: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
  }

  export type PaymentTransactionCountAggregateOutputType = {
    id: number
    orderId: number
    transactionId: number
    gateway: number
    amount: number
    currency: number
    status: number
    metadata: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    _all: number
  }


  export type PaymentTransactionAvgAggregateInputType = {
    amount?: true
  }

  export type PaymentTransactionSumAggregateInputType = {
    amount?: true
  }

  export type PaymentTransactionMinAggregateInputType = {
    id?: true
    orderId?: true
    transactionId?: true
    gateway?: true
    amount?: true
    currency?: true
    status?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
  }

  export type PaymentTransactionMaxAggregateInputType = {
    id?: true
    orderId?: true
    transactionId?: true
    gateway?: true
    amount?: true
    currency?: true
    status?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
  }

  export type PaymentTransactionCountAggregateInputType = {
    id?: true
    orderId?: true
    transactionId?: true
    gateway?: true
    amount?: true
    currency?: true
    status?: true
    metadata?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    _all?: true
  }

  export type PaymentTransactionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentTransaction to aggregate.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PaymentTransactions
    **/
    _count?: true | PaymentTransactionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PaymentTransactionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PaymentTransactionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PaymentTransactionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PaymentTransactionMaxAggregateInputType
  }

  export type GetPaymentTransactionAggregateType<T extends PaymentTransactionAggregateArgs> = {
        [P in keyof T & keyof AggregatePaymentTransaction]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePaymentTransaction[P]>
      : GetScalarType<T[P], AggregatePaymentTransaction[P]>
  }




  export type PaymentTransactionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PaymentTransactionWhereInput
    orderBy?: PaymentTransactionOrderByWithAggregationInput | PaymentTransactionOrderByWithAggregationInput[]
    by: PaymentTransactionScalarFieldEnum[] | PaymentTransactionScalarFieldEnum
    having?: PaymentTransactionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PaymentTransactionCountAggregateInputType | true
    _avg?: PaymentTransactionAvgAggregateInputType
    _sum?: PaymentTransactionSumAggregateInputType
    _min?: PaymentTransactionMinAggregateInputType
    _max?: PaymentTransactionMaxAggregateInputType
  }

  export type PaymentTransactionGroupByOutputType = {
    id: string
    orderId: string | null
    transactionId: string
    gateway: string
    amount: Decimal
    currency: string
    status: string
    metadata: JsonValue | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    _count: PaymentTransactionCountAggregateOutputType | null
    _avg: PaymentTransactionAvgAggregateOutputType | null
    _sum: PaymentTransactionSumAggregateOutputType | null
    _min: PaymentTransactionMinAggregateOutputType | null
    _max: PaymentTransactionMaxAggregateOutputType | null
  }

  type GetPaymentTransactionGroupByPayload<T extends PaymentTransactionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PaymentTransactionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PaymentTransactionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PaymentTransactionGroupByOutputType[P]>
            : GetScalarType<T[P], PaymentTransactionGroupByOutputType[P]>
        }
      >
    >


  export type PaymentTransactionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    orderId?: boolean
    transactionId?: boolean
    gateway?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    metadata?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    order?: boolean | PaymentTransaction$orderArgs<ExtArgs>
  }, ExtArgs["result"]["paymentTransaction"]>


  export type PaymentTransactionSelectScalar = {
    id?: boolean
    orderId?: boolean
    transactionId?: boolean
    gateway?: boolean
    amount?: boolean
    currency?: boolean
    status?: boolean
    metadata?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
  }

  export type PaymentTransactionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    order?: boolean | PaymentTransaction$orderArgs<ExtArgs>
  }

  export type $PaymentTransactionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PaymentTransaction"
    objects: {
      order: Prisma.$OrderPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      orderId: string | null
      transactionId: string
      gateway: string
      amount: Prisma.Decimal
      currency: string
      status: string
      metadata: Prisma.JsonValue | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
    }, ExtArgs["result"]["paymentTransaction"]>
    composites: {}
  }

  type PaymentTransactionGetPayload<S extends boolean | null | undefined | PaymentTransactionDefaultArgs> = $Result.GetResult<Prisma.$PaymentTransactionPayload, S>

  type PaymentTransactionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PaymentTransactionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PaymentTransactionCountAggregateInputType | true
    }

  export interface PaymentTransactionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PaymentTransaction'], meta: { name: 'PaymentTransaction' } }
    /**
     * Find zero or one PaymentTransaction that matches the filter.
     * @param {PaymentTransactionFindUniqueArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PaymentTransactionFindUniqueArgs>(args: SelectSubset<T, PaymentTransactionFindUniqueArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PaymentTransaction that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PaymentTransactionFindUniqueOrThrowArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PaymentTransactionFindUniqueOrThrowArgs>(args: SelectSubset<T, PaymentTransactionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PaymentTransaction that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionFindFirstArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PaymentTransactionFindFirstArgs>(args?: SelectSubset<T, PaymentTransactionFindFirstArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PaymentTransaction that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionFindFirstOrThrowArgs} args - Arguments to find a PaymentTransaction
     * @example
     * // Get one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PaymentTransactionFindFirstOrThrowArgs>(args?: SelectSubset<T, PaymentTransactionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PaymentTransactions that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PaymentTransactions
     * const paymentTransactions = await prisma.paymentTransaction.findMany()
     * 
     * // Get first 10 PaymentTransactions
     * const paymentTransactions = await prisma.paymentTransaction.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const paymentTransactionWithIdOnly = await prisma.paymentTransaction.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PaymentTransactionFindManyArgs>(args?: SelectSubset<T, PaymentTransactionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PaymentTransaction.
     * @param {PaymentTransactionCreateArgs} args - Arguments to create a PaymentTransaction.
     * @example
     * // Create one PaymentTransaction
     * const PaymentTransaction = await prisma.paymentTransaction.create({
     *   data: {
     *     // ... data to create a PaymentTransaction
     *   }
     * })
     * 
     */
    create<T extends PaymentTransactionCreateArgs>(args: SelectSubset<T, PaymentTransactionCreateArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PaymentTransactions.
     * @param {PaymentTransactionCreateManyArgs} args - Arguments to create many PaymentTransactions.
     * @example
     * // Create many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PaymentTransactionCreateManyArgs>(args?: SelectSubset<T, PaymentTransactionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PaymentTransaction.
     * @param {PaymentTransactionDeleteArgs} args - Arguments to delete one PaymentTransaction.
     * @example
     * // Delete one PaymentTransaction
     * const PaymentTransaction = await prisma.paymentTransaction.delete({
     *   where: {
     *     // ... filter to delete one PaymentTransaction
     *   }
     * })
     * 
     */
    delete<T extends PaymentTransactionDeleteArgs>(args: SelectSubset<T, PaymentTransactionDeleteArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PaymentTransaction.
     * @param {PaymentTransactionUpdateArgs} args - Arguments to update one PaymentTransaction.
     * @example
     * // Update one PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PaymentTransactionUpdateArgs>(args: SelectSubset<T, PaymentTransactionUpdateArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PaymentTransactions.
     * @param {PaymentTransactionDeleteManyArgs} args - Arguments to filter PaymentTransactions to delete.
     * @example
     * // Delete a few PaymentTransactions
     * const { count } = await prisma.paymentTransaction.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PaymentTransactionDeleteManyArgs>(args?: SelectSubset<T, PaymentTransactionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PaymentTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PaymentTransactions
     * const paymentTransaction = await prisma.paymentTransaction.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PaymentTransactionUpdateManyArgs>(args: SelectSubset<T, PaymentTransactionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PaymentTransaction.
     * @param {PaymentTransactionUpsertArgs} args - Arguments to update or create a PaymentTransaction.
     * @example
     * // Update or create a PaymentTransaction
     * const paymentTransaction = await prisma.paymentTransaction.upsert({
     *   create: {
     *     // ... data to create a PaymentTransaction
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PaymentTransaction we want to update
     *   }
     * })
     */
    upsert<T extends PaymentTransactionUpsertArgs>(args: SelectSubset<T, PaymentTransactionUpsertArgs<ExtArgs>>): Prisma__PaymentTransactionClient<$Result.GetResult<Prisma.$PaymentTransactionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PaymentTransactions.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionCountArgs} args - Arguments to filter PaymentTransactions to count.
     * @example
     * // Count the number of PaymentTransactions
     * const count = await prisma.paymentTransaction.count({
     *   where: {
     *     // ... the filter for the PaymentTransactions we want to count
     *   }
     * })
    **/
    count<T extends PaymentTransactionCountArgs>(
      args?: Subset<T, PaymentTransactionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PaymentTransactionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PaymentTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PaymentTransactionAggregateArgs>(args: Subset<T, PaymentTransactionAggregateArgs>): Prisma.PrismaPromise<GetPaymentTransactionAggregateType<T>>

    /**
     * Group by PaymentTransaction.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PaymentTransactionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PaymentTransactionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PaymentTransactionGroupByArgs['orderBy'] }
        : { orderBy?: PaymentTransactionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PaymentTransactionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPaymentTransactionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PaymentTransaction model
   */
  readonly fields: PaymentTransactionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PaymentTransaction.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PaymentTransactionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    order<T extends PaymentTransaction$orderArgs<ExtArgs> = {}>(args?: Subset<T, PaymentTransaction$orderArgs<ExtArgs>>): Prisma__OrderClient<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PaymentTransaction model
   */ 
  interface PaymentTransactionFieldRefs {
    readonly id: FieldRef<"PaymentTransaction", 'String'>
    readonly orderId: FieldRef<"PaymentTransaction", 'String'>
    readonly transactionId: FieldRef<"PaymentTransaction", 'String'>
    readonly gateway: FieldRef<"PaymentTransaction", 'String'>
    readonly amount: FieldRef<"PaymentTransaction", 'Decimal'>
    readonly currency: FieldRef<"PaymentTransaction", 'String'>
    readonly status: FieldRef<"PaymentTransaction", 'String'>
    readonly metadata: FieldRef<"PaymentTransaction", 'Json'>
    readonly created_at: FieldRef<"PaymentTransaction", 'DateTime'>
    readonly created_by: FieldRef<"PaymentTransaction", 'String'>
    readonly created_ip: FieldRef<"PaymentTransaction", 'String'>
    readonly updated_at: FieldRef<"PaymentTransaction", 'DateTime'>
    readonly updated_by: FieldRef<"PaymentTransaction", 'String'>
    readonly updated_ip: FieldRef<"PaymentTransaction", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PaymentTransaction findUnique
   */
  export type PaymentTransactionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction findUniqueOrThrow
   */
  export type PaymentTransactionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction findFirst
   */
  export type PaymentTransactionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentTransactions.
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentTransactions.
     */
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * PaymentTransaction findFirstOrThrow
   */
  export type PaymentTransactionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentTransaction to fetch.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PaymentTransactions.
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PaymentTransactions.
     */
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * PaymentTransaction findMany
   */
  export type PaymentTransactionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * Filter, which PaymentTransactions to fetch.
     */
    where?: PaymentTransactionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PaymentTransactions to fetch.
     */
    orderBy?: PaymentTransactionOrderByWithRelationInput | PaymentTransactionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PaymentTransactions.
     */
    cursor?: PaymentTransactionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PaymentTransactions from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PaymentTransactions.
     */
    skip?: number
    distinct?: PaymentTransactionScalarFieldEnum | PaymentTransactionScalarFieldEnum[]
  }

  /**
   * PaymentTransaction create
   */
  export type PaymentTransactionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * The data needed to create a PaymentTransaction.
     */
    data: XOR<PaymentTransactionCreateInput, PaymentTransactionUncheckedCreateInput>
  }

  /**
   * PaymentTransaction createMany
   */
  export type PaymentTransactionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PaymentTransactions.
     */
    data: PaymentTransactionCreateManyInput | PaymentTransactionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PaymentTransaction update
   */
  export type PaymentTransactionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * The data needed to update a PaymentTransaction.
     */
    data: XOR<PaymentTransactionUpdateInput, PaymentTransactionUncheckedUpdateInput>
    /**
     * Choose, which PaymentTransaction to update.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction updateMany
   */
  export type PaymentTransactionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PaymentTransactions.
     */
    data: XOR<PaymentTransactionUpdateManyMutationInput, PaymentTransactionUncheckedUpdateManyInput>
    /**
     * Filter which PaymentTransactions to update
     */
    where?: PaymentTransactionWhereInput
  }

  /**
   * PaymentTransaction upsert
   */
  export type PaymentTransactionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * The filter to search for the PaymentTransaction to update in case it exists.
     */
    where: PaymentTransactionWhereUniqueInput
    /**
     * In case the PaymentTransaction found by the `where` argument doesn't exist, create a new PaymentTransaction with this data.
     */
    create: XOR<PaymentTransactionCreateInput, PaymentTransactionUncheckedCreateInput>
    /**
     * In case the PaymentTransaction was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PaymentTransactionUpdateInput, PaymentTransactionUncheckedUpdateInput>
  }

  /**
   * PaymentTransaction delete
   */
  export type PaymentTransactionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
    /**
     * Filter which PaymentTransaction to delete.
     */
    where: PaymentTransactionWhereUniqueInput
  }

  /**
   * PaymentTransaction deleteMany
   */
  export type PaymentTransactionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PaymentTransactions to delete
     */
    where?: PaymentTransactionWhereInput
  }

  /**
   * PaymentTransaction.order
   */
  export type PaymentTransaction$orderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
  }

  /**
   * PaymentTransaction without action
   */
  export type PaymentTransactionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PaymentTransaction
     */
    select?: PaymentTransactionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PaymentTransactionInclude<ExtArgs> | null
  }


  /**
   * Model Wishlist
   */

  export type AggregateWishlist = {
    _count: WishlistCountAggregateOutputType | null
    _min: WishlistMinAggregateOutputType | null
    _max: WishlistMaxAggregateOutputType | null
  }

  export type WishlistMinAggregateOutputType = {
    id: string | null
    userId: string | null
    productId: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type WishlistMaxAggregateOutputType = {
    id: string | null
    userId: string | null
    productId: string | null
    created_at: Date | null
    updated_at: Date | null
  }

  export type WishlistCountAggregateOutputType = {
    id: number
    userId: number
    productId: number
    created_at: number
    updated_at: number
    _all: number
  }


  export type WishlistMinAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    created_at?: true
    updated_at?: true
  }

  export type WishlistMaxAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    created_at?: true
    updated_at?: true
  }

  export type WishlistCountAggregateInputType = {
    id?: true
    userId?: true
    productId?: true
    created_at?: true
    updated_at?: true
    _all?: true
  }

  export type WishlistAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Wishlist to aggregate.
     */
    where?: WishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Wishlists to fetch.
     */
    orderBy?: WishlistOrderByWithRelationInput | WishlistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: WishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Wishlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Wishlists
    **/
    _count?: true | WishlistCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: WishlistMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: WishlistMaxAggregateInputType
  }

  export type GetWishlistAggregateType<T extends WishlistAggregateArgs> = {
        [P in keyof T & keyof AggregateWishlist]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateWishlist[P]>
      : GetScalarType<T[P], AggregateWishlist[P]>
  }




  export type WishlistGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: WishlistWhereInput
    orderBy?: WishlistOrderByWithAggregationInput | WishlistOrderByWithAggregationInput[]
    by: WishlistScalarFieldEnum[] | WishlistScalarFieldEnum
    having?: WishlistScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: WishlistCountAggregateInputType | true
    _min?: WishlistMinAggregateInputType
    _max?: WishlistMaxAggregateInputType
  }

  export type WishlistGroupByOutputType = {
    id: string
    userId: string
    productId: string
    created_at: Date
    updated_at: Date
    _count: WishlistCountAggregateOutputType | null
    _min: WishlistMinAggregateOutputType | null
    _max: WishlistMaxAggregateOutputType | null
  }

  type GetWishlistGroupByPayload<T extends WishlistGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<WishlistGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof WishlistGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], WishlistGroupByOutputType[P]>
            : GetScalarType<T[P], WishlistGroupByOutputType[P]>
        }
      >
    >


  export type WishlistSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    userId?: boolean
    productId?: boolean
    created_at?: boolean
    updated_at?: boolean
    user?: boolean | CustomerDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["wishlist"]>


  export type WishlistSelectScalar = {
    id?: boolean
    userId?: boolean
    productId?: boolean
    created_at?: boolean
    updated_at?: boolean
  }

  export type WishlistInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    user?: boolean | CustomerDefaultArgs<ExtArgs>
    product?: boolean | ProductDefaultArgs<ExtArgs>
  }

  export type $WishlistPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Wishlist"
    objects: {
      user: Prisma.$CustomerPayload<ExtArgs>
      product: Prisma.$ProductPayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      userId: string
      productId: string
      created_at: Date
      updated_at: Date
    }, ExtArgs["result"]["wishlist"]>
    composites: {}
  }

  type WishlistGetPayload<S extends boolean | null | undefined | WishlistDefaultArgs> = $Result.GetResult<Prisma.$WishlistPayload, S>

  type WishlistCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<WishlistFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: WishlistCountAggregateInputType | true
    }

  export interface WishlistDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Wishlist'], meta: { name: 'Wishlist' } }
    /**
     * Find zero or one Wishlist that matches the filter.
     * @param {WishlistFindUniqueArgs} args - Arguments to find a Wishlist
     * @example
     * // Get one Wishlist
     * const wishlist = await prisma.wishlist.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends WishlistFindUniqueArgs>(args: SelectSubset<T, WishlistFindUniqueArgs<ExtArgs>>): Prisma__WishlistClient<$Result.GetResult<Prisma.$WishlistPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Wishlist that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {WishlistFindUniqueOrThrowArgs} args - Arguments to find a Wishlist
     * @example
     * // Get one Wishlist
     * const wishlist = await prisma.wishlist.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends WishlistFindUniqueOrThrowArgs>(args: SelectSubset<T, WishlistFindUniqueOrThrowArgs<ExtArgs>>): Prisma__WishlistClient<$Result.GetResult<Prisma.$WishlistPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Wishlist that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WishlistFindFirstArgs} args - Arguments to find a Wishlist
     * @example
     * // Get one Wishlist
     * const wishlist = await prisma.wishlist.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends WishlistFindFirstArgs>(args?: SelectSubset<T, WishlistFindFirstArgs<ExtArgs>>): Prisma__WishlistClient<$Result.GetResult<Prisma.$WishlistPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Wishlist that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WishlistFindFirstOrThrowArgs} args - Arguments to find a Wishlist
     * @example
     * // Get one Wishlist
     * const wishlist = await prisma.wishlist.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends WishlistFindFirstOrThrowArgs>(args?: SelectSubset<T, WishlistFindFirstOrThrowArgs<ExtArgs>>): Prisma__WishlistClient<$Result.GetResult<Prisma.$WishlistPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Wishlists that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WishlistFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Wishlists
     * const wishlists = await prisma.wishlist.findMany()
     * 
     * // Get first 10 Wishlists
     * const wishlists = await prisma.wishlist.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const wishlistWithIdOnly = await prisma.wishlist.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends WishlistFindManyArgs>(args?: SelectSubset<T, WishlistFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$WishlistPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Wishlist.
     * @param {WishlistCreateArgs} args - Arguments to create a Wishlist.
     * @example
     * // Create one Wishlist
     * const Wishlist = await prisma.wishlist.create({
     *   data: {
     *     // ... data to create a Wishlist
     *   }
     * })
     * 
     */
    create<T extends WishlistCreateArgs>(args: SelectSubset<T, WishlistCreateArgs<ExtArgs>>): Prisma__WishlistClient<$Result.GetResult<Prisma.$WishlistPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Wishlists.
     * @param {WishlistCreateManyArgs} args - Arguments to create many Wishlists.
     * @example
     * // Create many Wishlists
     * const wishlist = await prisma.wishlist.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends WishlistCreateManyArgs>(args?: SelectSubset<T, WishlistCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Wishlist.
     * @param {WishlistDeleteArgs} args - Arguments to delete one Wishlist.
     * @example
     * // Delete one Wishlist
     * const Wishlist = await prisma.wishlist.delete({
     *   where: {
     *     // ... filter to delete one Wishlist
     *   }
     * })
     * 
     */
    delete<T extends WishlistDeleteArgs>(args: SelectSubset<T, WishlistDeleteArgs<ExtArgs>>): Prisma__WishlistClient<$Result.GetResult<Prisma.$WishlistPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Wishlist.
     * @param {WishlistUpdateArgs} args - Arguments to update one Wishlist.
     * @example
     * // Update one Wishlist
     * const wishlist = await prisma.wishlist.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends WishlistUpdateArgs>(args: SelectSubset<T, WishlistUpdateArgs<ExtArgs>>): Prisma__WishlistClient<$Result.GetResult<Prisma.$WishlistPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Wishlists.
     * @param {WishlistDeleteManyArgs} args - Arguments to filter Wishlists to delete.
     * @example
     * // Delete a few Wishlists
     * const { count } = await prisma.wishlist.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends WishlistDeleteManyArgs>(args?: SelectSubset<T, WishlistDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Wishlists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WishlistUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Wishlists
     * const wishlist = await prisma.wishlist.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends WishlistUpdateManyArgs>(args: SelectSubset<T, WishlistUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Wishlist.
     * @param {WishlistUpsertArgs} args - Arguments to update or create a Wishlist.
     * @example
     * // Update or create a Wishlist
     * const wishlist = await prisma.wishlist.upsert({
     *   create: {
     *     // ... data to create a Wishlist
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Wishlist we want to update
     *   }
     * })
     */
    upsert<T extends WishlistUpsertArgs>(args: SelectSubset<T, WishlistUpsertArgs<ExtArgs>>): Prisma__WishlistClient<$Result.GetResult<Prisma.$WishlistPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Wishlists.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WishlistCountArgs} args - Arguments to filter Wishlists to count.
     * @example
     * // Count the number of Wishlists
     * const count = await prisma.wishlist.count({
     *   where: {
     *     // ... the filter for the Wishlists we want to count
     *   }
     * })
    **/
    count<T extends WishlistCountArgs>(
      args?: Subset<T, WishlistCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], WishlistCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Wishlist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WishlistAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends WishlistAggregateArgs>(args: Subset<T, WishlistAggregateArgs>): Prisma.PrismaPromise<GetWishlistAggregateType<T>>

    /**
     * Group by Wishlist.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {WishlistGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends WishlistGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: WishlistGroupByArgs['orderBy'] }
        : { orderBy?: WishlistGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, WishlistGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetWishlistGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Wishlist model
   */
  readonly fields: WishlistFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Wishlist.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__WishlistClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    user<T extends CustomerDefaultArgs<ExtArgs> = {}>(args?: Subset<T, CustomerDefaultArgs<ExtArgs>>): Prisma__CustomerClient<$Result.GetResult<Prisma.$CustomerPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    product<T extends ProductDefaultArgs<ExtArgs> = {}>(args?: Subset<T, ProductDefaultArgs<ExtArgs>>): Prisma__ProductClient<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Wishlist model
   */ 
  interface WishlistFieldRefs {
    readonly id: FieldRef<"Wishlist", 'String'>
    readonly userId: FieldRef<"Wishlist", 'String'>
    readonly productId: FieldRef<"Wishlist", 'String'>
    readonly created_at: FieldRef<"Wishlist", 'DateTime'>
    readonly updated_at: FieldRef<"Wishlist", 'DateTime'>
  }
    

  // Custom InputTypes
  /**
   * Wishlist findUnique
   */
  export type WishlistFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wishlist
     */
    select?: WishlistSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WishlistInclude<ExtArgs> | null
    /**
     * Filter, which Wishlist to fetch.
     */
    where: WishlistWhereUniqueInput
  }

  /**
   * Wishlist findUniqueOrThrow
   */
  export type WishlistFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wishlist
     */
    select?: WishlistSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WishlistInclude<ExtArgs> | null
    /**
     * Filter, which Wishlist to fetch.
     */
    where: WishlistWhereUniqueInput
  }

  /**
   * Wishlist findFirst
   */
  export type WishlistFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wishlist
     */
    select?: WishlistSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WishlistInclude<ExtArgs> | null
    /**
     * Filter, which Wishlist to fetch.
     */
    where?: WishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Wishlists to fetch.
     */
    orderBy?: WishlistOrderByWithRelationInput | WishlistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Wishlists.
     */
    cursor?: WishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Wishlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Wishlists.
     */
    distinct?: WishlistScalarFieldEnum | WishlistScalarFieldEnum[]
  }

  /**
   * Wishlist findFirstOrThrow
   */
  export type WishlistFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wishlist
     */
    select?: WishlistSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WishlistInclude<ExtArgs> | null
    /**
     * Filter, which Wishlist to fetch.
     */
    where?: WishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Wishlists to fetch.
     */
    orderBy?: WishlistOrderByWithRelationInput | WishlistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Wishlists.
     */
    cursor?: WishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Wishlists.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Wishlists.
     */
    distinct?: WishlistScalarFieldEnum | WishlistScalarFieldEnum[]
  }

  /**
   * Wishlist findMany
   */
  export type WishlistFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wishlist
     */
    select?: WishlistSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WishlistInclude<ExtArgs> | null
    /**
     * Filter, which Wishlists to fetch.
     */
    where?: WishlistWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Wishlists to fetch.
     */
    orderBy?: WishlistOrderByWithRelationInput | WishlistOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Wishlists.
     */
    cursor?: WishlistWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Wishlists from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Wishlists.
     */
    skip?: number
    distinct?: WishlistScalarFieldEnum | WishlistScalarFieldEnum[]
  }

  /**
   * Wishlist create
   */
  export type WishlistCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wishlist
     */
    select?: WishlistSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WishlistInclude<ExtArgs> | null
    /**
     * The data needed to create a Wishlist.
     */
    data: XOR<WishlistCreateInput, WishlistUncheckedCreateInput>
  }

  /**
   * Wishlist createMany
   */
  export type WishlistCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Wishlists.
     */
    data: WishlistCreateManyInput | WishlistCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Wishlist update
   */
  export type WishlistUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wishlist
     */
    select?: WishlistSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WishlistInclude<ExtArgs> | null
    /**
     * The data needed to update a Wishlist.
     */
    data: XOR<WishlistUpdateInput, WishlistUncheckedUpdateInput>
    /**
     * Choose, which Wishlist to update.
     */
    where: WishlistWhereUniqueInput
  }

  /**
   * Wishlist updateMany
   */
  export type WishlistUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Wishlists.
     */
    data: XOR<WishlistUpdateManyMutationInput, WishlistUncheckedUpdateManyInput>
    /**
     * Filter which Wishlists to update
     */
    where?: WishlistWhereInput
  }

  /**
   * Wishlist upsert
   */
  export type WishlistUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wishlist
     */
    select?: WishlistSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WishlistInclude<ExtArgs> | null
    /**
     * The filter to search for the Wishlist to update in case it exists.
     */
    where: WishlistWhereUniqueInput
    /**
     * In case the Wishlist found by the `where` argument doesn't exist, create a new Wishlist with this data.
     */
    create: XOR<WishlistCreateInput, WishlistUncheckedCreateInput>
    /**
     * In case the Wishlist was found with the provided `where` argument, update it with this data.
     */
    update: XOR<WishlistUpdateInput, WishlistUncheckedUpdateInput>
  }

  /**
   * Wishlist delete
   */
  export type WishlistDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wishlist
     */
    select?: WishlistSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WishlistInclude<ExtArgs> | null
    /**
     * Filter which Wishlist to delete.
     */
    where: WishlistWhereUniqueInput
  }

  /**
   * Wishlist deleteMany
   */
  export type WishlistDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Wishlists to delete
     */
    where?: WishlistWhereInput
  }

  /**
   * Wishlist without action
   */
  export type WishlistDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Wishlist
     */
    select?: WishlistSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: WishlistInclude<ExtArgs> | null
  }


  /**
   * Model Banner
   */

  export type AggregateBanner = {
    _count: BannerCountAggregateOutputType | null
    _avg: BannerAvgAggregateOutputType | null
    _sum: BannerSumAggregateOutputType | null
    _min: BannerMinAggregateOutputType | null
    _max: BannerMaxAggregateOutputType | null
  }

  export type BannerAvgAggregateOutputType = {
    sequence_no: number | null
  }

  export type BannerSumAggregateOutputType = {
    sequence_no: number | null
  }

  export type BannerMinAggregateOutputType = {
    id: string | null
    title: string | null
    subtitle: string | null
    image: string | null
    link: string | null
    type: string | null
    sequence_no: number | null
    is_active: boolean | null
    start_date: Date | null
    end_date: Date | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type BannerMaxAggregateOutputType = {
    id: string | null
    title: string | null
    subtitle: string | null
    image: string | null
    link: string | null
    type: string | null
    sequence_no: number | null
    is_active: boolean | null
    start_date: Date | null
    end_date: Date | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type BannerCountAggregateOutputType = {
    id: number
    title: number
    subtitle: number
    image: number
    link: number
    type: number
    sequence_no: number
    is_active: number
    start_date: number
    end_date: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type BannerAvgAggregateInputType = {
    sequence_no?: true
  }

  export type BannerSumAggregateInputType = {
    sequence_no?: true
  }

  export type BannerMinAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    image?: true
    link?: true
    type?: true
    sequence_no?: true
    is_active?: true
    start_date?: true
    end_date?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type BannerMaxAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    image?: true
    link?: true
    type?: true
    sequence_no?: true
    is_active?: true
    start_date?: true
    end_date?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type BannerCountAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    image?: true
    link?: true
    type?: true
    sequence_no?: true
    is_active?: true
    start_date?: true
    end_date?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type BannerAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Banner to aggregate.
     */
    where?: BannerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Banners to fetch.
     */
    orderBy?: BannerOrderByWithRelationInput | BannerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: BannerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Banners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Banners.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Banners
    **/
    _count?: true | BannerCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: BannerAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: BannerSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: BannerMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: BannerMaxAggregateInputType
  }

  export type GetBannerAggregateType<T extends BannerAggregateArgs> = {
        [P in keyof T & keyof AggregateBanner]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBanner[P]>
      : GetScalarType<T[P], AggregateBanner[P]>
  }




  export type BannerGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: BannerWhereInput
    orderBy?: BannerOrderByWithAggregationInput | BannerOrderByWithAggregationInput[]
    by: BannerScalarFieldEnum[] | BannerScalarFieldEnum
    having?: BannerScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: BannerCountAggregateInputType | true
    _avg?: BannerAvgAggregateInputType
    _sum?: BannerSumAggregateInputType
    _min?: BannerMinAggregateInputType
    _max?: BannerMaxAggregateInputType
  }

  export type BannerGroupByOutputType = {
    id: string
    title: string | null
    subtitle: string | null
    image: string
    link: string | null
    type: string
    sequence_no: number
    is_active: boolean
    start_date: Date | null
    end_date: Date | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: BannerCountAggregateOutputType | null
    _avg: BannerAvgAggregateOutputType | null
    _sum: BannerSumAggregateOutputType | null
    _min: BannerMinAggregateOutputType | null
    _max: BannerMaxAggregateOutputType | null
  }

  type GetBannerGroupByPayload<T extends BannerGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<BannerGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof BannerGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], BannerGroupByOutputType[P]>
            : GetScalarType<T[P], BannerGroupByOutputType[P]>
        }
      >
    >


  export type BannerSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    subtitle?: boolean
    image?: boolean
    link?: boolean
    type?: boolean
    sequence_no?: boolean
    is_active?: boolean
    start_date?: boolean
    end_date?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }, ExtArgs["result"]["banner"]>


  export type BannerSelectScalar = {
    id?: boolean
    title?: boolean
    subtitle?: boolean
    image?: boolean
    link?: boolean
    type?: boolean
    sequence_no?: boolean
    is_active?: boolean
    start_date?: boolean
    end_date?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }


  export type $BannerPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Banner"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string | null
      subtitle: string | null
      image: string
      link: string | null
      type: string
      sequence_no: number
      is_active: boolean
      start_date: Date | null
      end_date: Date | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["banner"]>
    composites: {}
  }

  type BannerGetPayload<S extends boolean | null | undefined | BannerDefaultArgs> = $Result.GetResult<Prisma.$BannerPayload, S>

  type BannerCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<BannerFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: BannerCountAggregateInputType | true
    }

  export interface BannerDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Banner'], meta: { name: 'Banner' } }
    /**
     * Find zero or one Banner that matches the filter.
     * @param {BannerFindUniqueArgs} args - Arguments to find a Banner
     * @example
     * // Get one Banner
     * const banner = await prisma.banner.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends BannerFindUniqueArgs>(args: SelectSubset<T, BannerFindUniqueArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Banner that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {BannerFindUniqueOrThrowArgs} args - Arguments to find a Banner
     * @example
     * // Get one Banner
     * const banner = await prisma.banner.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends BannerFindUniqueOrThrowArgs>(args: SelectSubset<T, BannerFindUniqueOrThrowArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Banner that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerFindFirstArgs} args - Arguments to find a Banner
     * @example
     * // Get one Banner
     * const banner = await prisma.banner.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends BannerFindFirstArgs>(args?: SelectSubset<T, BannerFindFirstArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Banner that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerFindFirstOrThrowArgs} args - Arguments to find a Banner
     * @example
     * // Get one Banner
     * const banner = await prisma.banner.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends BannerFindFirstOrThrowArgs>(args?: SelectSubset<T, BannerFindFirstOrThrowArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Banners that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Banners
     * const banners = await prisma.banner.findMany()
     * 
     * // Get first 10 Banners
     * const banners = await prisma.banner.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const bannerWithIdOnly = await prisma.banner.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends BannerFindManyArgs>(args?: SelectSubset<T, BannerFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Banner.
     * @param {BannerCreateArgs} args - Arguments to create a Banner.
     * @example
     * // Create one Banner
     * const Banner = await prisma.banner.create({
     *   data: {
     *     // ... data to create a Banner
     *   }
     * })
     * 
     */
    create<T extends BannerCreateArgs>(args: SelectSubset<T, BannerCreateArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Banners.
     * @param {BannerCreateManyArgs} args - Arguments to create many Banners.
     * @example
     * // Create many Banners
     * const banner = await prisma.banner.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends BannerCreateManyArgs>(args?: SelectSubset<T, BannerCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Banner.
     * @param {BannerDeleteArgs} args - Arguments to delete one Banner.
     * @example
     * // Delete one Banner
     * const Banner = await prisma.banner.delete({
     *   where: {
     *     // ... filter to delete one Banner
     *   }
     * })
     * 
     */
    delete<T extends BannerDeleteArgs>(args: SelectSubset<T, BannerDeleteArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Banner.
     * @param {BannerUpdateArgs} args - Arguments to update one Banner.
     * @example
     * // Update one Banner
     * const banner = await prisma.banner.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends BannerUpdateArgs>(args: SelectSubset<T, BannerUpdateArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Banners.
     * @param {BannerDeleteManyArgs} args - Arguments to filter Banners to delete.
     * @example
     * // Delete a few Banners
     * const { count } = await prisma.banner.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends BannerDeleteManyArgs>(args?: SelectSubset<T, BannerDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Banners.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Banners
     * const banner = await prisma.banner.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends BannerUpdateManyArgs>(args: SelectSubset<T, BannerUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Banner.
     * @param {BannerUpsertArgs} args - Arguments to update or create a Banner.
     * @example
     * // Update or create a Banner
     * const banner = await prisma.banner.upsert({
     *   create: {
     *     // ... data to create a Banner
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Banner we want to update
     *   }
     * })
     */
    upsert<T extends BannerUpsertArgs>(args: SelectSubset<T, BannerUpsertArgs<ExtArgs>>): Prisma__BannerClient<$Result.GetResult<Prisma.$BannerPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Banners.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerCountArgs} args - Arguments to filter Banners to count.
     * @example
     * // Count the number of Banners
     * const count = await prisma.banner.count({
     *   where: {
     *     // ... the filter for the Banners we want to count
     *   }
     * })
    **/
    count<T extends BannerCountArgs>(
      args?: Subset<T, BannerCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], BannerCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Banner.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends BannerAggregateArgs>(args: Subset<T, BannerAggregateArgs>): Prisma.PrismaPromise<GetBannerAggregateType<T>>

    /**
     * Group by Banner.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {BannerGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends BannerGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: BannerGroupByArgs['orderBy'] }
        : { orderBy?: BannerGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, BannerGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBannerGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Banner model
   */
  readonly fields: BannerFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Banner.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__BannerClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Banner model
   */ 
  interface BannerFieldRefs {
    readonly id: FieldRef<"Banner", 'String'>
    readonly title: FieldRef<"Banner", 'String'>
    readonly subtitle: FieldRef<"Banner", 'String'>
    readonly image: FieldRef<"Banner", 'String'>
    readonly link: FieldRef<"Banner", 'String'>
    readonly type: FieldRef<"Banner", 'String'>
    readonly sequence_no: FieldRef<"Banner", 'Int'>
    readonly is_active: FieldRef<"Banner", 'Boolean'>
    readonly start_date: FieldRef<"Banner", 'DateTime'>
    readonly end_date: FieldRef<"Banner", 'DateTime'>
    readonly created_at: FieldRef<"Banner", 'DateTime'>
    readonly created_by: FieldRef<"Banner", 'String'>
    readonly created_ip: FieldRef<"Banner", 'String'>
    readonly updated_at: FieldRef<"Banner", 'DateTime'>
    readonly updated_by: FieldRef<"Banner", 'String'>
    readonly updated_ip: FieldRef<"Banner", 'String'>
    readonly company_id: FieldRef<"Banner", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Banner findUnique
   */
  export type BannerFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Filter, which Banner to fetch.
     */
    where: BannerWhereUniqueInput
  }

  /**
   * Banner findUniqueOrThrow
   */
  export type BannerFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Filter, which Banner to fetch.
     */
    where: BannerWhereUniqueInput
  }

  /**
   * Banner findFirst
   */
  export type BannerFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Filter, which Banner to fetch.
     */
    where?: BannerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Banners to fetch.
     */
    orderBy?: BannerOrderByWithRelationInput | BannerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Banners.
     */
    cursor?: BannerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Banners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Banners.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Banners.
     */
    distinct?: BannerScalarFieldEnum | BannerScalarFieldEnum[]
  }

  /**
   * Banner findFirstOrThrow
   */
  export type BannerFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Filter, which Banner to fetch.
     */
    where?: BannerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Banners to fetch.
     */
    orderBy?: BannerOrderByWithRelationInput | BannerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Banners.
     */
    cursor?: BannerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Banners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Banners.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Banners.
     */
    distinct?: BannerScalarFieldEnum | BannerScalarFieldEnum[]
  }

  /**
   * Banner findMany
   */
  export type BannerFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Filter, which Banners to fetch.
     */
    where?: BannerWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Banners to fetch.
     */
    orderBy?: BannerOrderByWithRelationInput | BannerOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Banners.
     */
    cursor?: BannerWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Banners from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Banners.
     */
    skip?: number
    distinct?: BannerScalarFieldEnum | BannerScalarFieldEnum[]
  }

  /**
   * Banner create
   */
  export type BannerCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * The data needed to create a Banner.
     */
    data: XOR<BannerCreateInput, BannerUncheckedCreateInput>
  }

  /**
   * Banner createMany
   */
  export type BannerCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Banners.
     */
    data: BannerCreateManyInput | BannerCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Banner update
   */
  export type BannerUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * The data needed to update a Banner.
     */
    data: XOR<BannerUpdateInput, BannerUncheckedUpdateInput>
    /**
     * Choose, which Banner to update.
     */
    where: BannerWhereUniqueInput
  }

  /**
   * Banner updateMany
   */
  export type BannerUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Banners.
     */
    data: XOR<BannerUpdateManyMutationInput, BannerUncheckedUpdateManyInput>
    /**
     * Filter which Banners to update
     */
    where?: BannerWhereInput
  }

  /**
   * Banner upsert
   */
  export type BannerUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * The filter to search for the Banner to update in case it exists.
     */
    where: BannerWhereUniqueInput
    /**
     * In case the Banner found by the `where` argument doesn't exist, create a new Banner with this data.
     */
    create: XOR<BannerCreateInput, BannerUncheckedCreateInput>
    /**
     * In case the Banner was found with the provided `where` argument, update it with this data.
     */
    update: XOR<BannerUpdateInput, BannerUncheckedUpdateInput>
  }

  /**
   * Banner delete
   */
  export type BannerDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
    /**
     * Filter which Banner to delete.
     */
    where: BannerWhereUniqueInput
  }

  /**
   * Banner deleteMany
   */
  export type BannerDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Banners to delete
     */
    where?: BannerWhereInput
  }

  /**
   * Banner without action
   */
  export type BannerDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Banner
     */
    select?: BannerSelect<ExtArgs> | null
  }


  /**
   * Model SpecialOffer
   */

  export type AggregateSpecialOffer = {
    _count: SpecialOfferCountAggregateOutputType | null
    _avg: SpecialOfferAvgAggregateOutputType | null
    _sum: SpecialOfferSumAggregateOutputType | null
    _min: SpecialOfferMinAggregateOutputType | null
    _max: SpecialOfferMaxAggregateOutputType | null
  }

  export type SpecialOfferAvgAggregateOutputType = {
    discount: Decimal | null
  }

  export type SpecialOfferSumAggregateOutputType = {
    discount: Decimal | null
  }

  export type SpecialOfferMinAggregateOutputType = {
    id: string | null
    title: string | null
    subtitle: string | null
    discount: Decimal | null
    start_date: Date | null
    end_date: Date | null
    is_active: boolean | null
    image: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SpecialOfferMaxAggregateOutputType = {
    id: string | null
    title: string | null
    subtitle: string | null
    discount: Decimal | null
    start_date: Date | null
    end_date: Date | null
    is_active: boolean | null
    image: string | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type SpecialOfferCountAggregateOutputType = {
    id: number
    title: number
    subtitle: number
    discount: number
    start_date: number
    end_date: number
    is_active: number
    image: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type SpecialOfferAvgAggregateInputType = {
    discount?: true
  }

  export type SpecialOfferSumAggregateInputType = {
    discount?: true
  }

  export type SpecialOfferMinAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    discount?: true
    start_date?: true
    end_date?: true
    is_active?: true
    image?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SpecialOfferMaxAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    discount?: true
    start_date?: true
    end_date?: true
    is_active?: true
    image?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type SpecialOfferCountAggregateInputType = {
    id?: true
    title?: true
    subtitle?: true
    discount?: true
    start_date?: true
    end_date?: true
    is_active?: true
    image?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type SpecialOfferAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SpecialOffer to aggregate.
     */
    where?: SpecialOfferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SpecialOffers to fetch.
     */
    orderBy?: SpecialOfferOrderByWithRelationInput | SpecialOfferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: SpecialOfferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SpecialOffers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SpecialOffers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned SpecialOffers
    **/
    _count?: true | SpecialOfferCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: SpecialOfferAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: SpecialOfferSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: SpecialOfferMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: SpecialOfferMaxAggregateInputType
  }

  export type GetSpecialOfferAggregateType<T extends SpecialOfferAggregateArgs> = {
        [P in keyof T & keyof AggregateSpecialOffer]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateSpecialOffer[P]>
      : GetScalarType<T[P], AggregateSpecialOffer[P]>
  }




  export type SpecialOfferGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: SpecialOfferWhereInput
    orderBy?: SpecialOfferOrderByWithAggregationInput | SpecialOfferOrderByWithAggregationInput[]
    by: SpecialOfferScalarFieldEnum[] | SpecialOfferScalarFieldEnum
    having?: SpecialOfferScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: SpecialOfferCountAggregateInputType | true
    _avg?: SpecialOfferAvgAggregateInputType
    _sum?: SpecialOfferSumAggregateInputType
    _min?: SpecialOfferMinAggregateInputType
    _max?: SpecialOfferMaxAggregateInputType
  }

  export type SpecialOfferGroupByOutputType = {
    id: string
    title: string
    subtitle: string | null
    discount: Decimal
    start_date: Date
    end_date: Date
    is_active: boolean
    image: string | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: SpecialOfferCountAggregateOutputType | null
    _avg: SpecialOfferAvgAggregateOutputType | null
    _sum: SpecialOfferSumAggregateOutputType | null
    _min: SpecialOfferMinAggregateOutputType | null
    _max: SpecialOfferMaxAggregateOutputType | null
  }

  type GetSpecialOfferGroupByPayload<T extends SpecialOfferGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<SpecialOfferGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof SpecialOfferGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], SpecialOfferGroupByOutputType[P]>
            : GetScalarType<T[P], SpecialOfferGroupByOutputType[P]>
        }
      >
    >


  export type SpecialOfferSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    subtitle?: boolean
    discount?: boolean
    start_date?: boolean
    end_date?: boolean
    is_active?: boolean
    image?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    products?: boolean | SpecialOffer$productsArgs<ExtArgs>
    _count?: boolean | SpecialOfferCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["specialOffer"]>


  export type SpecialOfferSelectScalar = {
    id?: boolean
    title?: boolean
    subtitle?: boolean
    discount?: boolean
    start_date?: boolean
    end_date?: boolean
    is_active?: boolean
    image?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type SpecialOfferInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    products?: boolean | SpecialOffer$productsArgs<ExtArgs>
    _count?: boolean | SpecialOfferCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $SpecialOfferPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "SpecialOffer"
    objects: {
      products: Prisma.$ProductPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      subtitle: string | null
      discount: Prisma.Decimal
      start_date: Date
      end_date: Date
      is_active: boolean
      image: string | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["specialOffer"]>
    composites: {}
  }

  type SpecialOfferGetPayload<S extends boolean | null | undefined | SpecialOfferDefaultArgs> = $Result.GetResult<Prisma.$SpecialOfferPayload, S>

  type SpecialOfferCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<SpecialOfferFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: SpecialOfferCountAggregateInputType | true
    }

  export interface SpecialOfferDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['SpecialOffer'], meta: { name: 'SpecialOffer' } }
    /**
     * Find zero or one SpecialOffer that matches the filter.
     * @param {SpecialOfferFindUniqueArgs} args - Arguments to find a SpecialOffer
     * @example
     * // Get one SpecialOffer
     * const specialOffer = await prisma.specialOffer.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends SpecialOfferFindUniqueArgs>(args: SelectSubset<T, SpecialOfferFindUniqueArgs<ExtArgs>>): Prisma__SpecialOfferClient<$Result.GetResult<Prisma.$SpecialOfferPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one SpecialOffer that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {SpecialOfferFindUniqueOrThrowArgs} args - Arguments to find a SpecialOffer
     * @example
     * // Get one SpecialOffer
     * const specialOffer = await prisma.specialOffer.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends SpecialOfferFindUniqueOrThrowArgs>(args: SelectSubset<T, SpecialOfferFindUniqueOrThrowArgs<ExtArgs>>): Prisma__SpecialOfferClient<$Result.GetResult<Prisma.$SpecialOfferPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first SpecialOffer that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialOfferFindFirstArgs} args - Arguments to find a SpecialOffer
     * @example
     * // Get one SpecialOffer
     * const specialOffer = await prisma.specialOffer.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends SpecialOfferFindFirstArgs>(args?: SelectSubset<T, SpecialOfferFindFirstArgs<ExtArgs>>): Prisma__SpecialOfferClient<$Result.GetResult<Prisma.$SpecialOfferPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first SpecialOffer that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialOfferFindFirstOrThrowArgs} args - Arguments to find a SpecialOffer
     * @example
     * // Get one SpecialOffer
     * const specialOffer = await prisma.specialOffer.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends SpecialOfferFindFirstOrThrowArgs>(args?: SelectSubset<T, SpecialOfferFindFirstOrThrowArgs<ExtArgs>>): Prisma__SpecialOfferClient<$Result.GetResult<Prisma.$SpecialOfferPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more SpecialOffers that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialOfferFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all SpecialOffers
     * const specialOffers = await prisma.specialOffer.findMany()
     * 
     * // Get first 10 SpecialOffers
     * const specialOffers = await prisma.specialOffer.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const specialOfferWithIdOnly = await prisma.specialOffer.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends SpecialOfferFindManyArgs>(args?: SelectSubset<T, SpecialOfferFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$SpecialOfferPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a SpecialOffer.
     * @param {SpecialOfferCreateArgs} args - Arguments to create a SpecialOffer.
     * @example
     * // Create one SpecialOffer
     * const SpecialOffer = await prisma.specialOffer.create({
     *   data: {
     *     // ... data to create a SpecialOffer
     *   }
     * })
     * 
     */
    create<T extends SpecialOfferCreateArgs>(args: SelectSubset<T, SpecialOfferCreateArgs<ExtArgs>>): Prisma__SpecialOfferClient<$Result.GetResult<Prisma.$SpecialOfferPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many SpecialOffers.
     * @param {SpecialOfferCreateManyArgs} args - Arguments to create many SpecialOffers.
     * @example
     * // Create many SpecialOffers
     * const specialOffer = await prisma.specialOffer.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends SpecialOfferCreateManyArgs>(args?: SelectSubset<T, SpecialOfferCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a SpecialOffer.
     * @param {SpecialOfferDeleteArgs} args - Arguments to delete one SpecialOffer.
     * @example
     * // Delete one SpecialOffer
     * const SpecialOffer = await prisma.specialOffer.delete({
     *   where: {
     *     // ... filter to delete one SpecialOffer
     *   }
     * })
     * 
     */
    delete<T extends SpecialOfferDeleteArgs>(args: SelectSubset<T, SpecialOfferDeleteArgs<ExtArgs>>): Prisma__SpecialOfferClient<$Result.GetResult<Prisma.$SpecialOfferPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one SpecialOffer.
     * @param {SpecialOfferUpdateArgs} args - Arguments to update one SpecialOffer.
     * @example
     * // Update one SpecialOffer
     * const specialOffer = await prisma.specialOffer.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends SpecialOfferUpdateArgs>(args: SelectSubset<T, SpecialOfferUpdateArgs<ExtArgs>>): Prisma__SpecialOfferClient<$Result.GetResult<Prisma.$SpecialOfferPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more SpecialOffers.
     * @param {SpecialOfferDeleteManyArgs} args - Arguments to filter SpecialOffers to delete.
     * @example
     * // Delete a few SpecialOffers
     * const { count } = await prisma.specialOffer.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends SpecialOfferDeleteManyArgs>(args?: SelectSubset<T, SpecialOfferDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more SpecialOffers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialOfferUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many SpecialOffers
     * const specialOffer = await prisma.specialOffer.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends SpecialOfferUpdateManyArgs>(args: SelectSubset<T, SpecialOfferUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one SpecialOffer.
     * @param {SpecialOfferUpsertArgs} args - Arguments to update or create a SpecialOffer.
     * @example
     * // Update or create a SpecialOffer
     * const specialOffer = await prisma.specialOffer.upsert({
     *   create: {
     *     // ... data to create a SpecialOffer
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the SpecialOffer we want to update
     *   }
     * })
     */
    upsert<T extends SpecialOfferUpsertArgs>(args: SelectSubset<T, SpecialOfferUpsertArgs<ExtArgs>>): Prisma__SpecialOfferClient<$Result.GetResult<Prisma.$SpecialOfferPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of SpecialOffers.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialOfferCountArgs} args - Arguments to filter SpecialOffers to count.
     * @example
     * // Count the number of SpecialOffers
     * const count = await prisma.specialOffer.count({
     *   where: {
     *     // ... the filter for the SpecialOffers we want to count
     *   }
     * })
    **/
    count<T extends SpecialOfferCountArgs>(
      args?: Subset<T, SpecialOfferCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], SpecialOfferCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a SpecialOffer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialOfferAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends SpecialOfferAggregateArgs>(args: Subset<T, SpecialOfferAggregateArgs>): Prisma.PrismaPromise<GetSpecialOfferAggregateType<T>>

    /**
     * Group by SpecialOffer.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {SpecialOfferGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends SpecialOfferGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: SpecialOfferGroupByArgs['orderBy'] }
        : { orderBy?: SpecialOfferGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, SpecialOfferGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetSpecialOfferGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the SpecialOffer model
   */
  readonly fields: SpecialOfferFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for SpecialOffer.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__SpecialOfferClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    products<T extends SpecialOffer$productsArgs<ExtArgs> = {}>(args?: Subset<T, SpecialOffer$productsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ProductPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the SpecialOffer model
   */ 
  interface SpecialOfferFieldRefs {
    readonly id: FieldRef<"SpecialOffer", 'String'>
    readonly title: FieldRef<"SpecialOffer", 'String'>
    readonly subtitle: FieldRef<"SpecialOffer", 'String'>
    readonly discount: FieldRef<"SpecialOffer", 'Decimal'>
    readonly start_date: FieldRef<"SpecialOffer", 'DateTime'>
    readonly end_date: FieldRef<"SpecialOffer", 'DateTime'>
    readonly is_active: FieldRef<"SpecialOffer", 'Boolean'>
    readonly image: FieldRef<"SpecialOffer", 'String'>
    readonly created_at: FieldRef<"SpecialOffer", 'DateTime'>
    readonly created_by: FieldRef<"SpecialOffer", 'String'>
    readonly created_ip: FieldRef<"SpecialOffer", 'String'>
    readonly updated_at: FieldRef<"SpecialOffer", 'DateTime'>
    readonly updated_by: FieldRef<"SpecialOffer", 'String'>
    readonly updated_ip: FieldRef<"SpecialOffer", 'String'>
    readonly company_id: FieldRef<"SpecialOffer", 'String'>
  }
    

  // Custom InputTypes
  /**
   * SpecialOffer findUnique
   */
  export type SpecialOfferFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialOffer
     */
    select?: SpecialOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialOfferInclude<ExtArgs> | null
    /**
     * Filter, which SpecialOffer to fetch.
     */
    where: SpecialOfferWhereUniqueInput
  }

  /**
   * SpecialOffer findUniqueOrThrow
   */
  export type SpecialOfferFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialOffer
     */
    select?: SpecialOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialOfferInclude<ExtArgs> | null
    /**
     * Filter, which SpecialOffer to fetch.
     */
    where: SpecialOfferWhereUniqueInput
  }

  /**
   * SpecialOffer findFirst
   */
  export type SpecialOfferFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialOffer
     */
    select?: SpecialOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialOfferInclude<ExtArgs> | null
    /**
     * Filter, which SpecialOffer to fetch.
     */
    where?: SpecialOfferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SpecialOffers to fetch.
     */
    orderBy?: SpecialOfferOrderByWithRelationInput | SpecialOfferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SpecialOffers.
     */
    cursor?: SpecialOfferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SpecialOffers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SpecialOffers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SpecialOffers.
     */
    distinct?: SpecialOfferScalarFieldEnum | SpecialOfferScalarFieldEnum[]
  }

  /**
   * SpecialOffer findFirstOrThrow
   */
  export type SpecialOfferFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialOffer
     */
    select?: SpecialOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialOfferInclude<ExtArgs> | null
    /**
     * Filter, which SpecialOffer to fetch.
     */
    where?: SpecialOfferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SpecialOffers to fetch.
     */
    orderBy?: SpecialOfferOrderByWithRelationInput | SpecialOfferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for SpecialOffers.
     */
    cursor?: SpecialOfferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SpecialOffers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SpecialOffers.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of SpecialOffers.
     */
    distinct?: SpecialOfferScalarFieldEnum | SpecialOfferScalarFieldEnum[]
  }

  /**
   * SpecialOffer findMany
   */
  export type SpecialOfferFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialOffer
     */
    select?: SpecialOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialOfferInclude<ExtArgs> | null
    /**
     * Filter, which SpecialOffers to fetch.
     */
    where?: SpecialOfferWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of SpecialOffers to fetch.
     */
    orderBy?: SpecialOfferOrderByWithRelationInput | SpecialOfferOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing SpecialOffers.
     */
    cursor?: SpecialOfferWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` SpecialOffers from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` SpecialOffers.
     */
    skip?: number
    distinct?: SpecialOfferScalarFieldEnum | SpecialOfferScalarFieldEnum[]
  }

  /**
   * SpecialOffer create
   */
  export type SpecialOfferCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialOffer
     */
    select?: SpecialOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialOfferInclude<ExtArgs> | null
    /**
     * The data needed to create a SpecialOffer.
     */
    data: XOR<SpecialOfferCreateInput, SpecialOfferUncheckedCreateInput>
  }

  /**
   * SpecialOffer createMany
   */
  export type SpecialOfferCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many SpecialOffers.
     */
    data: SpecialOfferCreateManyInput | SpecialOfferCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * SpecialOffer update
   */
  export type SpecialOfferUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialOffer
     */
    select?: SpecialOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialOfferInclude<ExtArgs> | null
    /**
     * The data needed to update a SpecialOffer.
     */
    data: XOR<SpecialOfferUpdateInput, SpecialOfferUncheckedUpdateInput>
    /**
     * Choose, which SpecialOffer to update.
     */
    where: SpecialOfferWhereUniqueInput
  }

  /**
   * SpecialOffer updateMany
   */
  export type SpecialOfferUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update SpecialOffers.
     */
    data: XOR<SpecialOfferUpdateManyMutationInput, SpecialOfferUncheckedUpdateManyInput>
    /**
     * Filter which SpecialOffers to update
     */
    where?: SpecialOfferWhereInput
  }

  /**
   * SpecialOffer upsert
   */
  export type SpecialOfferUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialOffer
     */
    select?: SpecialOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialOfferInclude<ExtArgs> | null
    /**
     * The filter to search for the SpecialOffer to update in case it exists.
     */
    where: SpecialOfferWhereUniqueInput
    /**
     * In case the SpecialOffer found by the `where` argument doesn't exist, create a new SpecialOffer with this data.
     */
    create: XOR<SpecialOfferCreateInput, SpecialOfferUncheckedCreateInput>
    /**
     * In case the SpecialOffer was found with the provided `where` argument, update it with this data.
     */
    update: XOR<SpecialOfferUpdateInput, SpecialOfferUncheckedUpdateInput>
  }

  /**
   * SpecialOffer delete
   */
  export type SpecialOfferDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialOffer
     */
    select?: SpecialOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialOfferInclude<ExtArgs> | null
    /**
     * Filter which SpecialOffer to delete.
     */
    where: SpecialOfferWhereUniqueInput
  }

  /**
   * SpecialOffer deleteMany
   */
  export type SpecialOfferDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which SpecialOffers to delete
     */
    where?: SpecialOfferWhereInput
  }

  /**
   * SpecialOffer.products
   */
  export type SpecialOffer$productsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product
     */
    select?: ProductSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: ProductInclude<ExtArgs> | null
    where?: ProductWhereInput
    orderBy?: ProductOrderByWithRelationInput | ProductOrderByWithRelationInput[]
    cursor?: ProductWhereUniqueInput
    take?: number
    skip?: number
    distinct?: ProductScalarFieldEnum | ProductScalarFieldEnum[]
  }

  /**
   * SpecialOffer without action
   */
  export type SpecialOfferDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the SpecialOffer
     */
    select?: SpecialOfferSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: SpecialOfferInclude<ExtArgs> | null
  }


  /**
   * Model Coupon
   */

  export type AggregateCoupon = {
    _count: CouponCountAggregateOutputType | null
    _avg: CouponAvgAggregateOutputType | null
    _sum: CouponSumAggregateOutputType | null
    _min: CouponMinAggregateOutputType | null
    _max: CouponMaxAggregateOutputType | null
  }

  export type CouponAvgAggregateOutputType = {
    discount_amount: Decimal | null
    minimum_purchase: Decimal | null
    maximum_discount: Decimal | null
    usage_limit: number | null
    used_count: number | null
  }

  export type CouponSumAggregateOutputType = {
    discount_amount: Decimal | null
    minimum_purchase: Decimal | null
    maximum_discount: Decimal | null
    usage_limit: number | null
    used_count: number | null
  }

  export type CouponMinAggregateOutputType = {
    id: string | null
    code: string | null
    description: string | null
    discount_type: string | null
    discount_amount: Decimal | null
    minimum_purchase: Decimal | null
    maximum_discount: Decimal | null
    start_date: Date | null
    end_date: Date | null
    usage_limit: number | null
    used_count: number | null
    is_active: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type CouponMaxAggregateOutputType = {
    id: string | null
    code: string | null
    description: string | null
    discount_type: string | null
    discount_amount: Decimal | null
    minimum_purchase: Decimal | null
    maximum_discount: Decimal | null
    start_date: Date | null
    end_date: Date | null
    usage_limit: number | null
    used_count: number | null
    is_active: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type CouponCountAggregateOutputType = {
    id: number
    code: number
    description: number
    discount_type: number
    discount_amount: number
    minimum_purchase: number
    maximum_discount: number
    start_date: number
    end_date: number
    usage_limit: number
    used_count: number
    is_active: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type CouponAvgAggregateInputType = {
    discount_amount?: true
    minimum_purchase?: true
    maximum_discount?: true
    usage_limit?: true
    used_count?: true
  }

  export type CouponSumAggregateInputType = {
    discount_amount?: true
    minimum_purchase?: true
    maximum_discount?: true
    usage_limit?: true
    used_count?: true
  }

  export type CouponMinAggregateInputType = {
    id?: true
    code?: true
    description?: true
    discount_type?: true
    discount_amount?: true
    minimum_purchase?: true
    maximum_discount?: true
    start_date?: true
    end_date?: true
    usage_limit?: true
    used_count?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type CouponMaxAggregateInputType = {
    id?: true
    code?: true
    description?: true
    discount_type?: true
    discount_amount?: true
    minimum_purchase?: true
    maximum_discount?: true
    start_date?: true
    end_date?: true
    usage_limit?: true
    used_count?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type CouponCountAggregateInputType = {
    id?: true
    code?: true
    description?: true
    discount_type?: true
    discount_amount?: true
    minimum_purchase?: true
    maximum_discount?: true
    start_date?: true
    end_date?: true
    usage_limit?: true
    used_count?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type CouponAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Coupon to aggregate.
     */
    where?: CouponWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Coupons to fetch.
     */
    orderBy?: CouponOrderByWithRelationInput | CouponOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: CouponWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Coupons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Coupons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Coupons
    **/
    _count?: true | CouponCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CouponAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CouponSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CouponMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CouponMaxAggregateInputType
  }

  export type GetCouponAggregateType<T extends CouponAggregateArgs> = {
        [P in keyof T & keyof AggregateCoupon]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCoupon[P]>
      : GetScalarType<T[P], AggregateCoupon[P]>
  }




  export type CouponGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: CouponWhereInput
    orderBy?: CouponOrderByWithAggregationInput | CouponOrderByWithAggregationInput[]
    by: CouponScalarFieldEnum[] | CouponScalarFieldEnum
    having?: CouponScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CouponCountAggregateInputType | true
    _avg?: CouponAvgAggregateInputType
    _sum?: CouponSumAggregateInputType
    _min?: CouponMinAggregateInputType
    _max?: CouponMaxAggregateInputType
  }

  export type CouponGroupByOutputType = {
    id: string
    code: string
    description: string | null
    discount_type: string
    discount_amount: Decimal
    minimum_purchase: Decimal | null
    maximum_discount: Decimal | null
    start_date: Date
    end_date: Date
    usage_limit: number | null
    used_count: number
    is_active: boolean
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: CouponCountAggregateOutputType | null
    _avg: CouponAvgAggregateOutputType | null
    _sum: CouponSumAggregateOutputType | null
    _min: CouponMinAggregateOutputType | null
    _max: CouponMaxAggregateOutputType | null
  }

  type GetCouponGroupByPayload<T extends CouponGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CouponGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CouponGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CouponGroupByOutputType[P]>
            : GetScalarType<T[P], CouponGroupByOutputType[P]>
        }
      >
    >


  export type CouponSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    code?: boolean
    description?: boolean
    discount_type?: boolean
    discount_amount?: boolean
    minimum_purchase?: boolean
    maximum_discount?: boolean
    start_date?: boolean
    end_date?: boolean
    usage_limit?: boolean
    used_count?: boolean
    is_active?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    Order?: boolean | Coupon$OrderArgs<ExtArgs>
    PendingOrder?: boolean | Coupon$PendingOrderArgs<ExtArgs>
    _count?: boolean | CouponCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["coupon"]>


  export type CouponSelectScalar = {
    id?: boolean
    code?: boolean
    description?: boolean
    discount_type?: boolean
    discount_amount?: boolean
    minimum_purchase?: boolean
    maximum_discount?: boolean
    start_date?: boolean
    end_date?: boolean
    usage_limit?: boolean
    used_count?: boolean
    is_active?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type CouponInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    Order?: boolean | Coupon$OrderArgs<ExtArgs>
    PendingOrder?: boolean | Coupon$PendingOrderArgs<ExtArgs>
    _count?: boolean | CouponCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $CouponPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Coupon"
    objects: {
      Order: Prisma.$OrderPayload<ExtArgs>[]
      PendingOrder: Prisma.$PendingOrderPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      code: string
      description: string | null
      discount_type: string
      discount_amount: Prisma.Decimal
      minimum_purchase: Prisma.Decimal | null
      maximum_discount: Prisma.Decimal | null
      start_date: Date
      end_date: Date
      usage_limit: number | null
      used_count: number
      is_active: boolean
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["coupon"]>
    composites: {}
  }

  type CouponGetPayload<S extends boolean | null | undefined | CouponDefaultArgs> = $Result.GetResult<Prisma.$CouponPayload, S>

  type CouponCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<CouponFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CouponCountAggregateInputType | true
    }

  export interface CouponDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Coupon'], meta: { name: 'Coupon' } }
    /**
     * Find zero or one Coupon that matches the filter.
     * @param {CouponFindUniqueArgs} args - Arguments to find a Coupon
     * @example
     * // Get one Coupon
     * const coupon = await prisma.coupon.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends CouponFindUniqueArgs>(args: SelectSubset<T, CouponFindUniqueArgs<ExtArgs>>): Prisma__CouponClient<$Result.GetResult<Prisma.$CouponPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Coupon that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {CouponFindUniqueOrThrowArgs} args - Arguments to find a Coupon
     * @example
     * // Get one Coupon
     * const coupon = await prisma.coupon.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends CouponFindUniqueOrThrowArgs>(args: SelectSubset<T, CouponFindUniqueOrThrowArgs<ExtArgs>>): Prisma__CouponClient<$Result.GetResult<Prisma.$CouponPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Coupon that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CouponFindFirstArgs} args - Arguments to find a Coupon
     * @example
     * // Get one Coupon
     * const coupon = await prisma.coupon.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends CouponFindFirstArgs>(args?: SelectSubset<T, CouponFindFirstArgs<ExtArgs>>): Prisma__CouponClient<$Result.GetResult<Prisma.$CouponPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Coupon that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CouponFindFirstOrThrowArgs} args - Arguments to find a Coupon
     * @example
     * // Get one Coupon
     * const coupon = await prisma.coupon.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends CouponFindFirstOrThrowArgs>(args?: SelectSubset<T, CouponFindFirstOrThrowArgs<ExtArgs>>): Prisma__CouponClient<$Result.GetResult<Prisma.$CouponPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Coupons that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CouponFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Coupons
     * const coupons = await prisma.coupon.findMany()
     * 
     * // Get first 10 Coupons
     * const coupons = await prisma.coupon.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const couponWithIdOnly = await prisma.coupon.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends CouponFindManyArgs>(args?: SelectSubset<T, CouponFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$CouponPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Coupon.
     * @param {CouponCreateArgs} args - Arguments to create a Coupon.
     * @example
     * // Create one Coupon
     * const Coupon = await prisma.coupon.create({
     *   data: {
     *     // ... data to create a Coupon
     *   }
     * })
     * 
     */
    create<T extends CouponCreateArgs>(args: SelectSubset<T, CouponCreateArgs<ExtArgs>>): Prisma__CouponClient<$Result.GetResult<Prisma.$CouponPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Coupons.
     * @param {CouponCreateManyArgs} args - Arguments to create many Coupons.
     * @example
     * // Create many Coupons
     * const coupon = await prisma.coupon.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends CouponCreateManyArgs>(args?: SelectSubset<T, CouponCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Coupon.
     * @param {CouponDeleteArgs} args - Arguments to delete one Coupon.
     * @example
     * // Delete one Coupon
     * const Coupon = await prisma.coupon.delete({
     *   where: {
     *     // ... filter to delete one Coupon
     *   }
     * })
     * 
     */
    delete<T extends CouponDeleteArgs>(args: SelectSubset<T, CouponDeleteArgs<ExtArgs>>): Prisma__CouponClient<$Result.GetResult<Prisma.$CouponPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Coupon.
     * @param {CouponUpdateArgs} args - Arguments to update one Coupon.
     * @example
     * // Update one Coupon
     * const coupon = await prisma.coupon.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends CouponUpdateArgs>(args: SelectSubset<T, CouponUpdateArgs<ExtArgs>>): Prisma__CouponClient<$Result.GetResult<Prisma.$CouponPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Coupons.
     * @param {CouponDeleteManyArgs} args - Arguments to filter Coupons to delete.
     * @example
     * // Delete a few Coupons
     * const { count } = await prisma.coupon.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends CouponDeleteManyArgs>(args?: SelectSubset<T, CouponDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Coupons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CouponUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Coupons
     * const coupon = await prisma.coupon.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends CouponUpdateManyArgs>(args: SelectSubset<T, CouponUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Coupon.
     * @param {CouponUpsertArgs} args - Arguments to update or create a Coupon.
     * @example
     * // Update or create a Coupon
     * const coupon = await prisma.coupon.upsert({
     *   create: {
     *     // ... data to create a Coupon
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Coupon we want to update
     *   }
     * })
     */
    upsert<T extends CouponUpsertArgs>(args: SelectSubset<T, CouponUpsertArgs<ExtArgs>>): Prisma__CouponClient<$Result.GetResult<Prisma.$CouponPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Coupons.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CouponCountArgs} args - Arguments to filter Coupons to count.
     * @example
     * // Count the number of Coupons
     * const count = await prisma.coupon.count({
     *   where: {
     *     // ... the filter for the Coupons we want to count
     *   }
     * })
    **/
    count<T extends CouponCountArgs>(
      args?: Subset<T, CouponCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CouponCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Coupon.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CouponAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CouponAggregateArgs>(args: Subset<T, CouponAggregateArgs>): Prisma.PrismaPromise<GetCouponAggregateType<T>>

    /**
     * Group by Coupon.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CouponGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends CouponGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: CouponGroupByArgs['orderBy'] }
        : { orderBy?: CouponGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, CouponGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCouponGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Coupon model
   */
  readonly fields: CouponFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Coupon.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__CouponClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    Order<T extends Coupon$OrderArgs<ExtArgs> = {}>(args?: Subset<T, Coupon$OrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$OrderPayload<ExtArgs>, T, "findMany"> | Null>
    PendingOrder<T extends Coupon$PendingOrderArgs<ExtArgs> = {}>(args?: Subset<T, Coupon$PendingOrderArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PendingOrderPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Coupon model
   */ 
  interface CouponFieldRefs {
    readonly id: FieldRef<"Coupon", 'String'>
    readonly code: FieldRef<"Coupon", 'String'>
    readonly description: FieldRef<"Coupon", 'String'>
    readonly discount_type: FieldRef<"Coupon", 'String'>
    readonly discount_amount: FieldRef<"Coupon", 'Decimal'>
    readonly minimum_purchase: FieldRef<"Coupon", 'Decimal'>
    readonly maximum_discount: FieldRef<"Coupon", 'Decimal'>
    readonly start_date: FieldRef<"Coupon", 'DateTime'>
    readonly end_date: FieldRef<"Coupon", 'DateTime'>
    readonly usage_limit: FieldRef<"Coupon", 'Int'>
    readonly used_count: FieldRef<"Coupon", 'Int'>
    readonly is_active: FieldRef<"Coupon", 'Boolean'>
    readonly created_at: FieldRef<"Coupon", 'DateTime'>
    readonly created_by: FieldRef<"Coupon", 'String'>
    readonly created_ip: FieldRef<"Coupon", 'String'>
    readonly updated_at: FieldRef<"Coupon", 'DateTime'>
    readonly updated_by: FieldRef<"Coupon", 'String'>
    readonly updated_ip: FieldRef<"Coupon", 'String'>
    readonly company_id: FieldRef<"Coupon", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Coupon findUnique
   */
  export type CouponFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Coupon
     */
    select?: CouponSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CouponInclude<ExtArgs> | null
    /**
     * Filter, which Coupon to fetch.
     */
    where: CouponWhereUniqueInput
  }

  /**
   * Coupon findUniqueOrThrow
   */
  export type CouponFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Coupon
     */
    select?: CouponSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CouponInclude<ExtArgs> | null
    /**
     * Filter, which Coupon to fetch.
     */
    where: CouponWhereUniqueInput
  }

  /**
   * Coupon findFirst
   */
  export type CouponFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Coupon
     */
    select?: CouponSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CouponInclude<ExtArgs> | null
    /**
     * Filter, which Coupon to fetch.
     */
    where?: CouponWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Coupons to fetch.
     */
    orderBy?: CouponOrderByWithRelationInput | CouponOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Coupons.
     */
    cursor?: CouponWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Coupons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Coupons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Coupons.
     */
    distinct?: CouponScalarFieldEnum | CouponScalarFieldEnum[]
  }

  /**
   * Coupon findFirstOrThrow
   */
  export type CouponFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Coupon
     */
    select?: CouponSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CouponInclude<ExtArgs> | null
    /**
     * Filter, which Coupon to fetch.
     */
    where?: CouponWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Coupons to fetch.
     */
    orderBy?: CouponOrderByWithRelationInput | CouponOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Coupons.
     */
    cursor?: CouponWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Coupons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Coupons.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Coupons.
     */
    distinct?: CouponScalarFieldEnum | CouponScalarFieldEnum[]
  }

  /**
   * Coupon findMany
   */
  export type CouponFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Coupon
     */
    select?: CouponSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CouponInclude<ExtArgs> | null
    /**
     * Filter, which Coupons to fetch.
     */
    where?: CouponWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Coupons to fetch.
     */
    orderBy?: CouponOrderByWithRelationInput | CouponOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Coupons.
     */
    cursor?: CouponWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Coupons from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Coupons.
     */
    skip?: number
    distinct?: CouponScalarFieldEnum | CouponScalarFieldEnum[]
  }

  /**
   * Coupon create
   */
  export type CouponCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Coupon
     */
    select?: CouponSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CouponInclude<ExtArgs> | null
    /**
     * The data needed to create a Coupon.
     */
    data: XOR<CouponCreateInput, CouponUncheckedCreateInput>
  }

  /**
   * Coupon createMany
   */
  export type CouponCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Coupons.
     */
    data: CouponCreateManyInput | CouponCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Coupon update
   */
  export type CouponUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Coupon
     */
    select?: CouponSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CouponInclude<ExtArgs> | null
    /**
     * The data needed to update a Coupon.
     */
    data: XOR<CouponUpdateInput, CouponUncheckedUpdateInput>
    /**
     * Choose, which Coupon to update.
     */
    where: CouponWhereUniqueInput
  }

  /**
   * Coupon updateMany
   */
  export type CouponUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Coupons.
     */
    data: XOR<CouponUpdateManyMutationInput, CouponUncheckedUpdateManyInput>
    /**
     * Filter which Coupons to update
     */
    where?: CouponWhereInput
  }

  /**
   * Coupon upsert
   */
  export type CouponUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Coupon
     */
    select?: CouponSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CouponInclude<ExtArgs> | null
    /**
     * The filter to search for the Coupon to update in case it exists.
     */
    where: CouponWhereUniqueInput
    /**
     * In case the Coupon found by the `where` argument doesn't exist, create a new Coupon with this data.
     */
    create: XOR<CouponCreateInput, CouponUncheckedCreateInput>
    /**
     * In case the Coupon was found with the provided `where` argument, update it with this data.
     */
    update: XOR<CouponUpdateInput, CouponUncheckedUpdateInput>
  }

  /**
   * Coupon delete
   */
  export type CouponDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Coupon
     */
    select?: CouponSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CouponInclude<ExtArgs> | null
    /**
     * Filter which Coupon to delete.
     */
    where: CouponWhereUniqueInput
  }

  /**
   * Coupon deleteMany
   */
  export type CouponDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Coupons to delete
     */
    where?: CouponWhereInput
  }

  /**
   * Coupon.Order
   */
  export type Coupon$OrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Order
     */
    select?: OrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: OrderInclude<ExtArgs> | null
    where?: OrderWhereInput
    orderBy?: OrderOrderByWithRelationInput | OrderOrderByWithRelationInput[]
    cursor?: OrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: OrderScalarFieldEnum | OrderScalarFieldEnum[]
  }

  /**
   * Coupon.PendingOrder
   */
  export type Coupon$PendingOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PendingOrder
     */
    select?: PendingOrderSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PendingOrderInclude<ExtArgs> | null
    where?: PendingOrderWhereInput
    orderBy?: PendingOrderOrderByWithRelationInput | PendingOrderOrderByWithRelationInput[]
    cursor?: PendingOrderWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PendingOrderScalarFieldEnum | PendingOrderScalarFieldEnum[]
  }

  /**
   * Coupon without action
   */
  export type CouponDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Coupon
     */
    select?: CouponSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: CouponInclude<ExtArgs> | null
  }


  /**
   * Model ShippingCharge
   */

  export type AggregateShippingCharge = {
    _count: ShippingChargeCountAggregateOutputType | null
    _avg: ShippingChargeAvgAggregateOutputType | null
    _sum: ShippingChargeSumAggregateOutputType | null
    _min: ShippingChargeMinAggregateOutputType | null
    _max: ShippingChargeMaxAggregateOutputType | null
  }

  export type ShippingChargeAvgAggregateOutputType = {
    amount: Decimal | null
    min_amount: Decimal | null
    max_amount: Decimal | null
  }

  export type ShippingChargeSumAggregateOutputType = {
    amount: Decimal | null
    min_amount: Decimal | null
    max_amount: Decimal | null
  }

  export type ShippingChargeMinAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    amount: Decimal | null
    is_active: boolean | null
    is_default: boolean | null
    min_amount: Decimal | null
    max_amount: Decimal | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type ShippingChargeMaxAggregateOutputType = {
    id: string | null
    name: string | null
    description: string | null
    amount: Decimal | null
    is_active: boolean | null
    is_default: boolean | null
    min_amount: Decimal | null
    max_amount: Decimal | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type ShippingChargeCountAggregateOutputType = {
    id: number
    name: number
    description: number
    amount: number
    is_active: number
    is_default: number
    min_amount: number
    max_amount: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type ShippingChargeAvgAggregateInputType = {
    amount?: true
    min_amount?: true
    max_amount?: true
  }

  export type ShippingChargeSumAggregateInputType = {
    amount?: true
    min_amount?: true
    max_amount?: true
  }

  export type ShippingChargeMinAggregateInputType = {
    id?: true
    name?: true
    description?: true
    amount?: true
    is_active?: true
    is_default?: true
    min_amount?: true
    max_amount?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type ShippingChargeMaxAggregateInputType = {
    id?: true
    name?: true
    description?: true
    amount?: true
    is_active?: true
    is_default?: true
    min_amount?: true
    max_amount?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type ShippingChargeCountAggregateInputType = {
    id?: true
    name?: true
    description?: true
    amount?: true
    is_active?: true
    is_default?: true
    min_amount?: true
    max_amount?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type ShippingChargeAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShippingCharge to aggregate.
     */
    where?: ShippingChargeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingCharges to fetch.
     */
    orderBy?: ShippingChargeOrderByWithRelationInput | ShippingChargeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: ShippingChargeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingCharges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingCharges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned ShippingCharges
    **/
    _count?: true | ShippingChargeCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: ShippingChargeAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: ShippingChargeSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: ShippingChargeMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: ShippingChargeMaxAggregateInputType
  }

  export type GetShippingChargeAggregateType<T extends ShippingChargeAggregateArgs> = {
        [P in keyof T & keyof AggregateShippingCharge]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateShippingCharge[P]>
      : GetScalarType<T[P], AggregateShippingCharge[P]>
  }




  export type ShippingChargeGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: ShippingChargeWhereInput
    orderBy?: ShippingChargeOrderByWithAggregationInput | ShippingChargeOrderByWithAggregationInput[]
    by: ShippingChargeScalarFieldEnum[] | ShippingChargeScalarFieldEnum
    having?: ShippingChargeScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: ShippingChargeCountAggregateInputType | true
    _avg?: ShippingChargeAvgAggregateInputType
    _sum?: ShippingChargeSumAggregateInputType
    _min?: ShippingChargeMinAggregateInputType
    _max?: ShippingChargeMaxAggregateInputType
  }

  export type ShippingChargeGroupByOutputType = {
    id: string
    name: string
    description: string | null
    amount: Decimal
    is_active: boolean
    is_default: boolean
    min_amount: Decimal | null
    max_amount: Decimal | null
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: ShippingChargeCountAggregateOutputType | null
    _avg: ShippingChargeAvgAggregateOutputType | null
    _sum: ShippingChargeSumAggregateOutputType | null
    _min: ShippingChargeMinAggregateOutputType | null
    _max: ShippingChargeMaxAggregateOutputType | null
  }

  type GetShippingChargeGroupByPayload<T extends ShippingChargeGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<ShippingChargeGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof ShippingChargeGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], ShippingChargeGroupByOutputType[P]>
            : GetScalarType<T[P], ShippingChargeGroupByOutputType[P]>
        }
      >
    >


  export type ShippingChargeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    name?: boolean
    description?: boolean
    amount?: boolean
    is_active?: boolean
    is_default?: boolean
    min_amount?: boolean
    max_amount?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }, ExtArgs["result"]["shippingCharge"]>


  export type ShippingChargeSelectScalar = {
    id?: boolean
    name?: boolean
    description?: boolean
    amount?: boolean
    is_active?: boolean
    is_default?: boolean
    min_amount?: boolean
    max_amount?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }


  export type $ShippingChargePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "ShippingCharge"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      name: string
      description: string | null
      amount: Prisma.Decimal
      is_active: boolean
      is_default: boolean
      min_amount: Prisma.Decimal | null
      max_amount: Prisma.Decimal | null
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["shippingCharge"]>
    composites: {}
  }

  type ShippingChargeGetPayload<S extends boolean | null | undefined | ShippingChargeDefaultArgs> = $Result.GetResult<Prisma.$ShippingChargePayload, S>

  type ShippingChargeCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<ShippingChargeFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: ShippingChargeCountAggregateInputType | true
    }

  export interface ShippingChargeDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['ShippingCharge'], meta: { name: 'ShippingCharge' } }
    /**
     * Find zero or one ShippingCharge that matches the filter.
     * @param {ShippingChargeFindUniqueArgs} args - Arguments to find a ShippingCharge
     * @example
     * // Get one ShippingCharge
     * const shippingCharge = await prisma.shippingCharge.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends ShippingChargeFindUniqueArgs>(args: SelectSubset<T, ShippingChargeFindUniqueArgs<ExtArgs>>): Prisma__ShippingChargeClient<$Result.GetResult<Prisma.$ShippingChargePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one ShippingCharge that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {ShippingChargeFindUniqueOrThrowArgs} args - Arguments to find a ShippingCharge
     * @example
     * // Get one ShippingCharge
     * const shippingCharge = await prisma.shippingCharge.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends ShippingChargeFindUniqueOrThrowArgs>(args: SelectSubset<T, ShippingChargeFindUniqueOrThrowArgs<ExtArgs>>): Prisma__ShippingChargeClient<$Result.GetResult<Prisma.$ShippingChargePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first ShippingCharge that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChargeFindFirstArgs} args - Arguments to find a ShippingCharge
     * @example
     * // Get one ShippingCharge
     * const shippingCharge = await prisma.shippingCharge.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends ShippingChargeFindFirstArgs>(args?: SelectSubset<T, ShippingChargeFindFirstArgs<ExtArgs>>): Prisma__ShippingChargeClient<$Result.GetResult<Prisma.$ShippingChargePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first ShippingCharge that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChargeFindFirstOrThrowArgs} args - Arguments to find a ShippingCharge
     * @example
     * // Get one ShippingCharge
     * const shippingCharge = await prisma.shippingCharge.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends ShippingChargeFindFirstOrThrowArgs>(args?: SelectSubset<T, ShippingChargeFindFirstOrThrowArgs<ExtArgs>>): Prisma__ShippingChargeClient<$Result.GetResult<Prisma.$ShippingChargePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more ShippingCharges that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChargeFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all ShippingCharges
     * const shippingCharges = await prisma.shippingCharge.findMany()
     * 
     * // Get first 10 ShippingCharges
     * const shippingCharges = await prisma.shippingCharge.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const shippingChargeWithIdOnly = await prisma.shippingCharge.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends ShippingChargeFindManyArgs>(args?: SelectSubset<T, ShippingChargeFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$ShippingChargePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a ShippingCharge.
     * @param {ShippingChargeCreateArgs} args - Arguments to create a ShippingCharge.
     * @example
     * // Create one ShippingCharge
     * const ShippingCharge = await prisma.shippingCharge.create({
     *   data: {
     *     // ... data to create a ShippingCharge
     *   }
     * })
     * 
     */
    create<T extends ShippingChargeCreateArgs>(args: SelectSubset<T, ShippingChargeCreateArgs<ExtArgs>>): Prisma__ShippingChargeClient<$Result.GetResult<Prisma.$ShippingChargePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many ShippingCharges.
     * @param {ShippingChargeCreateManyArgs} args - Arguments to create many ShippingCharges.
     * @example
     * // Create many ShippingCharges
     * const shippingCharge = await prisma.shippingCharge.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends ShippingChargeCreateManyArgs>(args?: SelectSubset<T, ShippingChargeCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a ShippingCharge.
     * @param {ShippingChargeDeleteArgs} args - Arguments to delete one ShippingCharge.
     * @example
     * // Delete one ShippingCharge
     * const ShippingCharge = await prisma.shippingCharge.delete({
     *   where: {
     *     // ... filter to delete one ShippingCharge
     *   }
     * })
     * 
     */
    delete<T extends ShippingChargeDeleteArgs>(args: SelectSubset<T, ShippingChargeDeleteArgs<ExtArgs>>): Prisma__ShippingChargeClient<$Result.GetResult<Prisma.$ShippingChargePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one ShippingCharge.
     * @param {ShippingChargeUpdateArgs} args - Arguments to update one ShippingCharge.
     * @example
     * // Update one ShippingCharge
     * const shippingCharge = await prisma.shippingCharge.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends ShippingChargeUpdateArgs>(args: SelectSubset<T, ShippingChargeUpdateArgs<ExtArgs>>): Prisma__ShippingChargeClient<$Result.GetResult<Prisma.$ShippingChargePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more ShippingCharges.
     * @param {ShippingChargeDeleteManyArgs} args - Arguments to filter ShippingCharges to delete.
     * @example
     * // Delete a few ShippingCharges
     * const { count } = await prisma.shippingCharge.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends ShippingChargeDeleteManyArgs>(args?: SelectSubset<T, ShippingChargeDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more ShippingCharges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChargeUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many ShippingCharges
     * const shippingCharge = await prisma.shippingCharge.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends ShippingChargeUpdateManyArgs>(args: SelectSubset<T, ShippingChargeUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one ShippingCharge.
     * @param {ShippingChargeUpsertArgs} args - Arguments to update or create a ShippingCharge.
     * @example
     * // Update or create a ShippingCharge
     * const shippingCharge = await prisma.shippingCharge.upsert({
     *   create: {
     *     // ... data to create a ShippingCharge
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the ShippingCharge we want to update
     *   }
     * })
     */
    upsert<T extends ShippingChargeUpsertArgs>(args: SelectSubset<T, ShippingChargeUpsertArgs<ExtArgs>>): Prisma__ShippingChargeClient<$Result.GetResult<Prisma.$ShippingChargePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of ShippingCharges.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChargeCountArgs} args - Arguments to filter ShippingCharges to count.
     * @example
     * // Count the number of ShippingCharges
     * const count = await prisma.shippingCharge.count({
     *   where: {
     *     // ... the filter for the ShippingCharges we want to count
     *   }
     * })
    **/
    count<T extends ShippingChargeCountArgs>(
      args?: Subset<T, ShippingChargeCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], ShippingChargeCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a ShippingCharge.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChargeAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends ShippingChargeAggregateArgs>(args: Subset<T, ShippingChargeAggregateArgs>): Prisma.PrismaPromise<GetShippingChargeAggregateType<T>>

    /**
     * Group by ShippingCharge.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {ShippingChargeGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends ShippingChargeGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: ShippingChargeGroupByArgs['orderBy'] }
        : { orderBy?: ShippingChargeGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, ShippingChargeGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetShippingChargeGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the ShippingCharge model
   */
  readonly fields: ShippingChargeFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for ShippingCharge.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__ShippingChargeClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the ShippingCharge model
   */ 
  interface ShippingChargeFieldRefs {
    readonly id: FieldRef<"ShippingCharge", 'String'>
    readonly name: FieldRef<"ShippingCharge", 'String'>
    readonly description: FieldRef<"ShippingCharge", 'String'>
    readonly amount: FieldRef<"ShippingCharge", 'Decimal'>
    readonly is_active: FieldRef<"ShippingCharge", 'Boolean'>
    readonly is_default: FieldRef<"ShippingCharge", 'Boolean'>
    readonly min_amount: FieldRef<"ShippingCharge", 'Decimal'>
    readonly max_amount: FieldRef<"ShippingCharge", 'Decimal'>
    readonly created_at: FieldRef<"ShippingCharge", 'DateTime'>
    readonly created_by: FieldRef<"ShippingCharge", 'String'>
    readonly created_ip: FieldRef<"ShippingCharge", 'String'>
    readonly updated_at: FieldRef<"ShippingCharge", 'DateTime'>
    readonly updated_by: FieldRef<"ShippingCharge", 'String'>
    readonly updated_ip: FieldRef<"ShippingCharge", 'String'>
    readonly company_id: FieldRef<"ShippingCharge", 'String'>
  }
    

  // Custom InputTypes
  /**
   * ShippingCharge findUnique
   */
  export type ShippingChargeFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingCharge
     */
    select?: ShippingChargeSelect<ExtArgs> | null
    /**
     * Filter, which ShippingCharge to fetch.
     */
    where: ShippingChargeWhereUniqueInput
  }

  /**
   * ShippingCharge findUniqueOrThrow
   */
  export type ShippingChargeFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingCharge
     */
    select?: ShippingChargeSelect<ExtArgs> | null
    /**
     * Filter, which ShippingCharge to fetch.
     */
    where: ShippingChargeWhereUniqueInput
  }

  /**
   * ShippingCharge findFirst
   */
  export type ShippingChargeFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingCharge
     */
    select?: ShippingChargeSelect<ExtArgs> | null
    /**
     * Filter, which ShippingCharge to fetch.
     */
    where?: ShippingChargeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingCharges to fetch.
     */
    orderBy?: ShippingChargeOrderByWithRelationInput | ShippingChargeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingCharges.
     */
    cursor?: ShippingChargeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingCharges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingCharges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingCharges.
     */
    distinct?: ShippingChargeScalarFieldEnum | ShippingChargeScalarFieldEnum[]
  }

  /**
   * ShippingCharge findFirstOrThrow
   */
  export type ShippingChargeFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingCharge
     */
    select?: ShippingChargeSelect<ExtArgs> | null
    /**
     * Filter, which ShippingCharge to fetch.
     */
    where?: ShippingChargeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingCharges to fetch.
     */
    orderBy?: ShippingChargeOrderByWithRelationInput | ShippingChargeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for ShippingCharges.
     */
    cursor?: ShippingChargeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingCharges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingCharges.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of ShippingCharges.
     */
    distinct?: ShippingChargeScalarFieldEnum | ShippingChargeScalarFieldEnum[]
  }

  /**
   * ShippingCharge findMany
   */
  export type ShippingChargeFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingCharge
     */
    select?: ShippingChargeSelect<ExtArgs> | null
    /**
     * Filter, which ShippingCharges to fetch.
     */
    where?: ShippingChargeWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of ShippingCharges to fetch.
     */
    orderBy?: ShippingChargeOrderByWithRelationInput | ShippingChargeOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing ShippingCharges.
     */
    cursor?: ShippingChargeWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` ShippingCharges from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` ShippingCharges.
     */
    skip?: number
    distinct?: ShippingChargeScalarFieldEnum | ShippingChargeScalarFieldEnum[]
  }

  /**
   * ShippingCharge create
   */
  export type ShippingChargeCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingCharge
     */
    select?: ShippingChargeSelect<ExtArgs> | null
    /**
     * The data needed to create a ShippingCharge.
     */
    data: XOR<ShippingChargeCreateInput, ShippingChargeUncheckedCreateInput>
  }

  /**
   * ShippingCharge createMany
   */
  export type ShippingChargeCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many ShippingCharges.
     */
    data: ShippingChargeCreateManyInput | ShippingChargeCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * ShippingCharge update
   */
  export type ShippingChargeUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingCharge
     */
    select?: ShippingChargeSelect<ExtArgs> | null
    /**
     * The data needed to update a ShippingCharge.
     */
    data: XOR<ShippingChargeUpdateInput, ShippingChargeUncheckedUpdateInput>
    /**
     * Choose, which ShippingCharge to update.
     */
    where: ShippingChargeWhereUniqueInput
  }

  /**
   * ShippingCharge updateMany
   */
  export type ShippingChargeUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update ShippingCharges.
     */
    data: XOR<ShippingChargeUpdateManyMutationInput, ShippingChargeUncheckedUpdateManyInput>
    /**
     * Filter which ShippingCharges to update
     */
    where?: ShippingChargeWhereInput
  }

  /**
   * ShippingCharge upsert
   */
  export type ShippingChargeUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingCharge
     */
    select?: ShippingChargeSelect<ExtArgs> | null
    /**
     * The filter to search for the ShippingCharge to update in case it exists.
     */
    where: ShippingChargeWhereUniqueInput
    /**
     * In case the ShippingCharge found by the `where` argument doesn't exist, create a new ShippingCharge with this data.
     */
    create: XOR<ShippingChargeCreateInput, ShippingChargeUncheckedCreateInput>
    /**
     * In case the ShippingCharge was found with the provided `where` argument, update it with this data.
     */
    update: XOR<ShippingChargeUpdateInput, ShippingChargeUncheckedUpdateInput>
  }

  /**
   * ShippingCharge delete
   */
  export type ShippingChargeDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingCharge
     */
    select?: ShippingChargeSelect<ExtArgs> | null
    /**
     * Filter which ShippingCharge to delete.
     */
    where: ShippingChargeWhereUniqueInput
  }

  /**
   * ShippingCharge deleteMany
   */
  export type ShippingChargeDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which ShippingCharges to delete
     */
    where?: ShippingChargeWhereInput
  }

  /**
   * ShippingCharge without action
   */
  export type ShippingChargeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the ShippingCharge
     */
    select?: ShippingChargeSelect<ExtArgs> | null
  }


  /**
   * Model Page
   */

  export type AggregatePage = {
    _count: PageCountAggregateOutputType | null
    _min: PageMinAggregateOutputType | null
    _max: PageMaxAggregateOutputType | null
  }

  export type PageMinAggregateOutputType = {
    id: string | null
    title: string | null
    slug: string | null
    content: string | null
    meta_title: string | null
    meta_desc: string | null
    is_active: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type PageMaxAggregateOutputType = {
    id: string | null
    title: string | null
    slug: string | null
    content: string | null
    meta_title: string | null
    meta_desc: string | null
    is_active: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type PageCountAggregateOutputType = {
    id: number
    title: number
    slug: number
    content: number
    meta_title: number
    meta_desc: number
    is_active: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type PageMinAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    content?: true
    meta_title?: true
    meta_desc?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type PageMaxAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    content?: true
    meta_title?: true
    meta_desc?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type PageCountAggregateInputType = {
    id?: true
    title?: true
    slug?: true
    content?: true
    meta_title?: true
    meta_desc?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type PageAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Page to aggregate.
     */
    where?: PageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pages to fetch.
     */
    orderBy?: PageOrderByWithRelationInput | PageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Pages
    **/
    _count?: true | PageCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PageMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PageMaxAggregateInputType
  }

  export type GetPageAggregateType<T extends PageAggregateArgs> = {
        [P in keyof T & keyof AggregatePage]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePage[P]>
      : GetScalarType<T[P], AggregatePage[P]>
  }




  export type PageGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PageWhereInput
    orderBy?: PageOrderByWithAggregationInput | PageOrderByWithAggregationInput[]
    by: PageScalarFieldEnum[] | PageScalarFieldEnum
    having?: PageScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PageCountAggregateInputType | true
    _min?: PageMinAggregateInputType
    _max?: PageMaxAggregateInputType
  }

  export type PageGroupByOutputType = {
    id: string
    title: string
    slug: string
    content: string
    meta_title: string | null
    meta_desc: string | null
    is_active: boolean
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: PageCountAggregateOutputType | null
    _min: PageMinAggregateOutputType | null
    _max: PageMaxAggregateOutputType | null
  }

  type GetPageGroupByPayload<T extends PageGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PageGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PageGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PageGroupByOutputType[P]>
            : GetScalarType<T[P], PageGroupByOutputType[P]>
        }
      >
    >


  export type PageSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    title?: boolean
    slug?: boolean
    content?: boolean
    meta_title?: boolean
    meta_desc?: boolean
    is_active?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    sections?: boolean | Page$sectionsArgs<ExtArgs>
    _count?: boolean | PageCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["page"]>


  export type PageSelectScalar = {
    id?: boolean
    title?: boolean
    slug?: boolean
    content?: boolean
    meta_title?: boolean
    meta_desc?: boolean
    is_active?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type PageInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    sections?: boolean | Page$sectionsArgs<ExtArgs>
    _count?: boolean | PageCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $PagePayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Page"
    objects: {
      sections: Prisma.$PageSectionPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      title: string
      slug: string
      content: string
      meta_title: string | null
      meta_desc: string | null
      is_active: boolean
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["page"]>
    composites: {}
  }

  type PageGetPayload<S extends boolean | null | undefined | PageDefaultArgs> = $Result.GetResult<Prisma.$PagePayload, S>

  type PageCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PageFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PageCountAggregateInputType | true
    }

  export interface PageDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Page'], meta: { name: 'Page' } }
    /**
     * Find zero or one Page that matches the filter.
     * @param {PageFindUniqueArgs} args - Arguments to find a Page
     * @example
     * // Get one Page
     * const page = await prisma.page.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PageFindUniqueArgs>(args: SelectSubset<T, PageFindUniqueArgs<ExtArgs>>): Prisma__PageClient<$Result.GetResult<Prisma.$PagePayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Page that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PageFindUniqueOrThrowArgs} args - Arguments to find a Page
     * @example
     * // Get one Page
     * const page = await prisma.page.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PageFindUniqueOrThrowArgs>(args: SelectSubset<T, PageFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PageClient<$Result.GetResult<Prisma.$PagePayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Page that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageFindFirstArgs} args - Arguments to find a Page
     * @example
     * // Get one Page
     * const page = await prisma.page.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PageFindFirstArgs>(args?: SelectSubset<T, PageFindFirstArgs<ExtArgs>>): Prisma__PageClient<$Result.GetResult<Prisma.$PagePayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Page that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageFindFirstOrThrowArgs} args - Arguments to find a Page
     * @example
     * // Get one Page
     * const page = await prisma.page.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PageFindFirstOrThrowArgs>(args?: SelectSubset<T, PageFindFirstOrThrowArgs<ExtArgs>>): Prisma__PageClient<$Result.GetResult<Prisma.$PagePayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Pages that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Pages
     * const pages = await prisma.page.findMany()
     * 
     * // Get first 10 Pages
     * const pages = await prisma.page.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pageWithIdOnly = await prisma.page.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PageFindManyArgs>(args?: SelectSubset<T, PageFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PagePayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Page.
     * @param {PageCreateArgs} args - Arguments to create a Page.
     * @example
     * // Create one Page
     * const Page = await prisma.page.create({
     *   data: {
     *     // ... data to create a Page
     *   }
     * })
     * 
     */
    create<T extends PageCreateArgs>(args: SelectSubset<T, PageCreateArgs<ExtArgs>>): Prisma__PageClient<$Result.GetResult<Prisma.$PagePayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Pages.
     * @param {PageCreateManyArgs} args - Arguments to create many Pages.
     * @example
     * // Create many Pages
     * const page = await prisma.page.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PageCreateManyArgs>(args?: SelectSubset<T, PageCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Page.
     * @param {PageDeleteArgs} args - Arguments to delete one Page.
     * @example
     * // Delete one Page
     * const Page = await prisma.page.delete({
     *   where: {
     *     // ... filter to delete one Page
     *   }
     * })
     * 
     */
    delete<T extends PageDeleteArgs>(args: SelectSubset<T, PageDeleteArgs<ExtArgs>>): Prisma__PageClient<$Result.GetResult<Prisma.$PagePayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Page.
     * @param {PageUpdateArgs} args - Arguments to update one Page.
     * @example
     * // Update one Page
     * const page = await prisma.page.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PageUpdateArgs>(args: SelectSubset<T, PageUpdateArgs<ExtArgs>>): Prisma__PageClient<$Result.GetResult<Prisma.$PagePayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Pages.
     * @param {PageDeleteManyArgs} args - Arguments to filter Pages to delete.
     * @example
     * // Delete a few Pages
     * const { count } = await prisma.page.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PageDeleteManyArgs>(args?: SelectSubset<T, PageDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Pages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Pages
     * const page = await prisma.page.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PageUpdateManyArgs>(args: SelectSubset<T, PageUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Page.
     * @param {PageUpsertArgs} args - Arguments to update or create a Page.
     * @example
     * // Update or create a Page
     * const page = await prisma.page.upsert({
     *   create: {
     *     // ... data to create a Page
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Page we want to update
     *   }
     * })
     */
    upsert<T extends PageUpsertArgs>(args: SelectSubset<T, PageUpsertArgs<ExtArgs>>): Prisma__PageClient<$Result.GetResult<Prisma.$PagePayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Pages.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageCountArgs} args - Arguments to filter Pages to count.
     * @example
     * // Count the number of Pages
     * const count = await prisma.page.count({
     *   where: {
     *     // ... the filter for the Pages we want to count
     *   }
     * })
    **/
    count<T extends PageCountArgs>(
      args?: Subset<T, PageCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PageCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Page.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PageAggregateArgs>(args: Subset<T, PageAggregateArgs>): Prisma.PrismaPromise<GetPageAggregateType<T>>

    /**
     * Group by Page.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PageGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PageGroupByArgs['orderBy'] }
        : { orderBy?: PageGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PageGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPageGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Page model
   */
  readonly fields: PageFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Page.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PageClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    sections<T extends Page$sectionsArgs<ExtArgs> = {}>(args?: Subset<T, Page$sectionsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PageSectionPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Page model
   */ 
  interface PageFieldRefs {
    readonly id: FieldRef<"Page", 'String'>
    readonly title: FieldRef<"Page", 'String'>
    readonly slug: FieldRef<"Page", 'String'>
    readonly content: FieldRef<"Page", 'String'>
    readonly meta_title: FieldRef<"Page", 'String'>
    readonly meta_desc: FieldRef<"Page", 'String'>
    readonly is_active: FieldRef<"Page", 'Boolean'>
    readonly created_at: FieldRef<"Page", 'DateTime'>
    readonly created_by: FieldRef<"Page", 'String'>
    readonly created_ip: FieldRef<"Page", 'String'>
    readonly updated_at: FieldRef<"Page", 'DateTime'>
    readonly updated_by: FieldRef<"Page", 'String'>
    readonly updated_ip: FieldRef<"Page", 'String'>
    readonly company_id: FieldRef<"Page", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Page findUnique
   */
  export type PageFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Page
     */
    select?: PageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageInclude<ExtArgs> | null
    /**
     * Filter, which Page to fetch.
     */
    where: PageWhereUniqueInput
  }

  /**
   * Page findUniqueOrThrow
   */
  export type PageFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Page
     */
    select?: PageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageInclude<ExtArgs> | null
    /**
     * Filter, which Page to fetch.
     */
    where: PageWhereUniqueInput
  }

  /**
   * Page findFirst
   */
  export type PageFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Page
     */
    select?: PageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageInclude<ExtArgs> | null
    /**
     * Filter, which Page to fetch.
     */
    where?: PageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pages to fetch.
     */
    orderBy?: PageOrderByWithRelationInput | PageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pages.
     */
    cursor?: PageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pages.
     */
    distinct?: PageScalarFieldEnum | PageScalarFieldEnum[]
  }

  /**
   * Page findFirstOrThrow
   */
  export type PageFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Page
     */
    select?: PageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageInclude<ExtArgs> | null
    /**
     * Filter, which Page to fetch.
     */
    where?: PageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pages to fetch.
     */
    orderBy?: PageOrderByWithRelationInput | PageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Pages.
     */
    cursor?: PageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pages.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Pages.
     */
    distinct?: PageScalarFieldEnum | PageScalarFieldEnum[]
  }

  /**
   * Page findMany
   */
  export type PageFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Page
     */
    select?: PageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageInclude<ExtArgs> | null
    /**
     * Filter, which Pages to fetch.
     */
    where?: PageWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Pages to fetch.
     */
    orderBy?: PageOrderByWithRelationInput | PageOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Pages.
     */
    cursor?: PageWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Pages from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Pages.
     */
    skip?: number
    distinct?: PageScalarFieldEnum | PageScalarFieldEnum[]
  }

  /**
   * Page create
   */
  export type PageCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Page
     */
    select?: PageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageInclude<ExtArgs> | null
    /**
     * The data needed to create a Page.
     */
    data: XOR<PageCreateInput, PageUncheckedCreateInput>
  }

  /**
   * Page createMany
   */
  export type PageCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Pages.
     */
    data: PageCreateManyInput | PageCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Page update
   */
  export type PageUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Page
     */
    select?: PageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageInclude<ExtArgs> | null
    /**
     * The data needed to update a Page.
     */
    data: XOR<PageUpdateInput, PageUncheckedUpdateInput>
    /**
     * Choose, which Page to update.
     */
    where: PageWhereUniqueInput
  }

  /**
   * Page updateMany
   */
  export type PageUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Pages.
     */
    data: XOR<PageUpdateManyMutationInput, PageUncheckedUpdateManyInput>
    /**
     * Filter which Pages to update
     */
    where?: PageWhereInput
  }

  /**
   * Page upsert
   */
  export type PageUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Page
     */
    select?: PageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageInclude<ExtArgs> | null
    /**
     * The filter to search for the Page to update in case it exists.
     */
    where: PageWhereUniqueInput
    /**
     * In case the Page found by the `where` argument doesn't exist, create a new Page with this data.
     */
    create: XOR<PageCreateInput, PageUncheckedCreateInput>
    /**
     * In case the Page was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PageUpdateInput, PageUncheckedUpdateInput>
  }

  /**
   * Page delete
   */
  export type PageDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Page
     */
    select?: PageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageInclude<ExtArgs> | null
    /**
     * Filter which Page to delete.
     */
    where: PageWhereUniqueInput
  }

  /**
   * Page deleteMany
   */
  export type PageDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Pages to delete
     */
    where?: PageWhereInput
  }

  /**
   * Page.sections
   */
  export type Page$sectionsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PageSection
     */
    select?: PageSectionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageSectionInclude<ExtArgs> | null
    where?: PageSectionWhereInput
    orderBy?: PageSectionOrderByWithRelationInput | PageSectionOrderByWithRelationInput[]
    cursor?: PageSectionWhereUniqueInput
    take?: number
    skip?: number
    distinct?: PageSectionScalarFieldEnum | PageSectionScalarFieldEnum[]
  }

  /**
   * Page without action
   */
  export type PageDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Page
     */
    select?: PageSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageInclude<ExtArgs> | null
  }


  /**
   * Model PageSection
   */

  export type AggregatePageSection = {
    _count: PageSectionCountAggregateOutputType | null
    _avg: PageSectionAvgAggregateOutputType | null
    _sum: PageSectionSumAggregateOutputType | null
    _min: PageSectionMinAggregateOutputType | null
    _max: PageSectionMaxAggregateOutputType | null
  }

  export type PageSectionAvgAggregateOutputType = {
    sequence_no: number | null
  }

  export type PageSectionSumAggregateOutputType = {
    sequence_no: number | null
  }

  export type PageSectionMinAggregateOutputType = {
    id: string | null
    page_id: string | null
    title: string | null
    content: string | null
    image: string | null
    sequence_no: number | null
    is_active: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type PageSectionMaxAggregateOutputType = {
    id: string | null
    page_id: string | null
    title: string | null
    content: string | null
    image: string | null
    sequence_no: number | null
    is_active: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type PageSectionCountAggregateOutputType = {
    id: number
    page_id: number
    title: number
    content: number
    image: number
    sequence_no: number
    is_active: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type PageSectionAvgAggregateInputType = {
    sequence_no?: true
  }

  export type PageSectionSumAggregateInputType = {
    sequence_no?: true
  }

  export type PageSectionMinAggregateInputType = {
    id?: true
    page_id?: true
    title?: true
    content?: true
    image?: true
    sequence_no?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type PageSectionMaxAggregateInputType = {
    id?: true
    page_id?: true
    title?: true
    content?: true
    image?: true
    sequence_no?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type PageSectionCountAggregateInputType = {
    id?: true
    page_id?: true
    title?: true
    content?: true
    image?: true
    sequence_no?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type PageSectionAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PageSection to aggregate.
     */
    where?: PageSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PageSections to fetch.
     */
    orderBy?: PageSectionOrderByWithRelationInput | PageSectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: PageSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PageSections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PageSections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned PageSections
    **/
    _count?: true | PageSectionCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: PageSectionAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: PageSectionSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: PageSectionMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: PageSectionMaxAggregateInputType
  }

  export type GetPageSectionAggregateType<T extends PageSectionAggregateArgs> = {
        [P in keyof T & keyof AggregatePageSection]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregatePageSection[P]>
      : GetScalarType<T[P], AggregatePageSection[P]>
  }




  export type PageSectionGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: PageSectionWhereInput
    orderBy?: PageSectionOrderByWithAggregationInput | PageSectionOrderByWithAggregationInput[]
    by: PageSectionScalarFieldEnum[] | PageSectionScalarFieldEnum
    having?: PageSectionScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: PageSectionCountAggregateInputType | true
    _avg?: PageSectionAvgAggregateInputType
    _sum?: PageSectionSumAggregateInputType
    _min?: PageSectionMinAggregateInputType
    _max?: PageSectionMaxAggregateInputType
  }

  export type PageSectionGroupByOutputType = {
    id: string
    page_id: string
    title: string
    content: string
    image: string | null
    sequence_no: number
    is_active: boolean
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: PageSectionCountAggregateOutputType | null
    _avg: PageSectionAvgAggregateOutputType | null
    _sum: PageSectionSumAggregateOutputType | null
    _min: PageSectionMinAggregateOutputType | null
    _max: PageSectionMaxAggregateOutputType | null
  }

  type GetPageSectionGroupByPayload<T extends PageSectionGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<PageSectionGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof PageSectionGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], PageSectionGroupByOutputType[P]>
            : GetScalarType<T[P], PageSectionGroupByOutputType[P]>
        }
      >
    >


  export type PageSectionSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    page_id?: boolean
    title?: boolean
    content?: boolean
    image?: boolean
    sequence_no?: boolean
    is_active?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
    page?: boolean | PageDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["pageSection"]>


  export type PageSectionSelectScalar = {
    id?: boolean
    page_id?: boolean
    title?: boolean
    content?: boolean
    image?: boolean
    sequence_no?: boolean
    is_active?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }

  export type PageSectionInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    page?: boolean | PageDefaultArgs<ExtArgs>
  }

  export type $PageSectionPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "PageSection"
    objects: {
      page: Prisma.$PagePayload<ExtArgs>
    }
    scalars: $Extensions.GetPayloadResult<{
      id: string
      page_id: string
      title: string
      content: string
      image: string | null
      sequence_no: number
      is_active: boolean
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["pageSection"]>
    composites: {}
  }

  type PageSectionGetPayload<S extends boolean | null | undefined | PageSectionDefaultArgs> = $Result.GetResult<Prisma.$PageSectionPayload, S>

  type PageSectionCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<PageSectionFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: PageSectionCountAggregateInputType | true
    }

  export interface PageSectionDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['PageSection'], meta: { name: 'PageSection' } }
    /**
     * Find zero or one PageSection that matches the filter.
     * @param {PageSectionFindUniqueArgs} args - Arguments to find a PageSection
     * @example
     * // Get one PageSection
     * const pageSection = await prisma.pageSection.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends PageSectionFindUniqueArgs>(args: SelectSubset<T, PageSectionFindUniqueArgs<ExtArgs>>): Prisma__PageSectionClient<$Result.GetResult<Prisma.$PageSectionPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one PageSection that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {PageSectionFindUniqueOrThrowArgs} args - Arguments to find a PageSection
     * @example
     * // Get one PageSection
     * const pageSection = await prisma.pageSection.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends PageSectionFindUniqueOrThrowArgs>(args: SelectSubset<T, PageSectionFindUniqueOrThrowArgs<ExtArgs>>): Prisma__PageSectionClient<$Result.GetResult<Prisma.$PageSectionPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first PageSection that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageSectionFindFirstArgs} args - Arguments to find a PageSection
     * @example
     * // Get one PageSection
     * const pageSection = await prisma.pageSection.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends PageSectionFindFirstArgs>(args?: SelectSubset<T, PageSectionFindFirstArgs<ExtArgs>>): Prisma__PageSectionClient<$Result.GetResult<Prisma.$PageSectionPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first PageSection that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageSectionFindFirstOrThrowArgs} args - Arguments to find a PageSection
     * @example
     * // Get one PageSection
     * const pageSection = await prisma.pageSection.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends PageSectionFindFirstOrThrowArgs>(args?: SelectSubset<T, PageSectionFindFirstOrThrowArgs<ExtArgs>>): Prisma__PageSectionClient<$Result.GetResult<Prisma.$PageSectionPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more PageSections that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageSectionFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all PageSections
     * const pageSections = await prisma.pageSection.findMany()
     * 
     * // Get first 10 PageSections
     * const pageSections = await prisma.pageSection.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const pageSectionWithIdOnly = await prisma.pageSection.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends PageSectionFindManyArgs>(args?: SelectSubset<T, PageSectionFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$PageSectionPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a PageSection.
     * @param {PageSectionCreateArgs} args - Arguments to create a PageSection.
     * @example
     * // Create one PageSection
     * const PageSection = await prisma.pageSection.create({
     *   data: {
     *     // ... data to create a PageSection
     *   }
     * })
     * 
     */
    create<T extends PageSectionCreateArgs>(args: SelectSubset<T, PageSectionCreateArgs<ExtArgs>>): Prisma__PageSectionClient<$Result.GetResult<Prisma.$PageSectionPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many PageSections.
     * @param {PageSectionCreateManyArgs} args - Arguments to create many PageSections.
     * @example
     * // Create many PageSections
     * const pageSection = await prisma.pageSection.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends PageSectionCreateManyArgs>(args?: SelectSubset<T, PageSectionCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a PageSection.
     * @param {PageSectionDeleteArgs} args - Arguments to delete one PageSection.
     * @example
     * // Delete one PageSection
     * const PageSection = await prisma.pageSection.delete({
     *   where: {
     *     // ... filter to delete one PageSection
     *   }
     * })
     * 
     */
    delete<T extends PageSectionDeleteArgs>(args: SelectSubset<T, PageSectionDeleteArgs<ExtArgs>>): Prisma__PageSectionClient<$Result.GetResult<Prisma.$PageSectionPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one PageSection.
     * @param {PageSectionUpdateArgs} args - Arguments to update one PageSection.
     * @example
     * // Update one PageSection
     * const pageSection = await prisma.pageSection.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends PageSectionUpdateArgs>(args: SelectSubset<T, PageSectionUpdateArgs<ExtArgs>>): Prisma__PageSectionClient<$Result.GetResult<Prisma.$PageSectionPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more PageSections.
     * @param {PageSectionDeleteManyArgs} args - Arguments to filter PageSections to delete.
     * @example
     * // Delete a few PageSections
     * const { count } = await prisma.pageSection.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends PageSectionDeleteManyArgs>(args?: SelectSubset<T, PageSectionDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more PageSections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageSectionUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many PageSections
     * const pageSection = await prisma.pageSection.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends PageSectionUpdateManyArgs>(args: SelectSubset<T, PageSectionUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one PageSection.
     * @param {PageSectionUpsertArgs} args - Arguments to update or create a PageSection.
     * @example
     * // Update or create a PageSection
     * const pageSection = await prisma.pageSection.upsert({
     *   create: {
     *     // ... data to create a PageSection
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the PageSection we want to update
     *   }
     * })
     */
    upsert<T extends PageSectionUpsertArgs>(args: SelectSubset<T, PageSectionUpsertArgs<ExtArgs>>): Prisma__PageSectionClient<$Result.GetResult<Prisma.$PageSectionPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of PageSections.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageSectionCountArgs} args - Arguments to filter PageSections to count.
     * @example
     * // Count the number of PageSections
     * const count = await prisma.pageSection.count({
     *   where: {
     *     // ... the filter for the PageSections we want to count
     *   }
     * })
    **/
    count<T extends PageSectionCountArgs>(
      args?: Subset<T, PageSectionCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], PageSectionCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a PageSection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageSectionAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends PageSectionAggregateArgs>(args: Subset<T, PageSectionAggregateArgs>): Prisma.PrismaPromise<GetPageSectionAggregateType<T>>

    /**
     * Group by PageSection.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {PageSectionGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends PageSectionGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: PageSectionGroupByArgs['orderBy'] }
        : { orderBy?: PageSectionGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, PageSectionGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetPageSectionGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the PageSection model
   */
  readonly fields: PageSectionFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for PageSection.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__PageSectionClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    page<T extends PageDefaultArgs<ExtArgs> = {}>(args?: Subset<T, PageDefaultArgs<ExtArgs>>): Prisma__PageClient<$Result.GetResult<Prisma.$PagePayload<ExtArgs>, T, "findUniqueOrThrow"> | Null, Null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the PageSection model
   */ 
  interface PageSectionFieldRefs {
    readonly id: FieldRef<"PageSection", 'String'>
    readonly page_id: FieldRef<"PageSection", 'String'>
    readonly title: FieldRef<"PageSection", 'String'>
    readonly content: FieldRef<"PageSection", 'String'>
    readonly image: FieldRef<"PageSection", 'String'>
    readonly sequence_no: FieldRef<"PageSection", 'Int'>
    readonly is_active: FieldRef<"PageSection", 'Boolean'>
    readonly created_at: FieldRef<"PageSection", 'DateTime'>
    readonly created_by: FieldRef<"PageSection", 'String'>
    readonly created_ip: FieldRef<"PageSection", 'String'>
    readonly updated_at: FieldRef<"PageSection", 'DateTime'>
    readonly updated_by: FieldRef<"PageSection", 'String'>
    readonly updated_ip: FieldRef<"PageSection", 'String'>
    readonly company_id: FieldRef<"PageSection", 'String'>
  }
    

  // Custom InputTypes
  /**
   * PageSection findUnique
   */
  export type PageSectionFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PageSection
     */
    select?: PageSectionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageSectionInclude<ExtArgs> | null
    /**
     * Filter, which PageSection to fetch.
     */
    where: PageSectionWhereUniqueInput
  }

  /**
   * PageSection findUniqueOrThrow
   */
  export type PageSectionFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PageSection
     */
    select?: PageSectionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageSectionInclude<ExtArgs> | null
    /**
     * Filter, which PageSection to fetch.
     */
    where: PageSectionWhereUniqueInput
  }

  /**
   * PageSection findFirst
   */
  export type PageSectionFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PageSection
     */
    select?: PageSectionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageSectionInclude<ExtArgs> | null
    /**
     * Filter, which PageSection to fetch.
     */
    where?: PageSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PageSections to fetch.
     */
    orderBy?: PageSectionOrderByWithRelationInput | PageSectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PageSections.
     */
    cursor?: PageSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PageSections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PageSections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PageSections.
     */
    distinct?: PageSectionScalarFieldEnum | PageSectionScalarFieldEnum[]
  }

  /**
   * PageSection findFirstOrThrow
   */
  export type PageSectionFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PageSection
     */
    select?: PageSectionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageSectionInclude<ExtArgs> | null
    /**
     * Filter, which PageSection to fetch.
     */
    where?: PageSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PageSections to fetch.
     */
    orderBy?: PageSectionOrderByWithRelationInput | PageSectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for PageSections.
     */
    cursor?: PageSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PageSections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PageSections.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of PageSections.
     */
    distinct?: PageSectionScalarFieldEnum | PageSectionScalarFieldEnum[]
  }

  /**
   * PageSection findMany
   */
  export type PageSectionFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PageSection
     */
    select?: PageSectionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageSectionInclude<ExtArgs> | null
    /**
     * Filter, which PageSections to fetch.
     */
    where?: PageSectionWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of PageSections to fetch.
     */
    orderBy?: PageSectionOrderByWithRelationInput | PageSectionOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing PageSections.
     */
    cursor?: PageSectionWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` PageSections from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` PageSections.
     */
    skip?: number
    distinct?: PageSectionScalarFieldEnum | PageSectionScalarFieldEnum[]
  }

  /**
   * PageSection create
   */
  export type PageSectionCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PageSection
     */
    select?: PageSectionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageSectionInclude<ExtArgs> | null
    /**
     * The data needed to create a PageSection.
     */
    data: XOR<PageSectionCreateInput, PageSectionUncheckedCreateInput>
  }

  /**
   * PageSection createMany
   */
  export type PageSectionCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many PageSections.
     */
    data: PageSectionCreateManyInput | PageSectionCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * PageSection update
   */
  export type PageSectionUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PageSection
     */
    select?: PageSectionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageSectionInclude<ExtArgs> | null
    /**
     * The data needed to update a PageSection.
     */
    data: XOR<PageSectionUpdateInput, PageSectionUncheckedUpdateInput>
    /**
     * Choose, which PageSection to update.
     */
    where: PageSectionWhereUniqueInput
  }

  /**
   * PageSection updateMany
   */
  export type PageSectionUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update PageSections.
     */
    data: XOR<PageSectionUpdateManyMutationInput, PageSectionUncheckedUpdateManyInput>
    /**
     * Filter which PageSections to update
     */
    where?: PageSectionWhereInput
  }

  /**
   * PageSection upsert
   */
  export type PageSectionUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PageSection
     */
    select?: PageSectionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageSectionInclude<ExtArgs> | null
    /**
     * The filter to search for the PageSection to update in case it exists.
     */
    where: PageSectionWhereUniqueInput
    /**
     * In case the PageSection found by the `where` argument doesn't exist, create a new PageSection with this data.
     */
    create: XOR<PageSectionCreateInput, PageSectionUncheckedCreateInput>
    /**
     * In case the PageSection was found with the provided `where` argument, update it with this data.
     */
    update: XOR<PageSectionUpdateInput, PageSectionUncheckedUpdateInput>
  }

  /**
   * PageSection delete
   */
  export type PageSectionDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PageSection
     */
    select?: PageSectionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageSectionInclude<ExtArgs> | null
    /**
     * Filter which PageSection to delete.
     */
    where: PageSectionWhereUniqueInput
  }

  /**
   * PageSection deleteMany
   */
  export type PageSectionDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which PageSections to delete
     */
    where?: PageSectionWhereInput
  }

  /**
   * PageSection without action
   */
  export type PageSectionDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the PageSection
     */
    select?: PageSectionSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: PageSectionInclude<ExtArgs> | null
  }


  /**
   * Model Faq
   */

  export type AggregateFaq = {
    _count: FaqCountAggregateOutputType | null
    _avg: FaqAvgAggregateOutputType | null
    _sum: FaqSumAggregateOutputType | null
    _min: FaqMinAggregateOutputType | null
    _max: FaqMaxAggregateOutputType | null
  }

  export type FaqAvgAggregateOutputType = {
    sequence_no: number | null
  }

  export type FaqSumAggregateOutputType = {
    sequence_no: number | null
  }

  export type FaqMinAggregateOutputType = {
    id: string | null
    question: string | null
    answer: string | null
    category: string | null
    sequence_no: number | null
    is_active: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type FaqMaxAggregateOutputType = {
    id: string | null
    question: string | null
    answer: string | null
    category: string | null
    sequence_no: number | null
    is_active: boolean | null
    created_at: Date | null
    created_by: string | null
    created_ip: string | null
    updated_at: Date | null
    updated_by: string | null
    updated_ip: string | null
    company_id: string | null
  }

  export type FaqCountAggregateOutputType = {
    id: number
    question: number
    answer: number
    category: number
    sequence_no: number
    is_active: number
    created_at: number
    created_by: number
    created_ip: number
    updated_at: number
    updated_by: number
    updated_ip: number
    company_id: number
    _all: number
  }


  export type FaqAvgAggregateInputType = {
    sequence_no?: true
  }

  export type FaqSumAggregateInputType = {
    sequence_no?: true
  }

  export type FaqMinAggregateInputType = {
    id?: true
    question?: true
    answer?: true
    category?: true
    sequence_no?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type FaqMaxAggregateInputType = {
    id?: true
    question?: true
    answer?: true
    category?: true
    sequence_no?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
  }

  export type FaqCountAggregateInputType = {
    id?: true
    question?: true
    answer?: true
    category?: true
    sequence_no?: true
    is_active?: true
    created_at?: true
    created_by?: true
    created_ip?: true
    updated_at?: true
    updated_by?: true
    updated_ip?: true
    company_id?: true
    _all?: true
  }

  export type FaqAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Faq to aggregate.
     */
    where?: FaqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Faqs to fetch.
     */
    orderBy?: FaqOrderByWithRelationInput | FaqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: FaqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Faqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned Faqs
    **/
    _count?: true | FaqCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: FaqAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: FaqSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: FaqMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: FaqMaxAggregateInputType
  }

  export type GetFaqAggregateType<T extends FaqAggregateArgs> = {
        [P in keyof T & keyof AggregateFaq]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateFaq[P]>
      : GetScalarType<T[P], AggregateFaq[P]>
  }




  export type FaqGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: FaqWhereInput
    orderBy?: FaqOrderByWithAggregationInput | FaqOrderByWithAggregationInput[]
    by: FaqScalarFieldEnum[] | FaqScalarFieldEnum
    having?: FaqScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: FaqCountAggregateInputType | true
    _avg?: FaqAvgAggregateInputType
    _sum?: FaqSumAggregateInputType
    _min?: FaqMinAggregateInputType
    _max?: FaqMaxAggregateInputType
  }

  export type FaqGroupByOutputType = {
    id: string
    question: string
    answer: string
    category: string | null
    sequence_no: number
    is_active: boolean
    created_at: Date
    created_by: string
    created_ip: string | null
    updated_at: Date
    updated_by: string | null
    updated_ip: string | null
    company_id: string
    _count: FaqCountAggregateOutputType | null
    _avg: FaqAvgAggregateOutputType | null
    _sum: FaqSumAggregateOutputType | null
    _min: FaqMinAggregateOutputType | null
    _max: FaqMaxAggregateOutputType | null
  }

  type GetFaqGroupByPayload<T extends FaqGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<FaqGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof FaqGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], FaqGroupByOutputType[P]>
            : GetScalarType<T[P], FaqGroupByOutputType[P]>
        }
      >
    >


  export type FaqSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    question?: boolean
    answer?: boolean
    category?: boolean
    sequence_no?: boolean
    is_active?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }, ExtArgs["result"]["faq"]>


  export type FaqSelectScalar = {
    id?: boolean
    question?: boolean
    answer?: boolean
    category?: boolean
    sequence_no?: boolean
    is_active?: boolean
    created_at?: boolean
    created_by?: boolean
    created_ip?: boolean
    updated_at?: boolean
    updated_by?: boolean
    updated_ip?: boolean
    company_id?: boolean
  }


  export type $FaqPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "Faq"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: string
      question: string
      answer: string
      category: string | null
      sequence_no: number
      is_active: boolean
      created_at: Date
      created_by: string
      created_ip: string | null
      updated_at: Date
      updated_by: string | null
      updated_ip: string | null
      company_id: string
    }, ExtArgs["result"]["faq"]>
    composites: {}
  }

  type FaqGetPayload<S extends boolean | null | undefined | FaqDefaultArgs> = $Result.GetResult<Prisma.$FaqPayload, S>

  type FaqCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<FaqFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: FaqCountAggregateInputType | true
    }

  export interface FaqDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['Faq'], meta: { name: 'Faq' } }
    /**
     * Find zero or one Faq that matches the filter.
     * @param {FaqFindUniqueArgs} args - Arguments to find a Faq
     * @example
     * // Get one Faq
     * const faq = await prisma.faq.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends FaqFindUniqueArgs>(args: SelectSubset<T, FaqFindUniqueArgs<ExtArgs>>): Prisma__FaqClient<$Result.GetResult<Prisma.$FaqPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Faq that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {FaqFindUniqueOrThrowArgs} args - Arguments to find a Faq
     * @example
     * // Get one Faq
     * const faq = await prisma.faq.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends FaqFindUniqueOrThrowArgs>(args: SelectSubset<T, FaqFindUniqueOrThrowArgs<ExtArgs>>): Prisma__FaqClient<$Result.GetResult<Prisma.$FaqPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Faq that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaqFindFirstArgs} args - Arguments to find a Faq
     * @example
     * // Get one Faq
     * const faq = await prisma.faq.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends FaqFindFirstArgs>(args?: SelectSubset<T, FaqFindFirstArgs<ExtArgs>>): Prisma__FaqClient<$Result.GetResult<Prisma.$FaqPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Faq that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaqFindFirstOrThrowArgs} args - Arguments to find a Faq
     * @example
     * // Get one Faq
     * const faq = await prisma.faq.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends FaqFindFirstOrThrowArgs>(args?: SelectSubset<T, FaqFindFirstOrThrowArgs<ExtArgs>>): Prisma__FaqClient<$Result.GetResult<Prisma.$FaqPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Faqs that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaqFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Faqs
     * const faqs = await prisma.faq.findMany()
     * 
     * // Get first 10 Faqs
     * const faqs = await prisma.faq.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const faqWithIdOnly = await prisma.faq.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends FaqFindManyArgs>(args?: SelectSubset<T, FaqFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$FaqPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Faq.
     * @param {FaqCreateArgs} args - Arguments to create a Faq.
     * @example
     * // Create one Faq
     * const Faq = await prisma.faq.create({
     *   data: {
     *     // ... data to create a Faq
     *   }
     * })
     * 
     */
    create<T extends FaqCreateArgs>(args: SelectSubset<T, FaqCreateArgs<ExtArgs>>): Prisma__FaqClient<$Result.GetResult<Prisma.$FaqPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Faqs.
     * @param {FaqCreateManyArgs} args - Arguments to create many Faqs.
     * @example
     * // Create many Faqs
     * const faq = await prisma.faq.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends FaqCreateManyArgs>(args?: SelectSubset<T, FaqCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Faq.
     * @param {FaqDeleteArgs} args - Arguments to delete one Faq.
     * @example
     * // Delete one Faq
     * const Faq = await prisma.faq.delete({
     *   where: {
     *     // ... filter to delete one Faq
     *   }
     * })
     * 
     */
    delete<T extends FaqDeleteArgs>(args: SelectSubset<T, FaqDeleteArgs<ExtArgs>>): Prisma__FaqClient<$Result.GetResult<Prisma.$FaqPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Faq.
     * @param {FaqUpdateArgs} args - Arguments to update one Faq.
     * @example
     * // Update one Faq
     * const faq = await prisma.faq.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends FaqUpdateArgs>(args: SelectSubset<T, FaqUpdateArgs<ExtArgs>>): Prisma__FaqClient<$Result.GetResult<Prisma.$FaqPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Faqs.
     * @param {FaqDeleteManyArgs} args - Arguments to filter Faqs to delete.
     * @example
     * // Delete a few Faqs
     * const { count } = await prisma.faq.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends FaqDeleteManyArgs>(args?: SelectSubset<T, FaqDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Faqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaqUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Faqs
     * const faq = await prisma.faq.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends FaqUpdateManyArgs>(args: SelectSubset<T, FaqUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Faq.
     * @param {FaqUpsertArgs} args - Arguments to update or create a Faq.
     * @example
     * // Update or create a Faq
     * const faq = await prisma.faq.upsert({
     *   create: {
     *     // ... data to create a Faq
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Faq we want to update
     *   }
     * })
     */
    upsert<T extends FaqUpsertArgs>(args: SelectSubset<T, FaqUpsertArgs<ExtArgs>>): Prisma__FaqClient<$Result.GetResult<Prisma.$FaqPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Faqs.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaqCountArgs} args - Arguments to filter Faqs to count.
     * @example
     * // Count the number of Faqs
     * const count = await prisma.faq.count({
     *   where: {
     *     // ... the filter for the Faqs we want to count
     *   }
     * })
    **/
    count<T extends FaqCountArgs>(
      args?: Subset<T, FaqCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], FaqCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Faq.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaqAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends FaqAggregateArgs>(args: Subset<T, FaqAggregateArgs>): Prisma.PrismaPromise<GetFaqAggregateType<T>>

    /**
     * Group by Faq.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {FaqGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends FaqGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: FaqGroupByArgs['orderBy'] }
        : { orderBy?: FaqGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, FaqGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetFaqGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the Faq model
   */
  readonly fields: FaqFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for Faq.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__FaqClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the Faq model
   */ 
  interface FaqFieldRefs {
    readonly id: FieldRef<"Faq", 'String'>
    readonly question: FieldRef<"Faq", 'String'>
    readonly answer: FieldRef<"Faq", 'String'>
    readonly category: FieldRef<"Faq", 'String'>
    readonly sequence_no: FieldRef<"Faq", 'Int'>
    readonly is_active: FieldRef<"Faq", 'Boolean'>
    readonly created_at: FieldRef<"Faq", 'DateTime'>
    readonly created_by: FieldRef<"Faq", 'String'>
    readonly created_ip: FieldRef<"Faq", 'String'>
    readonly updated_at: FieldRef<"Faq", 'DateTime'>
    readonly updated_by: FieldRef<"Faq", 'String'>
    readonly updated_ip: FieldRef<"Faq", 'String'>
    readonly company_id: FieldRef<"Faq", 'String'>
  }
    

  // Custom InputTypes
  /**
   * Faq findUnique
   */
  export type FaqFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faq
     */
    select?: FaqSelect<ExtArgs> | null
    /**
     * Filter, which Faq to fetch.
     */
    where: FaqWhereUniqueInput
  }

  /**
   * Faq findUniqueOrThrow
   */
  export type FaqFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faq
     */
    select?: FaqSelect<ExtArgs> | null
    /**
     * Filter, which Faq to fetch.
     */
    where: FaqWhereUniqueInput
  }

  /**
   * Faq findFirst
   */
  export type FaqFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faq
     */
    select?: FaqSelect<ExtArgs> | null
    /**
     * Filter, which Faq to fetch.
     */
    where?: FaqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Faqs to fetch.
     */
    orderBy?: FaqOrderByWithRelationInput | FaqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Faqs.
     */
    cursor?: FaqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Faqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Faqs.
     */
    distinct?: FaqScalarFieldEnum | FaqScalarFieldEnum[]
  }

  /**
   * Faq findFirstOrThrow
   */
  export type FaqFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faq
     */
    select?: FaqSelect<ExtArgs> | null
    /**
     * Filter, which Faq to fetch.
     */
    where?: FaqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Faqs to fetch.
     */
    orderBy?: FaqOrderByWithRelationInput | FaqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for Faqs.
     */
    cursor?: FaqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Faqs.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of Faqs.
     */
    distinct?: FaqScalarFieldEnum | FaqScalarFieldEnum[]
  }

  /**
   * Faq findMany
   */
  export type FaqFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faq
     */
    select?: FaqSelect<ExtArgs> | null
    /**
     * Filter, which Faqs to fetch.
     */
    where?: FaqWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of Faqs to fetch.
     */
    orderBy?: FaqOrderByWithRelationInput | FaqOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing Faqs.
     */
    cursor?: FaqWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` Faqs from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` Faqs.
     */
    skip?: number
    distinct?: FaqScalarFieldEnum | FaqScalarFieldEnum[]
  }

  /**
   * Faq create
   */
  export type FaqCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faq
     */
    select?: FaqSelect<ExtArgs> | null
    /**
     * The data needed to create a Faq.
     */
    data: XOR<FaqCreateInput, FaqUncheckedCreateInput>
  }

  /**
   * Faq createMany
   */
  export type FaqCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many Faqs.
     */
    data: FaqCreateManyInput | FaqCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * Faq update
   */
  export type FaqUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faq
     */
    select?: FaqSelect<ExtArgs> | null
    /**
     * The data needed to update a Faq.
     */
    data: XOR<FaqUpdateInput, FaqUncheckedUpdateInput>
    /**
     * Choose, which Faq to update.
     */
    where: FaqWhereUniqueInput
  }

  /**
   * Faq updateMany
   */
  export type FaqUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update Faqs.
     */
    data: XOR<FaqUpdateManyMutationInput, FaqUncheckedUpdateManyInput>
    /**
     * Filter which Faqs to update
     */
    where?: FaqWhereInput
  }

  /**
   * Faq upsert
   */
  export type FaqUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faq
     */
    select?: FaqSelect<ExtArgs> | null
    /**
     * The filter to search for the Faq to update in case it exists.
     */
    where: FaqWhereUniqueInput
    /**
     * In case the Faq found by the `where` argument doesn't exist, create a new Faq with this data.
     */
    create: XOR<FaqCreateInput, FaqUncheckedCreateInput>
    /**
     * In case the Faq was found with the provided `where` argument, update it with this data.
     */
    update: XOR<FaqUpdateInput, FaqUncheckedUpdateInput>
  }

  /**
   * Faq delete
   */
  export type FaqDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faq
     */
    select?: FaqSelect<ExtArgs> | null
    /**
     * Filter which Faq to delete.
     */
    where: FaqWhereUniqueInput
  }

  /**
   * Faq deleteMany
   */
  export type FaqDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which Faqs to delete
     */
    where?: FaqWhereInput
  }

  /**
   * Faq without action
   */
  export type FaqDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Faq
     */
    select?: FaqSelect<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const ApplicationLogScalarFieldEnum: {
    id: 'id',
    level: 'level',
    message: 'message',
    meta: 'meta',
    timestamp: 'timestamp'
  };

  export type ApplicationLogScalarFieldEnum = (typeof ApplicationLogScalarFieldEnum)[keyof typeof ApplicationLogScalarFieldEnum]


  export const AuditLogScalarFieldEnum: {
    id: 'id',
    table_name: 'table_name',
    record_id: 'record_id',
    action: 'action',
    previous_data: 'previous_data',
    new_data: 'new_data',
    changed_by: 'changed_by',
    timestamp: 'timestamp'
  };

  export type AuditLogScalarFieldEnum = (typeof AuditLogScalarFieldEnum)[keyof typeof AuditLogScalarFieldEnum]


  export const CompanyScalarFieldEnum: {
    id: 'id',
    company_name: 'company_name',
    company_short_name: 'company_short_name',
    company_code: 'company_code',
    registration_number: 'registration_number',
    tax_id: 'tax_id',
    address: 'address',
    city: 'city',
    state: 'state',
    country: 'country',
    postal_code: 'postal_code',
    phone: 'phone',
    email: 'email',
    website: 'website',
    is_seller: 'is_seller',
    is_verified: 'is_verified',
    seller_id: 'seller_id',
    industry: 'industry',
    number_of_employees: 'number_of_employees',
    annual_revenue: 'annual_revenue',
    description: 'description',
    is_active: 'is_active',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip'
  };

  export type CompanyScalarFieldEnum = (typeof CompanyScalarFieldEnum)[keyof typeof CompanyScalarFieldEnum]


  export const CompanyAdditionalInfoScalarFieldEnum: {
    id: 'id',
    company_id: 'company_id',
    short_description: 'short_description',
    facebook_link: 'facebook_link',
    twitter_link: 'twitter_link',
    instagram_link: 'instagram_link',
    linkedin_link: 'linkedin_link',
    youtube_link: 'youtube_link',
    whatsapp_number: 'whatsapp_number',
    google_map_link: 'google_map_link',
    vision: 'vision',
    mission: 'mission',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip'
  };

  export type CompanyAdditionalInfoScalarFieldEnum = (typeof CompanyAdditionalInfoScalarFieldEnum)[keyof typeof CompanyAdditionalInfoScalarFieldEnum]


  export const UserScalarFieldEnum: {
    id: 'id',
    fullname: 'fullname',
    username: 'username',
    email: 'email',
    password: 'password',
    address: 'address',
    phone: 'phone',
    is_active: 'is_active',
    is_admin: 'is_admin',
    is_password_reset: 'is_password_reset',
    user_type: 'user_type',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type UserScalarFieldEnum = (typeof UserScalarFieldEnum)[keyof typeof UserScalarFieldEnum]


  export const RefreshTokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    userId: 'userId',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    isRevoked: 'isRevoked'
  };

  export type RefreshTokenScalarFieldEnum = (typeof RefreshTokenScalarFieldEnum)[keyof typeof RefreshTokenScalarFieldEnum]


  export const SecurityRuleScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type SecurityRuleScalarFieldEnum = (typeof SecurityRuleScalarFieldEnum)[keyof typeof SecurityRuleScalarFieldEnum]


  export const SecurityRuleWiseMenuPermissionScalarFieldEnum: {
    id: 'id',
    menu_id: 'menu_id',
    can_view: 'can_view',
    can_create: 'can_create',
    can_update: 'can_update',
    can_delete: 'can_delete',
    can_report: 'can_report',
    rule_id: 'rule_id',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type SecurityRuleWiseMenuPermissionScalarFieldEnum = (typeof SecurityRuleWiseMenuPermissionScalarFieldEnum)[keyof typeof SecurityRuleWiseMenuPermissionScalarFieldEnum]


  export const SecurityGroupScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type SecurityGroupScalarFieldEnum = (typeof SecurityGroupScalarFieldEnum)[keyof typeof SecurityGroupScalarFieldEnum]


  export const SecurityGroupRuleScalarFieldEnum: {
    id: 'id',
    group_id: 'group_id',
    rule_id: 'rule_id',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type SecurityGroupRuleScalarFieldEnum = (typeof SecurityGroupRuleScalarFieldEnum)[keyof typeof SecurityGroupRuleScalarFieldEnum]


  export const UserGroupScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    group_id: 'group_id',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type UserGroupScalarFieldEnum = (typeof UserGroupScalarFieldEnum)[keyof typeof UserGroupScalarFieldEnum]


  export const MenuScalarFieldEnum: {
    id: 'id',
    title: 'title',
    url: 'url',
    icon: 'icon',
    icon_library: 'icon_library',
    parent_id: 'parent_id',
    sequence_no: 'sequence_no',
    is_active: 'is_active',
    can_view: 'can_view',
    can_create: 'can_create',
    can_update: 'can_update',
    can_delete: 'can_delete',
    can_report: 'can_report'
  };

  export type MenuScalarFieldEnum = (typeof MenuScalarFieldEnum)[keyof typeof MenuScalarFieldEnum]


  export const ProductScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    description: 'description',
    price: 'price',
    priceRange: 'priceRange',
    compareAtPrice: 'compareAtPrice',
    images: 'images',
    thumbnail: 'thumbnail',
    hasVariants: 'hasVariants',
    stock: 'stock',
    tags: 'tags',
    rating: 'rating',
    reviewCount: 'reviewCount',
    status: 'status',
    isFeatured: 'isFeatured',
    isNew: 'isNew',
    onSale: 'onSale',
    salePercentage: 'salePercentage',
    salePrice: 'salePrice',
    saleStartDate: 'saleStartDate',
    saleEndDate: 'saleEndDate',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id',
    categoryId: 'categoryId',
    subcategoryId: 'subcategoryId',
    brandId: 'brandId',
    sellerId: 'sellerId',
    specialOfferId: 'specialOfferId'
  };

  export type ProductScalarFieldEnum = (typeof ProductScalarFieldEnum)[keyof typeof ProductScalarFieldEnum]


  export const CategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    image: 'image',
    icon: 'icon',
    featured: 'featured',
    productCount: 'productCount',
    is_active: 'is_active',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type CategoryScalarFieldEnum = (typeof CategoryScalarFieldEnum)[keyof typeof CategoryScalarFieldEnum]


  export const SubcategoryScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    productCount: 'productCount',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id',
    categoryId: 'categoryId'
  };

  export type SubcategoryScalarFieldEnum = (typeof SubcategoryScalarFieldEnum)[keyof typeof SubcategoryScalarFieldEnum]


  export const BrandScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type BrandScalarFieldEnum = (typeof BrandScalarFieldEnum)[keyof typeof BrandScalarFieldEnum]


  export const ProductAttributeScalarFieldEnum: {
    id: 'id',
    name: 'name',
    type: 'type',
    value: 'value',
    unit: 'unit',
    displayValue: 'displayValue',
    options: 'options',
    productId: 'productId'
  };

  export type ProductAttributeScalarFieldEnum = (typeof ProductAttributeScalarFieldEnum)[keyof typeof ProductAttributeScalarFieldEnum]


  export const ProductVariantScalarFieldEnum: {
    id: 'id',
    sku: 'sku',
    price: 'price',
    stock: 'stock',
    attributes: 'attributes',
    images: 'images',
    sequence_no: 'sequence_no',
    productId: 'productId'
  };

  export type ProductVariantScalarFieldEnum = (typeof ProductVariantScalarFieldEnum)[keyof typeof ProductVariantScalarFieldEnum]


  export const SellerScalarFieldEnum: {
    id: 'id',
    name: 'name',
    slug: 'slug',
    email: 'email',
    phone: 'phone',
    logo: 'logo',
    rating: 'rating',
    reviewCount: 'reviewCount',
    verified: 'verified',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type SellerScalarFieldEnum = (typeof SellerScalarFieldEnum)[keyof typeof SellerScalarFieldEnum]


  export const ReviewScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    userName: 'userName',
    userAvatar: 'userAvatar',
    rating: 'rating',
    title: 'title',
    comment: 'comment',
    helpful: 'helpful',
    createdAt: 'createdAt',
    variantId: 'variantId',
    productId: 'productId'
  };

  export type ReviewScalarFieldEnum = (typeof ReviewScalarFieldEnum)[keyof typeof ReviewScalarFieldEnum]


  export const CustomerScalarFieldEnum: {
    id: 'id',
    first_name: 'first_name',
    last_name: 'last_name',
    email: 'email',
    phone: 'phone',
    password: 'password',
    is_active: 'is_active',
    remember_token: 'remember_token',
    email_verified: 'email_verified',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip'
  };

  export type CustomerScalarFieldEnum = (typeof CustomerScalarFieldEnum)[keyof typeof CustomerScalarFieldEnum]


  export const CustomerRefreshTokenScalarFieldEnum: {
    id: 'id',
    token: 'token',
    customerId: 'customerId',
    expiresAt: 'expiresAt',
    createdAt: 'createdAt',
    isRevoked: 'isRevoked'
  };

  export type CustomerRefreshTokenScalarFieldEnum = (typeof CustomerRefreshTokenScalarFieldEnum)[keyof typeof CustomerRefreshTokenScalarFieldEnum]


  export const OrderScalarFieldEnum: {
    id: 'id',
    orderNumber: 'orderNumber',
    userId: 'userId',
    status: 'status',
    totalAmount: 'totalAmount',
    shippingCost: 'shippingCost',
    tax: 'tax',
    discount: 'discount',
    finalAmount: 'finalAmount',
    shippingAddress: 'shippingAddress',
    billingAddress: 'billingAddress',
    paymentMethod: 'paymentMethod',
    paymentStatus: 'paymentStatus',
    trackingNumber: 'trackingNumber',
    trackingStatus: 'trackingStatus',
    customerId: 'customerId',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id',
    paymentGateway: 'paymentGateway',
    sslcommerzTransactionId: 'sslcommerzTransactionId',
    paypalOrderId: 'paypalOrderId',
    paymentMetadata: 'paymentMetadata',
    coupon_id: 'coupon_id',
    discount_amount: 'discount_amount'
  };

  export type OrderScalarFieldEnum = (typeof OrderScalarFieldEnum)[keyof typeof OrderScalarFieldEnum]


  export const OrderItemScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    productId: 'productId',
    variantId: 'variantId',
    quantity: 'quantity',
    unitPrice: 'unitPrice',
    totalPrice: 'totalPrice',
    productName: 'productName',
    variantAttributes: 'variantAttributes',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type OrderItemScalarFieldEnum = (typeof OrderItemScalarFieldEnum)[keyof typeof OrderItemScalarFieldEnum]


  export const StockMovementScalarFieldEnum: {
    id: 'id',
    productId: 'productId',
    variantId: 'variantId',
    quantity: 'quantity',
    type: 'type',
    reference: 'reference',
    notes: 'notes',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type StockMovementScalarFieldEnum = (typeof StockMovementScalarFieldEnum)[keyof typeof StockMovementScalarFieldEnum]


  export const UserSettingsScalarFieldEnum: {
    id: 'id',
    user_id: 'user_id',
    settings: 'settings',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type UserSettingsScalarFieldEnum = (typeof UserSettingsScalarFieldEnum)[keyof typeof UserSettingsScalarFieldEnum]


  export const CustomerAddressScalarFieldEnum: {
    id: 'id',
    customerId: 'customerId',
    label: 'label',
    firstName: 'firstName',
    lastName: 'lastName',
    phone: 'phone',
    email: 'email',
    address: 'address',
    apartment: 'apartment',
    city: 'city',
    state: 'state',
    country: 'country',
    postalCode: 'postalCode',
    isDefault: 'isDefault',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip'
  };

  export type CustomerAddressScalarFieldEnum = (typeof CustomerAddressScalarFieldEnum)[keyof typeof CustomerAddressScalarFieldEnum]


  export const PendingOrderScalarFieldEnum: {
    id: 'id',
    transactionId: 'transactionId',
    customerId: 'customerId',
    addressId: 'addressId',
    items: 'items',
    couponId: 'couponId',
    couponCode: 'couponCode',
    subtotal: 'subtotal',
    shippingCost: 'shippingCost',
    discount: 'discount',
    total: 'total',
    status: 'status',
    paymentMethod: 'paymentMethod',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    shippingChargeId: 'shippingChargeId'
  };

  export type PendingOrderScalarFieldEnum = (typeof PendingOrderScalarFieldEnum)[keyof typeof PendingOrderScalarFieldEnum]


  export const PaymentTransactionScalarFieldEnum: {
    id: 'id',
    orderId: 'orderId',
    transactionId: 'transactionId',
    gateway: 'gateway',
    amount: 'amount',
    currency: 'currency',
    status: 'status',
    metadata: 'metadata',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip'
  };

  export type PaymentTransactionScalarFieldEnum = (typeof PaymentTransactionScalarFieldEnum)[keyof typeof PaymentTransactionScalarFieldEnum]


  export const WishlistScalarFieldEnum: {
    id: 'id',
    userId: 'userId',
    productId: 'productId',
    created_at: 'created_at',
    updated_at: 'updated_at'
  };

  export type WishlistScalarFieldEnum = (typeof WishlistScalarFieldEnum)[keyof typeof WishlistScalarFieldEnum]


  export const BannerScalarFieldEnum: {
    id: 'id',
    title: 'title',
    subtitle: 'subtitle',
    image: 'image',
    link: 'link',
    type: 'type',
    sequence_no: 'sequence_no',
    is_active: 'is_active',
    start_date: 'start_date',
    end_date: 'end_date',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type BannerScalarFieldEnum = (typeof BannerScalarFieldEnum)[keyof typeof BannerScalarFieldEnum]


  export const SpecialOfferScalarFieldEnum: {
    id: 'id',
    title: 'title',
    subtitle: 'subtitle',
    discount: 'discount',
    start_date: 'start_date',
    end_date: 'end_date',
    is_active: 'is_active',
    image: 'image',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type SpecialOfferScalarFieldEnum = (typeof SpecialOfferScalarFieldEnum)[keyof typeof SpecialOfferScalarFieldEnum]


  export const CouponScalarFieldEnum: {
    id: 'id',
    code: 'code',
    description: 'description',
    discount_type: 'discount_type',
    discount_amount: 'discount_amount',
    minimum_purchase: 'minimum_purchase',
    maximum_discount: 'maximum_discount',
    start_date: 'start_date',
    end_date: 'end_date',
    usage_limit: 'usage_limit',
    used_count: 'used_count',
    is_active: 'is_active',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type CouponScalarFieldEnum = (typeof CouponScalarFieldEnum)[keyof typeof CouponScalarFieldEnum]


  export const ShippingChargeScalarFieldEnum: {
    id: 'id',
    name: 'name',
    description: 'description',
    amount: 'amount',
    is_active: 'is_active',
    is_default: 'is_default',
    min_amount: 'min_amount',
    max_amount: 'max_amount',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type ShippingChargeScalarFieldEnum = (typeof ShippingChargeScalarFieldEnum)[keyof typeof ShippingChargeScalarFieldEnum]


  export const PageScalarFieldEnum: {
    id: 'id',
    title: 'title',
    slug: 'slug',
    content: 'content',
    meta_title: 'meta_title',
    meta_desc: 'meta_desc',
    is_active: 'is_active',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type PageScalarFieldEnum = (typeof PageScalarFieldEnum)[keyof typeof PageScalarFieldEnum]


  export const PageSectionScalarFieldEnum: {
    id: 'id',
    page_id: 'page_id',
    title: 'title',
    content: 'content',
    image: 'image',
    sequence_no: 'sequence_no',
    is_active: 'is_active',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type PageSectionScalarFieldEnum = (typeof PageSectionScalarFieldEnum)[keyof typeof PageSectionScalarFieldEnum]


  export const FaqScalarFieldEnum: {
    id: 'id',
    question: 'question',
    answer: 'answer',
    category: 'category',
    sequence_no: 'sequence_no',
    is_active: 'is_active',
    created_at: 'created_at',
    created_by: 'created_by',
    created_ip: 'created_ip',
    updated_at: 'updated_at',
    updated_by: 'updated_by',
    updated_ip: 'updated_ip',
    company_id: 'company_id'
  };

  export type FaqScalarFieldEnum = (typeof FaqScalarFieldEnum)[keyof typeof FaqScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const JsonNullValueInput: {
    JsonNull: typeof JsonNull
  };

  export type JsonNullValueInput = (typeof JsonNullValueInput)[keyof typeof JsonNullValueInput]


  export const NullableJsonNullValueInput: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull
  };

  export type NullableJsonNullValueInput = (typeof NullableJsonNullValueInput)[keyof typeof NullableJsonNullValueInput]


  export const JsonNullValueFilter: {
    DbNull: typeof DbNull,
    JsonNull: typeof JsonNull,
    AnyNull: typeof AnyNull
  };

  export type JsonNullValueFilter = (typeof JsonNullValueFilter)[keyof typeof JsonNullValueFilter]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'Json'
   */
  export type JsonFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Json'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Boolean'
   */
  export type BooleanFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Boolean'>
    


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'Decimal'
   */
  export type DecimalFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Decimal'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    


  /**
   * Reference to a field of type 'OrderStatus'
   */
  export type EnumOrderStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'OrderStatus'>
    


  /**
   * Reference to a field of type 'PaymentStatus'
   */
  export type EnumPaymentStatusFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'PaymentStatus'>
    


  /**
   * Reference to a field of type 'MovementType'
   */
  export type EnumMovementTypeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'MovementType'>
    
  /**
   * Deep Input Types
   */


  export type ApplicationLogWhereInput = {
    AND?: ApplicationLogWhereInput | ApplicationLogWhereInput[]
    OR?: ApplicationLogWhereInput[]
    NOT?: ApplicationLogWhereInput | ApplicationLogWhereInput[]
    id?: StringFilter<"ApplicationLog"> | string
    level?: StringFilter<"ApplicationLog"> | string
    message?: StringFilter<"ApplicationLog"> | string
    meta?: JsonFilter<"ApplicationLog">
    timestamp?: DateTimeFilter<"ApplicationLog"> | Date | string
  }

  export type ApplicationLogOrderByWithRelationInput = {
    id?: SortOrder
    level?: SortOrder
    message?: SortOrder
    meta?: SortOrder
    timestamp?: SortOrder
  }

  export type ApplicationLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ApplicationLogWhereInput | ApplicationLogWhereInput[]
    OR?: ApplicationLogWhereInput[]
    NOT?: ApplicationLogWhereInput | ApplicationLogWhereInput[]
    level?: StringFilter<"ApplicationLog"> | string
    message?: StringFilter<"ApplicationLog"> | string
    meta?: JsonFilter<"ApplicationLog">
    timestamp?: DateTimeFilter<"ApplicationLog"> | Date | string
  }, "id">

  export type ApplicationLogOrderByWithAggregationInput = {
    id?: SortOrder
    level?: SortOrder
    message?: SortOrder
    meta?: SortOrder
    timestamp?: SortOrder
    _count?: ApplicationLogCountOrderByAggregateInput
    _max?: ApplicationLogMaxOrderByAggregateInput
    _min?: ApplicationLogMinOrderByAggregateInput
  }

  export type ApplicationLogScalarWhereWithAggregatesInput = {
    AND?: ApplicationLogScalarWhereWithAggregatesInput | ApplicationLogScalarWhereWithAggregatesInput[]
    OR?: ApplicationLogScalarWhereWithAggregatesInput[]
    NOT?: ApplicationLogScalarWhereWithAggregatesInput | ApplicationLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ApplicationLog"> | string
    level?: StringWithAggregatesFilter<"ApplicationLog"> | string
    message?: StringWithAggregatesFilter<"ApplicationLog"> | string
    meta?: JsonWithAggregatesFilter<"ApplicationLog">
    timestamp?: DateTimeWithAggregatesFilter<"ApplicationLog"> | Date | string
  }

  export type AuditLogWhereInput = {
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    id?: StringFilter<"AuditLog"> | string
    table_name?: StringFilter<"AuditLog"> | string
    record_id?: StringFilter<"AuditLog"> | string
    action?: StringFilter<"AuditLog"> | string
    previous_data?: JsonFilter<"AuditLog">
    new_data?: JsonFilter<"AuditLog">
    changed_by?: StringFilter<"AuditLog"> | string
    timestamp?: DateTimeFilter<"AuditLog"> | Date | string
  }

  export type AuditLogOrderByWithRelationInput = {
    id?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    action?: SortOrder
    previous_data?: SortOrder
    new_data?: SortOrder
    changed_by?: SortOrder
    timestamp?: SortOrder
  }

  export type AuditLogWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: AuditLogWhereInput | AuditLogWhereInput[]
    OR?: AuditLogWhereInput[]
    NOT?: AuditLogWhereInput | AuditLogWhereInput[]
    table_name?: StringFilter<"AuditLog"> | string
    record_id?: StringFilter<"AuditLog"> | string
    action?: StringFilter<"AuditLog"> | string
    previous_data?: JsonFilter<"AuditLog">
    new_data?: JsonFilter<"AuditLog">
    changed_by?: StringFilter<"AuditLog"> | string
    timestamp?: DateTimeFilter<"AuditLog"> | Date | string
  }, "id">

  export type AuditLogOrderByWithAggregationInput = {
    id?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    action?: SortOrder
    previous_data?: SortOrder
    new_data?: SortOrder
    changed_by?: SortOrder
    timestamp?: SortOrder
    _count?: AuditLogCountOrderByAggregateInput
    _max?: AuditLogMaxOrderByAggregateInput
    _min?: AuditLogMinOrderByAggregateInput
  }

  export type AuditLogScalarWhereWithAggregatesInput = {
    AND?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    OR?: AuditLogScalarWhereWithAggregatesInput[]
    NOT?: AuditLogScalarWhereWithAggregatesInput | AuditLogScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"AuditLog"> | string
    table_name?: StringWithAggregatesFilter<"AuditLog"> | string
    record_id?: StringWithAggregatesFilter<"AuditLog"> | string
    action?: StringWithAggregatesFilter<"AuditLog"> | string
    previous_data?: JsonWithAggregatesFilter<"AuditLog">
    new_data?: JsonWithAggregatesFilter<"AuditLog">
    changed_by?: StringWithAggregatesFilter<"AuditLog"> | string
    timestamp?: DateTimeWithAggregatesFilter<"AuditLog"> | Date | string
  }

  export type CompanyWhereInput = {
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    id?: StringFilter<"Company"> | string
    company_name?: StringFilter<"Company"> | string
    company_short_name?: StringNullableFilter<"Company"> | string | null
    company_code?: StringNullableFilter<"Company"> | string | null
    registration_number?: StringFilter<"Company"> | string
    tax_id?: StringFilter<"Company"> | string
    address?: StringNullableFilter<"Company"> | string | null
    city?: StringNullableFilter<"Company"> | string | null
    state?: StringNullableFilter<"Company"> | string | null
    country?: StringNullableFilter<"Company"> | string | null
    postal_code?: StringNullableFilter<"Company"> | string | null
    phone?: StringFilter<"Company"> | string
    email?: StringFilter<"Company"> | string
    website?: StringNullableFilter<"Company"> | string | null
    is_seller?: BoolFilter<"Company"> | boolean
    is_verified?: BoolFilter<"Company"> | boolean
    seller_id?: StringNullableFilter<"Company"> | string | null
    industry?: StringNullableFilter<"Company"> | string | null
    number_of_employees?: IntNullableFilter<"Company"> | number | null
    annual_revenue?: DecimalNullableFilter<"Company"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableFilter<"Company"> | string | null
    is_active?: BoolFilter<"Company"> | boolean
    created_at?: DateTimeFilter<"Company"> | Date | string
    created_by?: StringFilter<"Company"> | string
    created_ip?: StringNullableFilter<"Company"> | string | null
    updated_at?: DateTimeFilter<"Company"> | Date | string
    updated_by?: StringNullableFilter<"Company"> | string | null
    updated_ip?: StringNullableFilter<"Company"> | string | null
    seller?: XOR<SellerNullableRelationFilter, SellerWhereInput> | null
    CompanyAdditionalInfo?: CompanyAdditionalInfoListRelationFilter
  }

  export type CompanyOrderByWithRelationInput = {
    id?: SortOrder
    company_name?: SortOrder
    company_short_name?: SortOrderInput | SortOrder
    company_code?: SortOrderInput | SortOrder
    registration_number?: SortOrder
    tax_id?: SortOrder
    address?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    postal_code?: SortOrderInput | SortOrder
    phone?: SortOrder
    email?: SortOrder
    website?: SortOrderInput | SortOrder
    is_seller?: SortOrder
    is_verified?: SortOrder
    seller_id?: SortOrderInput | SortOrder
    industry?: SortOrderInput | SortOrder
    number_of_employees?: SortOrderInput | SortOrder
    annual_revenue?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    seller?: SellerOrderByWithRelationInput
    CompanyAdditionalInfo?: CompanyAdditionalInfoOrderByRelationAggregateInput
  }

  export type CompanyWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CompanyWhereInput | CompanyWhereInput[]
    OR?: CompanyWhereInput[]
    NOT?: CompanyWhereInput | CompanyWhereInput[]
    company_name?: StringFilter<"Company"> | string
    company_short_name?: StringNullableFilter<"Company"> | string | null
    company_code?: StringNullableFilter<"Company"> | string | null
    registration_number?: StringFilter<"Company"> | string
    tax_id?: StringFilter<"Company"> | string
    address?: StringNullableFilter<"Company"> | string | null
    city?: StringNullableFilter<"Company"> | string | null
    state?: StringNullableFilter<"Company"> | string | null
    country?: StringNullableFilter<"Company"> | string | null
    postal_code?: StringNullableFilter<"Company"> | string | null
    phone?: StringFilter<"Company"> | string
    email?: StringFilter<"Company"> | string
    website?: StringNullableFilter<"Company"> | string | null
    is_seller?: BoolFilter<"Company"> | boolean
    is_verified?: BoolFilter<"Company"> | boolean
    seller_id?: StringNullableFilter<"Company"> | string | null
    industry?: StringNullableFilter<"Company"> | string | null
    number_of_employees?: IntNullableFilter<"Company"> | number | null
    annual_revenue?: DecimalNullableFilter<"Company"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableFilter<"Company"> | string | null
    is_active?: BoolFilter<"Company"> | boolean
    created_at?: DateTimeFilter<"Company"> | Date | string
    created_by?: StringFilter<"Company"> | string
    created_ip?: StringNullableFilter<"Company"> | string | null
    updated_at?: DateTimeFilter<"Company"> | Date | string
    updated_by?: StringNullableFilter<"Company"> | string | null
    updated_ip?: StringNullableFilter<"Company"> | string | null
    seller?: XOR<SellerNullableRelationFilter, SellerWhereInput> | null
    CompanyAdditionalInfo?: CompanyAdditionalInfoListRelationFilter
  }, "id">

  export type CompanyOrderByWithAggregationInput = {
    id?: SortOrder
    company_name?: SortOrder
    company_short_name?: SortOrderInput | SortOrder
    company_code?: SortOrderInput | SortOrder
    registration_number?: SortOrder
    tax_id?: SortOrder
    address?: SortOrderInput | SortOrder
    city?: SortOrderInput | SortOrder
    state?: SortOrderInput | SortOrder
    country?: SortOrderInput | SortOrder
    postal_code?: SortOrderInput | SortOrder
    phone?: SortOrder
    email?: SortOrder
    website?: SortOrderInput | SortOrder
    is_seller?: SortOrder
    is_verified?: SortOrder
    seller_id?: SortOrderInput | SortOrder
    industry?: SortOrderInput | SortOrder
    number_of_employees?: SortOrderInput | SortOrder
    annual_revenue?: SortOrderInput | SortOrder
    description?: SortOrderInput | SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    _count?: CompanyCountOrderByAggregateInput
    _avg?: CompanyAvgOrderByAggregateInput
    _max?: CompanyMaxOrderByAggregateInput
    _min?: CompanyMinOrderByAggregateInput
    _sum?: CompanySumOrderByAggregateInput
  }

  export type CompanyScalarWhereWithAggregatesInput = {
    AND?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    OR?: CompanyScalarWhereWithAggregatesInput[]
    NOT?: CompanyScalarWhereWithAggregatesInput | CompanyScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Company"> | string
    company_name?: StringWithAggregatesFilter<"Company"> | string
    company_short_name?: StringNullableWithAggregatesFilter<"Company"> | string | null
    company_code?: StringNullableWithAggregatesFilter<"Company"> | string | null
    registration_number?: StringWithAggregatesFilter<"Company"> | string
    tax_id?: StringWithAggregatesFilter<"Company"> | string
    address?: StringNullableWithAggregatesFilter<"Company"> | string | null
    city?: StringNullableWithAggregatesFilter<"Company"> | string | null
    state?: StringNullableWithAggregatesFilter<"Company"> | string | null
    country?: StringNullableWithAggregatesFilter<"Company"> | string | null
    postal_code?: StringNullableWithAggregatesFilter<"Company"> | string | null
    phone?: StringWithAggregatesFilter<"Company"> | string
    email?: StringWithAggregatesFilter<"Company"> | string
    website?: StringNullableWithAggregatesFilter<"Company"> | string | null
    is_seller?: BoolWithAggregatesFilter<"Company"> | boolean
    is_verified?: BoolWithAggregatesFilter<"Company"> | boolean
    seller_id?: StringNullableWithAggregatesFilter<"Company"> | string | null
    industry?: StringNullableWithAggregatesFilter<"Company"> | string | null
    number_of_employees?: IntNullableWithAggregatesFilter<"Company"> | number | null
    annual_revenue?: DecimalNullableWithAggregatesFilter<"Company"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableWithAggregatesFilter<"Company"> | string | null
    is_active?: BoolWithAggregatesFilter<"Company"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"Company"> | Date | string
    created_by?: StringWithAggregatesFilter<"Company"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Company"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Company"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Company"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Company"> | string | null
  }

  export type CompanyAdditionalInfoWhereInput = {
    AND?: CompanyAdditionalInfoWhereInput | CompanyAdditionalInfoWhereInput[]
    OR?: CompanyAdditionalInfoWhereInput[]
    NOT?: CompanyAdditionalInfoWhereInput | CompanyAdditionalInfoWhereInput[]
    id?: StringFilter<"CompanyAdditionalInfo"> | string
    company_id?: StringFilter<"CompanyAdditionalInfo"> | string
    short_description?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    facebook_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    twitter_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    instagram_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    linkedin_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    youtube_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    whatsapp_number?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    google_map_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    vision?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    mission?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    created_at?: DateTimeFilter<"CompanyAdditionalInfo"> | Date | string
    created_by?: StringFilter<"CompanyAdditionalInfo"> | string
    created_ip?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    updated_at?: DateTimeFilter<"CompanyAdditionalInfo"> | Date | string
    updated_by?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    updated_ip?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }

  export type CompanyAdditionalInfoOrderByWithRelationInput = {
    id?: SortOrder
    company_id?: SortOrder
    short_description?: SortOrderInput | SortOrder
    facebook_link?: SortOrderInput | SortOrder
    twitter_link?: SortOrderInput | SortOrder
    instagram_link?: SortOrderInput | SortOrder
    linkedin_link?: SortOrderInput | SortOrder
    youtube_link?: SortOrderInput | SortOrder
    whatsapp_number?: SortOrderInput | SortOrder
    google_map_link?: SortOrderInput | SortOrder
    vision?: SortOrderInput | SortOrder
    mission?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company?: CompanyOrderByWithRelationInput
  }

  export type CompanyAdditionalInfoWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CompanyAdditionalInfoWhereInput | CompanyAdditionalInfoWhereInput[]
    OR?: CompanyAdditionalInfoWhereInput[]
    NOT?: CompanyAdditionalInfoWhereInput | CompanyAdditionalInfoWhereInput[]
    company_id?: StringFilter<"CompanyAdditionalInfo"> | string
    short_description?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    facebook_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    twitter_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    instagram_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    linkedin_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    youtube_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    whatsapp_number?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    google_map_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    vision?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    mission?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    created_at?: DateTimeFilter<"CompanyAdditionalInfo"> | Date | string
    created_by?: StringFilter<"CompanyAdditionalInfo"> | string
    created_ip?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    updated_at?: DateTimeFilter<"CompanyAdditionalInfo"> | Date | string
    updated_by?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    updated_ip?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    company?: XOR<CompanyRelationFilter, CompanyWhereInput>
  }, "id">

  export type CompanyAdditionalInfoOrderByWithAggregationInput = {
    id?: SortOrder
    company_id?: SortOrder
    short_description?: SortOrderInput | SortOrder
    facebook_link?: SortOrderInput | SortOrder
    twitter_link?: SortOrderInput | SortOrder
    instagram_link?: SortOrderInput | SortOrder
    linkedin_link?: SortOrderInput | SortOrder
    youtube_link?: SortOrderInput | SortOrder
    whatsapp_number?: SortOrderInput | SortOrder
    google_map_link?: SortOrderInput | SortOrder
    vision?: SortOrderInput | SortOrder
    mission?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    _count?: CompanyAdditionalInfoCountOrderByAggregateInput
    _max?: CompanyAdditionalInfoMaxOrderByAggregateInput
    _min?: CompanyAdditionalInfoMinOrderByAggregateInput
  }

  export type CompanyAdditionalInfoScalarWhereWithAggregatesInput = {
    AND?: CompanyAdditionalInfoScalarWhereWithAggregatesInput | CompanyAdditionalInfoScalarWhereWithAggregatesInput[]
    OR?: CompanyAdditionalInfoScalarWhereWithAggregatesInput[]
    NOT?: CompanyAdditionalInfoScalarWhereWithAggregatesInput | CompanyAdditionalInfoScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CompanyAdditionalInfo"> | string
    company_id?: StringWithAggregatesFilter<"CompanyAdditionalInfo"> | string
    short_description?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    facebook_link?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    twitter_link?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    instagram_link?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    linkedin_link?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    youtube_link?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    whatsapp_number?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    google_map_link?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    vision?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    mission?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"CompanyAdditionalInfo"> | Date | string
    created_by?: StringWithAggregatesFilter<"CompanyAdditionalInfo"> | string
    created_ip?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"CompanyAdditionalInfo"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"CompanyAdditionalInfo"> | string | null
  }

  export type UserWhereInput = {
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    id?: StringFilter<"User"> | string
    fullname?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    email?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    address?: StringNullableFilter<"User"> | string | null
    phone?: StringFilter<"User"> | string
    is_active?: BoolNullableFilter<"User"> | boolean | null
    is_admin?: BoolNullableFilter<"User"> | boolean | null
    is_password_reset?: BoolNullableFilter<"User"> | boolean | null
    user_type?: StringFilter<"User"> | string
    created_at?: DateTimeFilter<"User"> | Date | string
    created_by?: StringFilter<"User"> | string
    created_ip?: StringNullableFilter<"User"> | string | null
    updated_at?: DateTimeFilter<"User"> | Date | string
    updated_by?: StringNullableFilter<"User"> | string | null
    updated_ip?: StringNullableFilter<"User"> | string | null
    company_id?: StringFilter<"User"> | string
    UserGroups?: UserGroupListRelationFilter
    UserSettings?: UserSettingsListRelationFilter
    RefreshToken?: RefreshTokenListRelationFilter
  }

  export type UserOrderByWithRelationInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address?: SortOrderInput | SortOrder
    phone?: SortOrder
    is_active?: SortOrderInput | SortOrder
    is_admin?: SortOrderInput | SortOrder
    is_password_reset?: SortOrderInput | SortOrder
    user_type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    UserGroups?: UserGroupOrderByRelationAggregateInput
    UserSettings?: UserSettingsOrderByRelationAggregateInput
    RefreshToken?: RefreshTokenOrderByRelationAggregateInput
  }

  export type UserWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: UserWhereInput | UserWhereInput[]
    OR?: UserWhereInput[]
    NOT?: UserWhereInput | UserWhereInput[]
    fullname?: StringFilter<"User"> | string
    username?: StringFilter<"User"> | string
    password?: StringFilter<"User"> | string
    address?: StringNullableFilter<"User"> | string | null
    phone?: StringFilter<"User"> | string
    is_active?: BoolNullableFilter<"User"> | boolean | null
    is_admin?: BoolNullableFilter<"User"> | boolean | null
    is_password_reset?: BoolNullableFilter<"User"> | boolean | null
    user_type?: StringFilter<"User"> | string
    created_at?: DateTimeFilter<"User"> | Date | string
    created_by?: StringFilter<"User"> | string
    created_ip?: StringNullableFilter<"User"> | string | null
    updated_at?: DateTimeFilter<"User"> | Date | string
    updated_by?: StringNullableFilter<"User"> | string | null
    updated_ip?: StringNullableFilter<"User"> | string | null
    company_id?: StringFilter<"User"> | string
    UserGroups?: UserGroupListRelationFilter
    UserSettings?: UserSettingsListRelationFilter
    RefreshToken?: RefreshTokenListRelationFilter
  }, "id" | "email">

  export type UserOrderByWithAggregationInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address?: SortOrderInput | SortOrder
    phone?: SortOrder
    is_active?: SortOrderInput | SortOrder
    is_admin?: SortOrderInput | SortOrder
    is_password_reset?: SortOrderInput | SortOrder
    user_type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: UserCountOrderByAggregateInput
    _max?: UserMaxOrderByAggregateInput
    _min?: UserMinOrderByAggregateInput
  }

  export type UserScalarWhereWithAggregatesInput = {
    AND?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    OR?: UserScalarWhereWithAggregatesInput[]
    NOT?: UserScalarWhereWithAggregatesInput | UserScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"User"> | string
    fullname?: StringWithAggregatesFilter<"User"> | string
    username?: StringWithAggregatesFilter<"User"> | string
    email?: StringWithAggregatesFilter<"User"> | string
    password?: StringWithAggregatesFilter<"User"> | string
    address?: StringNullableWithAggregatesFilter<"User"> | string | null
    phone?: StringWithAggregatesFilter<"User"> | string
    is_active?: BoolNullableWithAggregatesFilter<"User"> | boolean | null
    is_admin?: BoolNullableWithAggregatesFilter<"User"> | boolean | null
    is_password_reset?: BoolNullableWithAggregatesFilter<"User"> | boolean | null
    user_type?: StringWithAggregatesFilter<"User"> | string
    created_at?: DateTimeWithAggregatesFilter<"User"> | Date | string
    created_by?: StringWithAggregatesFilter<"User"> | string
    created_ip?: StringNullableWithAggregatesFilter<"User"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"User"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"User"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"User"> | string | null
    company_id?: StringWithAggregatesFilter<"User"> | string
  }

  export type RefreshTokenWhereInput = {
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    id?: StringFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    isRevoked?: BoolFilter<"RefreshToken"> | boolean
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type RefreshTokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type RefreshTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    OR?: RefreshTokenWhereInput[]
    NOT?: RefreshTokenWhereInput | RefreshTokenWhereInput[]
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    isRevoked?: BoolFilter<"RefreshToken"> | boolean
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id" | "token">

  export type RefreshTokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
    _count?: RefreshTokenCountOrderByAggregateInput
    _max?: RefreshTokenMaxOrderByAggregateInput
    _min?: RefreshTokenMinOrderByAggregateInput
  }

  export type RefreshTokenScalarWhereWithAggregatesInput = {
    AND?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    OR?: RefreshTokenScalarWhereWithAggregatesInput[]
    NOT?: RefreshTokenScalarWhereWithAggregatesInput | RefreshTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"RefreshToken"> | string
    token?: StringWithAggregatesFilter<"RefreshToken"> | string
    userId?: StringWithAggregatesFilter<"RefreshToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"RefreshToken"> | Date | string
    isRevoked?: BoolWithAggregatesFilter<"RefreshToken"> | boolean
  }

  export type SecurityRuleWhereInput = {
    AND?: SecurityRuleWhereInput | SecurityRuleWhereInput[]
    OR?: SecurityRuleWhereInput[]
    NOT?: SecurityRuleWhereInput | SecurityRuleWhereInput[]
    id?: StringFilter<"SecurityRule"> | string
    name?: StringFilter<"SecurityRule"> | string
    description?: StringNullableFilter<"SecurityRule"> | string | null
    created_at?: DateTimeFilter<"SecurityRule"> | Date | string
    created_by?: StringFilter<"SecurityRule"> | string
    created_ip?: StringNullableFilter<"SecurityRule"> | string | null
    updated_at?: DateTimeFilter<"SecurityRule"> | Date | string
    updated_by?: StringNullableFilter<"SecurityRule"> | string | null
    updated_ip?: StringNullableFilter<"SecurityRule"> | string | null
    company_id?: StringFilter<"SecurityRule"> | string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionListRelationFilter
    SecurityGroupRules?: SecurityGroupRuleListRelationFilter
  }

  export type SecurityRuleOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionOrderByRelationAggregateInput
    SecurityGroupRules?: SecurityGroupRuleOrderByRelationAggregateInput
  }

  export type SecurityRuleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SecurityRuleWhereInput | SecurityRuleWhereInput[]
    OR?: SecurityRuleWhereInput[]
    NOT?: SecurityRuleWhereInput | SecurityRuleWhereInput[]
    name?: StringFilter<"SecurityRule"> | string
    description?: StringNullableFilter<"SecurityRule"> | string | null
    created_at?: DateTimeFilter<"SecurityRule"> | Date | string
    created_by?: StringFilter<"SecurityRule"> | string
    created_ip?: StringNullableFilter<"SecurityRule"> | string | null
    updated_at?: DateTimeFilter<"SecurityRule"> | Date | string
    updated_by?: StringNullableFilter<"SecurityRule"> | string | null
    updated_ip?: StringNullableFilter<"SecurityRule"> | string | null
    company_id?: StringFilter<"SecurityRule"> | string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionListRelationFilter
    SecurityGroupRules?: SecurityGroupRuleListRelationFilter
  }, "id">

  export type SecurityRuleOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: SecurityRuleCountOrderByAggregateInput
    _max?: SecurityRuleMaxOrderByAggregateInput
    _min?: SecurityRuleMinOrderByAggregateInput
  }

  export type SecurityRuleScalarWhereWithAggregatesInput = {
    AND?: SecurityRuleScalarWhereWithAggregatesInput | SecurityRuleScalarWhereWithAggregatesInput[]
    OR?: SecurityRuleScalarWhereWithAggregatesInput[]
    NOT?: SecurityRuleScalarWhereWithAggregatesInput | SecurityRuleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SecurityRule"> | string
    name?: StringWithAggregatesFilter<"SecurityRule"> | string
    description?: StringNullableWithAggregatesFilter<"SecurityRule"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"SecurityRule"> | Date | string
    created_by?: StringWithAggregatesFilter<"SecurityRule"> | string
    created_ip?: StringNullableWithAggregatesFilter<"SecurityRule"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"SecurityRule"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"SecurityRule"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"SecurityRule"> | string | null
    company_id?: StringWithAggregatesFilter<"SecurityRule"> | string
  }

  export type SecurityRuleWiseMenuPermissionWhereInput = {
    AND?: SecurityRuleWiseMenuPermissionWhereInput | SecurityRuleWiseMenuPermissionWhereInput[]
    OR?: SecurityRuleWiseMenuPermissionWhereInput[]
    NOT?: SecurityRuleWiseMenuPermissionWhereInput | SecurityRuleWiseMenuPermissionWhereInput[]
    id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    menu_id?: IntFilter<"SecurityRuleWiseMenuPermission"> | number
    can_view?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_create?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_update?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_delete?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_report?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    rule_id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    created_at?: DateTimeFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    created_by?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    created_ip?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_at?: DateTimeFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    updated_by?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_ip?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    company_id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    security_rule?: XOR<SecurityRuleRelationFilter, SecurityRuleWhereInput>
  }

  export type SecurityRuleWiseMenuPermissionOrderByWithRelationInput = {
    id?: SortOrder
    menu_id?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    security_rule?: SecurityRuleOrderByWithRelationInput
  }

  export type SecurityRuleWiseMenuPermissionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SecurityRuleWiseMenuPermissionWhereInput | SecurityRuleWiseMenuPermissionWhereInput[]
    OR?: SecurityRuleWiseMenuPermissionWhereInput[]
    NOT?: SecurityRuleWiseMenuPermissionWhereInput | SecurityRuleWiseMenuPermissionWhereInput[]
    menu_id?: IntFilter<"SecurityRuleWiseMenuPermission"> | number
    can_view?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_create?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_update?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_delete?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_report?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    rule_id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    created_at?: DateTimeFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    created_by?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    created_ip?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_at?: DateTimeFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    updated_by?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_ip?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    company_id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    security_rule?: XOR<SecurityRuleRelationFilter, SecurityRuleWhereInput>
  }, "id">

  export type SecurityRuleWiseMenuPermissionOrderByWithAggregationInput = {
    id?: SortOrder
    menu_id?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: SecurityRuleWiseMenuPermissionCountOrderByAggregateInput
    _avg?: SecurityRuleWiseMenuPermissionAvgOrderByAggregateInput
    _max?: SecurityRuleWiseMenuPermissionMaxOrderByAggregateInput
    _min?: SecurityRuleWiseMenuPermissionMinOrderByAggregateInput
    _sum?: SecurityRuleWiseMenuPermissionSumOrderByAggregateInput
  }

  export type SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput = {
    AND?: SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput | SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput[]
    OR?: SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput[]
    NOT?: SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput | SecurityRuleWiseMenuPermissionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string
    menu_id?: IntWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | number
    can_view?: BoolWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_create?: BoolWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_update?: BoolWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_delete?: BoolWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_report?: BoolWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | boolean
    rule_id?: StringWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string
    created_at?: DateTimeWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    created_by?: StringWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string
    created_ip?: StringNullableWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string | null
    company_id?: StringWithAggregatesFilter<"SecurityRuleWiseMenuPermission"> | string
  }

  export type SecurityGroupWhereInput = {
    AND?: SecurityGroupWhereInput | SecurityGroupWhereInput[]
    OR?: SecurityGroupWhereInput[]
    NOT?: SecurityGroupWhereInput | SecurityGroupWhereInput[]
    id?: StringFilter<"SecurityGroup"> | string
    name?: StringFilter<"SecurityGroup"> | string
    description?: StringNullableFilter<"SecurityGroup"> | string | null
    created_at?: DateTimeFilter<"SecurityGroup"> | Date | string
    created_by?: StringFilter<"SecurityGroup"> | string
    created_ip?: StringNullableFilter<"SecurityGroup"> | string | null
    updated_at?: DateTimeFilter<"SecurityGroup"> | Date | string
    updated_by?: StringNullableFilter<"SecurityGroup"> | string | null
    updated_ip?: StringNullableFilter<"SecurityGroup"> | string | null
    company_id?: StringFilter<"SecurityGroup"> | string
    SecurityGroupRules?: SecurityGroupRuleListRelationFilter
    UserGroups?: UserGroupListRelationFilter
  }

  export type SecurityGroupOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    SecurityGroupRules?: SecurityGroupRuleOrderByRelationAggregateInput
    UserGroups?: UserGroupOrderByRelationAggregateInput
  }

  export type SecurityGroupWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SecurityGroupWhereInput | SecurityGroupWhereInput[]
    OR?: SecurityGroupWhereInput[]
    NOT?: SecurityGroupWhereInput | SecurityGroupWhereInput[]
    name?: StringFilter<"SecurityGroup"> | string
    description?: StringNullableFilter<"SecurityGroup"> | string | null
    created_at?: DateTimeFilter<"SecurityGroup"> | Date | string
    created_by?: StringFilter<"SecurityGroup"> | string
    created_ip?: StringNullableFilter<"SecurityGroup"> | string | null
    updated_at?: DateTimeFilter<"SecurityGroup"> | Date | string
    updated_by?: StringNullableFilter<"SecurityGroup"> | string | null
    updated_ip?: StringNullableFilter<"SecurityGroup"> | string | null
    company_id?: StringFilter<"SecurityGroup"> | string
    SecurityGroupRules?: SecurityGroupRuleListRelationFilter
    UserGroups?: UserGroupListRelationFilter
  }, "id">

  export type SecurityGroupOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: SecurityGroupCountOrderByAggregateInput
    _max?: SecurityGroupMaxOrderByAggregateInput
    _min?: SecurityGroupMinOrderByAggregateInput
  }

  export type SecurityGroupScalarWhereWithAggregatesInput = {
    AND?: SecurityGroupScalarWhereWithAggregatesInput | SecurityGroupScalarWhereWithAggregatesInput[]
    OR?: SecurityGroupScalarWhereWithAggregatesInput[]
    NOT?: SecurityGroupScalarWhereWithAggregatesInput | SecurityGroupScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SecurityGroup"> | string
    name?: StringWithAggregatesFilter<"SecurityGroup"> | string
    description?: StringNullableWithAggregatesFilter<"SecurityGroup"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"SecurityGroup"> | Date | string
    created_by?: StringWithAggregatesFilter<"SecurityGroup"> | string
    created_ip?: StringNullableWithAggregatesFilter<"SecurityGroup"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"SecurityGroup"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"SecurityGroup"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"SecurityGroup"> | string | null
    company_id?: StringWithAggregatesFilter<"SecurityGroup"> | string
  }

  export type SecurityGroupRuleWhereInput = {
    AND?: SecurityGroupRuleWhereInput | SecurityGroupRuleWhereInput[]
    OR?: SecurityGroupRuleWhereInput[]
    NOT?: SecurityGroupRuleWhereInput | SecurityGroupRuleWhereInput[]
    id?: StringFilter<"SecurityGroupRule"> | string
    group_id?: StringFilter<"SecurityGroupRule"> | string
    rule_id?: StringFilter<"SecurityGroupRule"> | string
    created_at?: DateTimeFilter<"SecurityGroupRule"> | Date | string
    created_by?: StringFilter<"SecurityGroupRule"> | string
    created_ip?: StringNullableFilter<"SecurityGroupRule"> | string | null
    updated_at?: DateTimeFilter<"SecurityGroupRule"> | Date | string
    updated_by?: StringNullableFilter<"SecurityGroupRule"> | string | null
    updated_ip?: StringNullableFilter<"SecurityGroupRule"> | string | null
    company_id?: StringFilter<"SecurityGroupRule"> | string
    security_group?: XOR<SecurityGroupRelationFilter, SecurityGroupWhereInput>
    security_rule?: XOR<SecurityRuleRelationFilter, SecurityRuleWhereInput>
  }

  export type SecurityGroupRuleOrderByWithRelationInput = {
    id?: SortOrder
    group_id?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    security_group?: SecurityGroupOrderByWithRelationInput
    security_rule?: SecurityRuleOrderByWithRelationInput
  }

  export type SecurityGroupRuleWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SecurityGroupRuleWhereInput | SecurityGroupRuleWhereInput[]
    OR?: SecurityGroupRuleWhereInput[]
    NOT?: SecurityGroupRuleWhereInput | SecurityGroupRuleWhereInput[]
    group_id?: StringFilter<"SecurityGroupRule"> | string
    rule_id?: StringFilter<"SecurityGroupRule"> | string
    created_at?: DateTimeFilter<"SecurityGroupRule"> | Date | string
    created_by?: StringFilter<"SecurityGroupRule"> | string
    created_ip?: StringNullableFilter<"SecurityGroupRule"> | string | null
    updated_at?: DateTimeFilter<"SecurityGroupRule"> | Date | string
    updated_by?: StringNullableFilter<"SecurityGroupRule"> | string | null
    updated_ip?: StringNullableFilter<"SecurityGroupRule"> | string | null
    company_id?: StringFilter<"SecurityGroupRule"> | string
    security_group?: XOR<SecurityGroupRelationFilter, SecurityGroupWhereInput>
    security_rule?: XOR<SecurityRuleRelationFilter, SecurityRuleWhereInput>
  }, "id">

  export type SecurityGroupRuleOrderByWithAggregationInput = {
    id?: SortOrder
    group_id?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: SecurityGroupRuleCountOrderByAggregateInput
    _max?: SecurityGroupRuleMaxOrderByAggregateInput
    _min?: SecurityGroupRuleMinOrderByAggregateInput
  }

  export type SecurityGroupRuleScalarWhereWithAggregatesInput = {
    AND?: SecurityGroupRuleScalarWhereWithAggregatesInput | SecurityGroupRuleScalarWhereWithAggregatesInput[]
    OR?: SecurityGroupRuleScalarWhereWithAggregatesInput[]
    NOT?: SecurityGroupRuleScalarWhereWithAggregatesInput | SecurityGroupRuleScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SecurityGroupRule"> | string
    group_id?: StringWithAggregatesFilter<"SecurityGroupRule"> | string
    rule_id?: StringWithAggregatesFilter<"SecurityGroupRule"> | string
    created_at?: DateTimeWithAggregatesFilter<"SecurityGroupRule"> | Date | string
    created_by?: StringWithAggregatesFilter<"SecurityGroupRule"> | string
    created_ip?: StringNullableWithAggregatesFilter<"SecurityGroupRule"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"SecurityGroupRule"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"SecurityGroupRule"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"SecurityGroupRule"> | string | null
    company_id?: StringWithAggregatesFilter<"SecurityGroupRule"> | string
  }

  export type UserGroupWhereInput = {
    AND?: UserGroupWhereInput | UserGroupWhereInput[]
    OR?: UserGroupWhereInput[]
    NOT?: UserGroupWhereInput | UserGroupWhereInput[]
    id?: StringFilter<"UserGroup"> | string
    user_id?: StringFilter<"UserGroup"> | string
    group_id?: StringFilter<"UserGroup"> | string
    created_at?: DateTimeFilter<"UserGroup"> | Date | string
    created_by?: StringFilter<"UserGroup"> | string
    created_ip?: StringNullableFilter<"UserGroup"> | string | null
    updated_at?: DateTimeFilter<"UserGroup"> | Date | string
    updated_by?: StringNullableFilter<"UserGroup"> | string | null
    updated_ip?: StringNullableFilter<"UserGroup"> | string | null
    company_id?: StringFilter<"UserGroup"> | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    security_group?: XOR<SecurityGroupRelationFilter, SecurityGroupWhereInput>
  }

  export type UserGroupOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    user?: UserOrderByWithRelationInput
    security_group?: SecurityGroupOrderByWithRelationInput
  }

  export type UserGroupWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: UserGroupWhereInput | UserGroupWhereInput[]
    OR?: UserGroupWhereInput[]
    NOT?: UserGroupWhereInput | UserGroupWhereInput[]
    user_id?: StringFilter<"UserGroup"> | string
    group_id?: StringFilter<"UserGroup"> | string
    created_at?: DateTimeFilter<"UserGroup"> | Date | string
    created_by?: StringFilter<"UserGroup"> | string
    created_ip?: StringNullableFilter<"UserGroup"> | string | null
    updated_at?: DateTimeFilter<"UserGroup"> | Date | string
    updated_by?: StringNullableFilter<"UserGroup"> | string | null
    updated_ip?: StringNullableFilter<"UserGroup"> | string | null
    company_id?: StringFilter<"UserGroup"> | string
    user?: XOR<UserRelationFilter, UserWhereInput>
    security_group?: XOR<SecurityGroupRelationFilter, SecurityGroupWhereInput>
  }, "id">

  export type UserGroupOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: UserGroupCountOrderByAggregateInput
    _max?: UserGroupMaxOrderByAggregateInput
    _min?: UserGroupMinOrderByAggregateInput
  }

  export type UserGroupScalarWhereWithAggregatesInput = {
    AND?: UserGroupScalarWhereWithAggregatesInput | UserGroupScalarWhereWithAggregatesInput[]
    OR?: UserGroupScalarWhereWithAggregatesInput[]
    NOT?: UserGroupScalarWhereWithAggregatesInput | UserGroupScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserGroup"> | string
    user_id?: StringWithAggregatesFilter<"UserGroup"> | string
    group_id?: StringWithAggregatesFilter<"UserGroup"> | string
    created_at?: DateTimeWithAggregatesFilter<"UserGroup"> | Date | string
    created_by?: StringWithAggregatesFilter<"UserGroup"> | string
    created_ip?: StringNullableWithAggregatesFilter<"UserGroup"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"UserGroup"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"UserGroup"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"UserGroup"> | string | null
    company_id?: StringWithAggregatesFilter<"UserGroup"> | string
  }

  export type MenuWhereInput = {
    AND?: MenuWhereInput | MenuWhereInput[]
    OR?: MenuWhereInput[]
    NOT?: MenuWhereInput | MenuWhereInput[]
    id?: IntFilter<"Menu"> | number
    title?: StringFilter<"Menu"> | string
    url?: StringNullableFilter<"Menu"> | string | null
    icon?: StringNullableFilter<"Menu"> | string | null
    icon_library?: StringNullableFilter<"Menu"> | string | null
    parent_id?: IntFilter<"Menu"> | number
    sequence_no?: DecimalFilter<"Menu"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolFilter<"Menu"> | boolean
    can_view?: BoolNullableFilter<"Menu"> | boolean | null
    can_create?: BoolNullableFilter<"Menu"> | boolean | null
    can_update?: BoolNullableFilter<"Menu"> | boolean | null
    can_delete?: BoolNullableFilter<"Menu"> | boolean | null
    can_report?: BoolNullableFilter<"Menu"> | boolean | null
  }

  export type MenuOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    url?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    icon_library?: SortOrderInput | SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    can_view?: SortOrderInput | SortOrder
    can_create?: SortOrderInput | SortOrder
    can_update?: SortOrderInput | SortOrder
    can_delete?: SortOrderInput | SortOrder
    can_report?: SortOrderInput | SortOrder
  }

  export type MenuWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: MenuWhereInput | MenuWhereInput[]
    OR?: MenuWhereInput[]
    NOT?: MenuWhereInput | MenuWhereInput[]
    title?: StringFilter<"Menu"> | string
    url?: StringNullableFilter<"Menu"> | string | null
    icon?: StringNullableFilter<"Menu"> | string | null
    icon_library?: StringNullableFilter<"Menu"> | string | null
    parent_id?: IntFilter<"Menu"> | number
    sequence_no?: DecimalFilter<"Menu"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolFilter<"Menu"> | boolean
    can_view?: BoolNullableFilter<"Menu"> | boolean | null
    can_create?: BoolNullableFilter<"Menu"> | boolean | null
    can_update?: BoolNullableFilter<"Menu"> | boolean | null
    can_delete?: BoolNullableFilter<"Menu"> | boolean | null
    can_report?: BoolNullableFilter<"Menu"> | boolean | null
  }, "id">

  export type MenuOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    url?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    icon_library?: SortOrderInput | SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    can_view?: SortOrderInput | SortOrder
    can_create?: SortOrderInput | SortOrder
    can_update?: SortOrderInput | SortOrder
    can_delete?: SortOrderInput | SortOrder
    can_report?: SortOrderInput | SortOrder
    _count?: MenuCountOrderByAggregateInput
    _avg?: MenuAvgOrderByAggregateInput
    _max?: MenuMaxOrderByAggregateInput
    _min?: MenuMinOrderByAggregateInput
    _sum?: MenuSumOrderByAggregateInput
  }

  export type MenuScalarWhereWithAggregatesInput = {
    AND?: MenuScalarWhereWithAggregatesInput | MenuScalarWhereWithAggregatesInput[]
    OR?: MenuScalarWhereWithAggregatesInput[]
    NOT?: MenuScalarWhereWithAggregatesInput | MenuScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"Menu"> | number
    title?: StringWithAggregatesFilter<"Menu"> | string
    url?: StringNullableWithAggregatesFilter<"Menu"> | string | null
    icon?: StringNullableWithAggregatesFilter<"Menu"> | string | null
    icon_library?: StringNullableWithAggregatesFilter<"Menu"> | string | null
    parent_id?: IntWithAggregatesFilter<"Menu"> | number
    sequence_no?: DecimalWithAggregatesFilter<"Menu"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolWithAggregatesFilter<"Menu"> | boolean
    can_view?: BoolNullableWithAggregatesFilter<"Menu"> | boolean | null
    can_create?: BoolNullableWithAggregatesFilter<"Menu"> | boolean | null
    can_update?: BoolNullableWithAggregatesFilter<"Menu"> | boolean | null
    can_delete?: BoolNullableWithAggregatesFilter<"Menu"> | boolean | null
    can_report?: BoolNullableWithAggregatesFilter<"Menu"> | boolean | null
  }

  export type ProductWhereInput = {
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    id?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    slug?: StringFilter<"Product"> | string
    description?: StringFilter<"Product"> | string
    price?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    priceRange?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    images?: JsonFilter<"Product">
    thumbnail?: StringFilter<"Product"> | string
    hasVariants?: BoolFilter<"Product"> | boolean
    stock?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    tags?: JsonFilter<"Product">
    rating?: FloatFilter<"Product"> | number
    reviewCount?: IntFilter<"Product"> | number
    status?: StringFilter<"Product"> | string
    isFeatured?: BoolFilter<"Product"> | boolean
    isNew?: BoolFilter<"Product"> | boolean
    onSale?: BoolFilter<"Product"> | boolean
    salePercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    salePrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    saleEndDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    created_at?: DateTimeFilter<"Product"> | Date | string
    created_by?: StringFilter<"Product"> | string
    created_ip?: StringNullableFilter<"Product"> | string | null
    updated_at?: DateTimeFilter<"Product"> | Date | string
    updated_by?: StringNullableFilter<"Product"> | string | null
    updated_ip?: StringNullableFilter<"Product"> | string | null
    company_id?: StringFilter<"Product"> | string
    categoryId?: StringFilter<"Product"> | string
    subcategoryId?: StringFilter<"Product"> | string
    brandId?: StringFilter<"Product"> | string
    sellerId?: StringFilter<"Product"> | string
    specialOfferId?: StringNullableFilter<"Product"> | string | null
    category?: XOR<CategoryRelationFilter, CategoryWhereInput>
    subcategory?: XOR<SubcategoryRelationFilter, SubcategoryWhereInput>
    brand?: XOR<BrandRelationFilter, BrandWhereInput>
    seller?: XOR<SellerRelationFilter, SellerWhereInput>
    attributes?: ProductAttributeListRelationFilter
    variants?: ProductVariantListRelationFilter
    reviews?: ReviewListRelationFilter
    Wishlist?: WishlistListRelationFilter
    SpecialOffer?: XOR<SpecialOfferNullableRelationFilter, SpecialOfferWhereInput> | null
  }

  export type ProductOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    price?: SortOrder
    priceRange?: SortOrderInput | SortOrder
    compareAtPrice?: SortOrderInput | SortOrder
    images?: SortOrder
    thumbnail?: SortOrder
    hasVariants?: SortOrder
    stock?: SortOrder
    tags?: SortOrder
    rating?: SortOrder
    reviewCount?: SortOrder
    status?: SortOrder
    isFeatured?: SortOrder
    isNew?: SortOrder
    onSale?: SortOrder
    salePercentage?: SortOrderInput | SortOrder
    salePrice?: SortOrderInput | SortOrder
    saleStartDate?: SortOrderInput | SortOrder
    saleEndDate?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    categoryId?: SortOrder
    subcategoryId?: SortOrder
    brandId?: SortOrder
    sellerId?: SortOrder
    specialOfferId?: SortOrderInput | SortOrder
    category?: CategoryOrderByWithRelationInput
    subcategory?: SubcategoryOrderByWithRelationInput
    brand?: BrandOrderByWithRelationInput
    seller?: SellerOrderByWithRelationInput
    attributes?: ProductAttributeOrderByRelationAggregateInput
    variants?: ProductVariantOrderByRelationAggregateInput
    reviews?: ReviewOrderByRelationAggregateInput
    Wishlist?: WishlistOrderByRelationAggregateInput
    SpecialOffer?: SpecialOfferOrderByWithRelationInput
  }

  export type ProductWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: ProductWhereInput | ProductWhereInput[]
    OR?: ProductWhereInput[]
    NOT?: ProductWhereInput | ProductWhereInput[]
    name?: StringFilter<"Product"> | string
    description?: StringFilter<"Product"> | string
    price?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    priceRange?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    images?: JsonFilter<"Product">
    thumbnail?: StringFilter<"Product"> | string
    hasVariants?: BoolFilter<"Product"> | boolean
    stock?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    tags?: JsonFilter<"Product">
    rating?: FloatFilter<"Product"> | number
    reviewCount?: IntFilter<"Product"> | number
    status?: StringFilter<"Product"> | string
    isFeatured?: BoolFilter<"Product"> | boolean
    isNew?: BoolFilter<"Product"> | boolean
    onSale?: BoolFilter<"Product"> | boolean
    salePercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    salePrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    saleEndDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    created_at?: DateTimeFilter<"Product"> | Date | string
    created_by?: StringFilter<"Product"> | string
    created_ip?: StringNullableFilter<"Product"> | string | null
    updated_at?: DateTimeFilter<"Product"> | Date | string
    updated_by?: StringNullableFilter<"Product"> | string | null
    updated_ip?: StringNullableFilter<"Product"> | string | null
    company_id?: StringFilter<"Product"> | string
    categoryId?: StringFilter<"Product"> | string
    subcategoryId?: StringFilter<"Product"> | string
    brandId?: StringFilter<"Product"> | string
    sellerId?: StringFilter<"Product"> | string
    specialOfferId?: StringNullableFilter<"Product"> | string | null
    category?: XOR<CategoryRelationFilter, CategoryWhereInput>
    subcategory?: XOR<SubcategoryRelationFilter, SubcategoryWhereInput>
    brand?: XOR<BrandRelationFilter, BrandWhereInput>
    seller?: XOR<SellerRelationFilter, SellerWhereInput>
    attributes?: ProductAttributeListRelationFilter
    variants?: ProductVariantListRelationFilter
    reviews?: ReviewListRelationFilter
    Wishlist?: WishlistListRelationFilter
    SpecialOffer?: XOR<SpecialOfferNullableRelationFilter, SpecialOfferWhereInput> | null
  }, "id" | "slug">

  export type ProductOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    price?: SortOrder
    priceRange?: SortOrderInput | SortOrder
    compareAtPrice?: SortOrderInput | SortOrder
    images?: SortOrder
    thumbnail?: SortOrder
    hasVariants?: SortOrder
    stock?: SortOrder
    tags?: SortOrder
    rating?: SortOrder
    reviewCount?: SortOrder
    status?: SortOrder
    isFeatured?: SortOrder
    isNew?: SortOrder
    onSale?: SortOrder
    salePercentage?: SortOrderInput | SortOrder
    salePrice?: SortOrderInput | SortOrder
    saleStartDate?: SortOrderInput | SortOrder
    saleEndDate?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    categoryId?: SortOrder
    subcategoryId?: SortOrder
    brandId?: SortOrder
    sellerId?: SortOrder
    specialOfferId?: SortOrderInput | SortOrder
    _count?: ProductCountOrderByAggregateInput
    _avg?: ProductAvgOrderByAggregateInput
    _max?: ProductMaxOrderByAggregateInput
    _min?: ProductMinOrderByAggregateInput
    _sum?: ProductSumOrderByAggregateInput
  }

  export type ProductScalarWhereWithAggregatesInput = {
    AND?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    OR?: ProductScalarWhereWithAggregatesInput[]
    NOT?: ProductScalarWhereWithAggregatesInput | ProductScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Product"> | string
    name?: StringWithAggregatesFilter<"Product"> | string
    slug?: StringWithAggregatesFilter<"Product"> | string
    description?: StringWithAggregatesFilter<"Product"> | string
    price?: DecimalWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string
    priceRange?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    images?: JsonWithAggregatesFilter<"Product">
    thumbnail?: StringWithAggregatesFilter<"Product"> | string
    hasVariants?: BoolWithAggregatesFilter<"Product"> | boolean
    stock?: DecimalWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string
    tags?: JsonWithAggregatesFilter<"Product">
    rating?: FloatWithAggregatesFilter<"Product"> | number
    reviewCount?: IntWithAggregatesFilter<"Product"> | number
    status?: StringWithAggregatesFilter<"Product"> | string
    isFeatured?: BoolWithAggregatesFilter<"Product"> | boolean
    isNew?: BoolWithAggregatesFilter<"Product"> | boolean
    onSale?: BoolWithAggregatesFilter<"Product"> | boolean
    salePercentage?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    salePrice?: DecimalNullableWithAggregatesFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    saleEndDate?: DateTimeNullableWithAggregatesFilter<"Product"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    created_by?: StringWithAggregatesFilter<"Product"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Product"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Product"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Product"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Product"> | string | null
    company_id?: StringWithAggregatesFilter<"Product"> | string
    categoryId?: StringWithAggregatesFilter<"Product"> | string
    subcategoryId?: StringWithAggregatesFilter<"Product"> | string
    brandId?: StringWithAggregatesFilter<"Product"> | string
    sellerId?: StringWithAggregatesFilter<"Product"> | string
    specialOfferId?: StringNullableWithAggregatesFilter<"Product"> | string | null
  }

  export type CategoryWhereInput = {
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    id?: StringFilter<"Category"> | string
    name?: StringFilter<"Category"> | string
    slug?: StringFilter<"Category"> | string
    image?: StringNullableFilter<"Category"> | string | null
    icon?: StringNullableFilter<"Category"> | string | null
    featured?: BoolFilter<"Category"> | boolean
    productCount?: IntFilter<"Category"> | number
    is_active?: BoolFilter<"Category"> | boolean
    created_at?: DateTimeFilter<"Category"> | Date | string
    created_by?: StringFilter<"Category"> | string
    created_ip?: StringNullableFilter<"Category"> | string | null
    updated_at?: DateTimeFilter<"Category"> | Date | string
    updated_by?: StringNullableFilter<"Category"> | string | null
    updated_ip?: StringNullableFilter<"Category"> | string | null
    company_id?: StringFilter<"Category"> | string
    subcategories?: SubcategoryListRelationFilter
    products?: ProductListRelationFilter
  }

  export type CategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    image?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    featured?: SortOrder
    productCount?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    subcategories?: SubcategoryOrderByRelationAggregateInput
    products?: ProductOrderByRelationAggregateInput
  }

  export type CategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: CategoryWhereInput | CategoryWhereInput[]
    OR?: CategoryWhereInput[]
    NOT?: CategoryWhereInput | CategoryWhereInput[]
    name?: StringFilter<"Category"> | string
    image?: StringNullableFilter<"Category"> | string | null
    icon?: StringNullableFilter<"Category"> | string | null
    featured?: BoolFilter<"Category"> | boolean
    productCount?: IntFilter<"Category"> | number
    is_active?: BoolFilter<"Category"> | boolean
    created_at?: DateTimeFilter<"Category"> | Date | string
    created_by?: StringFilter<"Category"> | string
    created_ip?: StringNullableFilter<"Category"> | string | null
    updated_at?: DateTimeFilter<"Category"> | Date | string
    updated_by?: StringNullableFilter<"Category"> | string | null
    updated_ip?: StringNullableFilter<"Category"> | string | null
    company_id?: StringFilter<"Category"> | string
    subcategories?: SubcategoryListRelationFilter
    products?: ProductListRelationFilter
  }, "id" | "slug">

  export type CategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    image?: SortOrderInput | SortOrder
    icon?: SortOrderInput | SortOrder
    featured?: SortOrder
    productCount?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: CategoryCountOrderByAggregateInput
    _avg?: CategoryAvgOrderByAggregateInput
    _max?: CategoryMaxOrderByAggregateInput
    _min?: CategoryMinOrderByAggregateInput
    _sum?: CategorySumOrderByAggregateInput
  }

  export type CategoryScalarWhereWithAggregatesInput = {
    AND?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    OR?: CategoryScalarWhereWithAggregatesInput[]
    NOT?: CategoryScalarWhereWithAggregatesInput | CategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Category"> | string
    name?: StringWithAggregatesFilter<"Category"> | string
    slug?: StringWithAggregatesFilter<"Category"> | string
    image?: StringNullableWithAggregatesFilter<"Category"> | string | null
    icon?: StringNullableWithAggregatesFilter<"Category"> | string | null
    featured?: BoolWithAggregatesFilter<"Category"> | boolean
    productCount?: IntWithAggregatesFilter<"Category"> | number
    is_active?: BoolWithAggregatesFilter<"Category"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    created_by?: StringWithAggregatesFilter<"Category"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Category"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Category"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Category"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Category"> | string | null
    company_id?: StringWithAggregatesFilter<"Category"> | string
  }

  export type SubcategoryWhereInput = {
    AND?: SubcategoryWhereInput | SubcategoryWhereInput[]
    OR?: SubcategoryWhereInput[]
    NOT?: SubcategoryWhereInput | SubcategoryWhereInput[]
    id?: StringFilter<"Subcategory"> | string
    name?: StringFilter<"Subcategory"> | string
    slug?: StringFilter<"Subcategory"> | string
    productCount?: IntFilter<"Subcategory"> | number
    created_at?: DateTimeFilter<"Subcategory"> | Date | string
    created_by?: StringFilter<"Subcategory"> | string
    created_ip?: StringNullableFilter<"Subcategory"> | string | null
    updated_at?: DateTimeFilter<"Subcategory"> | Date | string
    updated_by?: StringNullableFilter<"Subcategory"> | string | null
    updated_ip?: StringNullableFilter<"Subcategory"> | string | null
    company_id?: StringFilter<"Subcategory"> | string
    categoryId?: StringFilter<"Subcategory"> | string
    category?: XOR<CategoryRelationFilter, CategoryWhereInput>
    products?: ProductListRelationFilter
  }

  export type SubcategoryOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    productCount?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    categoryId?: SortOrder
    category?: CategoryOrderByWithRelationInput
    products?: ProductOrderByRelationAggregateInput
  }

  export type SubcategoryWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: SubcategoryWhereInput | SubcategoryWhereInput[]
    OR?: SubcategoryWhereInput[]
    NOT?: SubcategoryWhereInput | SubcategoryWhereInput[]
    name?: StringFilter<"Subcategory"> | string
    productCount?: IntFilter<"Subcategory"> | number
    created_at?: DateTimeFilter<"Subcategory"> | Date | string
    created_by?: StringFilter<"Subcategory"> | string
    created_ip?: StringNullableFilter<"Subcategory"> | string | null
    updated_at?: DateTimeFilter<"Subcategory"> | Date | string
    updated_by?: StringNullableFilter<"Subcategory"> | string | null
    updated_ip?: StringNullableFilter<"Subcategory"> | string | null
    company_id?: StringFilter<"Subcategory"> | string
    categoryId?: StringFilter<"Subcategory"> | string
    category?: XOR<CategoryRelationFilter, CategoryWhereInput>
    products?: ProductListRelationFilter
  }, "id" | "slug">

  export type SubcategoryOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    productCount?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    categoryId?: SortOrder
    _count?: SubcategoryCountOrderByAggregateInput
    _avg?: SubcategoryAvgOrderByAggregateInput
    _max?: SubcategoryMaxOrderByAggregateInput
    _min?: SubcategoryMinOrderByAggregateInput
    _sum?: SubcategorySumOrderByAggregateInput
  }

  export type SubcategoryScalarWhereWithAggregatesInput = {
    AND?: SubcategoryScalarWhereWithAggregatesInput | SubcategoryScalarWhereWithAggregatesInput[]
    OR?: SubcategoryScalarWhereWithAggregatesInput[]
    NOT?: SubcategoryScalarWhereWithAggregatesInput | SubcategoryScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Subcategory"> | string
    name?: StringWithAggregatesFilter<"Subcategory"> | string
    slug?: StringWithAggregatesFilter<"Subcategory"> | string
    productCount?: IntWithAggregatesFilter<"Subcategory"> | number
    created_at?: DateTimeWithAggregatesFilter<"Subcategory"> | Date | string
    created_by?: StringWithAggregatesFilter<"Subcategory"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Subcategory"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Subcategory"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Subcategory"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Subcategory"> | string | null
    company_id?: StringWithAggregatesFilter<"Subcategory"> | string
    categoryId?: StringWithAggregatesFilter<"Subcategory"> | string
  }

  export type BrandWhereInput = {
    AND?: BrandWhereInput | BrandWhereInput[]
    OR?: BrandWhereInput[]
    NOT?: BrandWhereInput | BrandWhereInput[]
    id?: StringFilter<"Brand"> | string
    name?: StringFilter<"Brand"> | string
    slug?: StringFilter<"Brand"> | string
    created_at?: DateTimeFilter<"Brand"> | Date | string
    created_by?: StringFilter<"Brand"> | string
    created_ip?: StringNullableFilter<"Brand"> | string | null
    updated_at?: DateTimeFilter<"Brand"> | Date | string
    updated_by?: StringNullableFilter<"Brand"> | string | null
    updated_ip?: StringNullableFilter<"Brand"> | string | null
    company_id?: StringFilter<"Brand"> | string
    products?: ProductListRelationFilter
  }

  export type BrandOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    products?: ProductOrderByRelationAggregateInput
  }

  export type BrandWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: BrandWhereInput | BrandWhereInput[]
    OR?: BrandWhereInput[]
    NOT?: BrandWhereInput | BrandWhereInput[]
    name?: StringFilter<"Brand"> | string
    created_at?: DateTimeFilter<"Brand"> | Date | string
    created_by?: StringFilter<"Brand"> | string
    created_ip?: StringNullableFilter<"Brand"> | string | null
    updated_at?: DateTimeFilter<"Brand"> | Date | string
    updated_by?: StringNullableFilter<"Brand"> | string | null
    updated_ip?: StringNullableFilter<"Brand"> | string | null
    company_id?: StringFilter<"Brand"> | string
    products?: ProductListRelationFilter
  }, "id" | "slug">

  export type BrandOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: BrandCountOrderByAggregateInput
    _max?: BrandMaxOrderByAggregateInput
    _min?: BrandMinOrderByAggregateInput
  }

  export type BrandScalarWhereWithAggregatesInput = {
    AND?: BrandScalarWhereWithAggregatesInput | BrandScalarWhereWithAggregatesInput[]
    OR?: BrandScalarWhereWithAggregatesInput[]
    NOT?: BrandScalarWhereWithAggregatesInput | BrandScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Brand"> | string
    name?: StringWithAggregatesFilter<"Brand"> | string
    slug?: StringWithAggregatesFilter<"Brand"> | string
    created_at?: DateTimeWithAggregatesFilter<"Brand"> | Date | string
    created_by?: StringWithAggregatesFilter<"Brand"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Brand"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Brand"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Brand"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Brand"> | string | null
    company_id?: StringWithAggregatesFilter<"Brand"> | string
  }

  export type ProductAttributeWhereInput = {
    AND?: ProductAttributeWhereInput | ProductAttributeWhereInput[]
    OR?: ProductAttributeWhereInput[]
    NOT?: ProductAttributeWhereInput | ProductAttributeWhereInput[]
    id?: StringFilter<"ProductAttribute"> | string
    name?: StringFilter<"ProductAttribute"> | string
    type?: StringFilter<"ProductAttribute"> | string
    value?: StringFilter<"ProductAttribute"> | string
    unit?: StringNullableFilter<"ProductAttribute"> | string | null
    displayValue?: StringNullableFilter<"ProductAttribute"> | string | null
    options?: JsonNullableFilter<"ProductAttribute">
    productId?: StringFilter<"ProductAttribute"> | string
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }

  export type ProductAttributeOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    value?: SortOrder
    unit?: SortOrderInput | SortOrder
    displayValue?: SortOrderInput | SortOrder
    options?: SortOrderInput | SortOrder
    productId?: SortOrder
    product?: ProductOrderByWithRelationInput
  }

  export type ProductAttributeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductAttributeWhereInput | ProductAttributeWhereInput[]
    OR?: ProductAttributeWhereInput[]
    NOT?: ProductAttributeWhereInput | ProductAttributeWhereInput[]
    name?: StringFilter<"ProductAttribute"> | string
    type?: StringFilter<"ProductAttribute"> | string
    value?: StringFilter<"ProductAttribute"> | string
    unit?: StringNullableFilter<"ProductAttribute"> | string | null
    displayValue?: StringNullableFilter<"ProductAttribute"> | string | null
    options?: JsonNullableFilter<"ProductAttribute">
    productId?: StringFilter<"ProductAttribute"> | string
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }, "id">

  export type ProductAttributeOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    value?: SortOrder
    unit?: SortOrderInput | SortOrder
    displayValue?: SortOrderInput | SortOrder
    options?: SortOrderInput | SortOrder
    productId?: SortOrder
    _count?: ProductAttributeCountOrderByAggregateInput
    _max?: ProductAttributeMaxOrderByAggregateInput
    _min?: ProductAttributeMinOrderByAggregateInput
  }

  export type ProductAttributeScalarWhereWithAggregatesInput = {
    AND?: ProductAttributeScalarWhereWithAggregatesInput | ProductAttributeScalarWhereWithAggregatesInput[]
    OR?: ProductAttributeScalarWhereWithAggregatesInput[]
    NOT?: ProductAttributeScalarWhereWithAggregatesInput | ProductAttributeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductAttribute"> | string
    name?: StringWithAggregatesFilter<"ProductAttribute"> | string
    type?: StringWithAggregatesFilter<"ProductAttribute"> | string
    value?: StringWithAggregatesFilter<"ProductAttribute"> | string
    unit?: StringNullableWithAggregatesFilter<"ProductAttribute"> | string | null
    displayValue?: StringNullableWithAggregatesFilter<"ProductAttribute"> | string | null
    options?: JsonNullableWithAggregatesFilter<"ProductAttribute">
    productId?: StringWithAggregatesFilter<"ProductAttribute"> | string
  }

  export type ProductVariantWhereInput = {
    AND?: ProductVariantWhereInput | ProductVariantWhereInput[]
    OR?: ProductVariantWhereInput[]
    NOT?: ProductVariantWhereInput | ProductVariantWhereInput[]
    id?: StringFilter<"ProductVariant"> | string
    sku?: StringFilter<"ProductVariant"> | string
    price?: DecimalFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string
    stock?: DecimalFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string
    attributes?: JsonFilter<"ProductVariant">
    images?: JsonFilter<"ProductVariant">
    sequence_no?: IntFilter<"ProductVariant"> | number
    productId?: StringFilter<"ProductVariant"> | string
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }

  export type ProductVariantOrderByWithRelationInput = {
    id?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    attributes?: SortOrder
    images?: SortOrder
    sequence_no?: SortOrder
    productId?: SortOrder
    product?: ProductOrderByWithRelationInput
  }

  export type ProductVariantWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ProductVariantWhereInput | ProductVariantWhereInput[]
    OR?: ProductVariantWhereInput[]
    NOT?: ProductVariantWhereInput | ProductVariantWhereInput[]
    sku?: StringFilter<"ProductVariant"> | string
    price?: DecimalFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string
    stock?: DecimalFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string
    attributes?: JsonFilter<"ProductVariant">
    images?: JsonFilter<"ProductVariant">
    sequence_no?: IntFilter<"ProductVariant"> | number
    productId?: StringFilter<"ProductVariant"> | string
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }, "id">

  export type ProductVariantOrderByWithAggregationInput = {
    id?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    attributes?: SortOrder
    images?: SortOrder
    sequence_no?: SortOrder
    productId?: SortOrder
    _count?: ProductVariantCountOrderByAggregateInput
    _avg?: ProductVariantAvgOrderByAggregateInput
    _max?: ProductVariantMaxOrderByAggregateInput
    _min?: ProductVariantMinOrderByAggregateInput
    _sum?: ProductVariantSumOrderByAggregateInput
  }

  export type ProductVariantScalarWhereWithAggregatesInput = {
    AND?: ProductVariantScalarWhereWithAggregatesInput | ProductVariantScalarWhereWithAggregatesInput[]
    OR?: ProductVariantScalarWhereWithAggregatesInput[]
    NOT?: ProductVariantScalarWhereWithAggregatesInput | ProductVariantScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ProductVariant"> | string
    sku?: StringWithAggregatesFilter<"ProductVariant"> | string
    price?: DecimalWithAggregatesFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string
    stock?: DecimalWithAggregatesFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string
    attributes?: JsonWithAggregatesFilter<"ProductVariant">
    images?: JsonWithAggregatesFilter<"ProductVariant">
    sequence_no?: IntWithAggregatesFilter<"ProductVariant"> | number
    productId?: StringWithAggregatesFilter<"ProductVariant"> | string
  }

  export type SellerWhereInput = {
    AND?: SellerWhereInput | SellerWhereInput[]
    OR?: SellerWhereInput[]
    NOT?: SellerWhereInput | SellerWhereInput[]
    id?: StringFilter<"Seller"> | string
    name?: StringFilter<"Seller"> | string
    slug?: StringFilter<"Seller"> | string
    email?: StringFilter<"Seller"> | string
    phone?: StringNullableFilter<"Seller"> | string | null
    logo?: StringNullableFilter<"Seller"> | string | null
    rating?: FloatFilter<"Seller"> | number
    reviewCount?: IntFilter<"Seller"> | number
    verified?: BoolFilter<"Seller"> | boolean
    created_at?: DateTimeFilter<"Seller"> | Date | string
    created_by?: StringFilter<"Seller"> | string
    created_ip?: StringNullableFilter<"Seller"> | string | null
    updated_at?: DateTimeFilter<"Seller"> | Date | string
    updated_by?: StringNullableFilter<"Seller"> | string | null
    updated_ip?: StringNullableFilter<"Seller"> | string | null
    company_id?: StringFilter<"Seller"> | string
    products?: ProductListRelationFilter
    companies?: CompanyListRelationFilter
  }

  export type SellerOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    rating?: SortOrder
    reviewCount?: SortOrder
    verified?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    products?: ProductOrderByRelationAggregateInput
    companies?: CompanyOrderByRelationAggregateInput
  }

  export type SellerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    email?: string
    AND?: SellerWhereInput | SellerWhereInput[]
    OR?: SellerWhereInput[]
    NOT?: SellerWhereInput | SellerWhereInput[]
    name?: StringFilter<"Seller"> | string
    phone?: StringNullableFilter<"Seller"> | string | null
    logo?: StringNullableFilter<"Seller"> | string | null
    rating?: FloatFilter<"Seller"> | number
    reviewCount?: IntFilter<"Seller"> | number
    verified?: BoolFilter<"Seller"> | boolean
    created_at?: DateTimeFilter<"Seller"> | Date | string
    created_by?: StringFilter<"Seller"> | string
    created_ip?: StringNullableFilter<"Seller"> | string | null
    updated_at?: DateTimeFilter<"Seller"> | Date | string
    updated_by?: StringNullableFilter<"Seller"> | string | null
    updated_ip?: StringNullableFilter<"Seller"> | string | null
    company_id?: StringFilter<"Seller"> | string
    products?: ProductListRelationFilter
    companies?: CompanyListRelationFilter
  }, "id" | "slug" | "email">

  export type SellerOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    logo?: SortOrderInput | SortOrder
    rating?: SortOrder
    reviewCount?: SortOrder
    verified?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: SellerCountOrderByAggregateInput
    _avg?: SellerAvgOrderByAggregateInput
    _max?: SellerMaxOrderByAggregateInput
    _min?: SellerMinOrderByAggregateInput
    _sum?: SellerSumOrderByAggregateInput
  }

  export type SellerScalarWhereWithAggregatesInput = {
    AND?: SellerScalarWhereWithAggregatesInput | SellerScalarWhereWithAggregatesInput[]
    OR?: SellerScalarWhereWithAggregatesInput[]
    NOT?: SellerScalarWhereWithAggregatesInput | SellerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Seller"> | string
    name?: StringWithAggregatesFilter<"Seller"> | string
    slug?: StringWithAggregatesFilter<"Seller"> | string
    email?: StringWithAggregatesFilter<"Seller"> | string
    phone?: StringNullableWithAggregatesFilter<"Seller"> | string | null
    logo?: StringNullableWithAggregatesFilter<"Seller"> | string | null
    rating?: FloatWithAggregatesFilter<"Seller"> | number
    reviewCount?: IntWithAggregatesFilter<"Seller"> | number
    verified?: BoolWithAggregatesFilter<"Seller"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"Seller"> | Date | string
    created_by?: StringWithAggregatesFilter<"Seller"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Seller"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Seller"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Seller"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Seller"> | string | null
    company_id?: StringWithAggregatesFilter<"Seller"> | string
  }

  export type ReviewWhereInput = {
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    id?: StringFilter<"Review"> | string
    userId?: StringFilter<"Review"> | string
    userName?: StringFilter<"Review"> | string
    userAvatar?: StringNullableFilter<"Review"> | string | null
    rating?: FloatFilter<"Review"> | number
    title?: StringNullableFilter<"Review"> | string | null
    comment?: StringFilter<"Review"> | string
    helpful?: IntFilter<"Review"> | number
    createdAt?: DateTimeFilter<"Review"> | Date | string
    variantId?: StringNullableFilter<"Review"> | string | null
    productId?: StringFilter<"Review"> | string
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }

  export type ReviewOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    userName?: SortOrder
    userAvatar?: SortOrderInput | SortOrder
    rating?: SortOrder
    title?: SortOrderInput | SortOrder
    comment?: SortOrder
    helpful?: SortOrder
    createdAt?: SortOrder
    variantId?: SortOrderInput | SortOrder
    productId?: SortOrder
    product?: ProductOrderByWithRelationInput
  }

  export type ReviewWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ReviewWhereInput | ReviewWhereInput[]
    OR?: ReviewWhereInput[]
    NOT?: ReviewWhereInput | ReviewWhereInput[]
    userId?: StringFilter<"Review"> | string
    userName?: StringFilter<"Review"> | string
    userAvatar?: StringNullableFilter<"Review"> | string | null
    rating?: FloatFilter<"Review"> | number
    title?: StringNullableFilter<"Review"> | string | null
    comment?: StringFilter<"Review"> | string
    helpful?: IntFilter<"Review"> | number
    createdAt?: DateTimeFilter<"Review"> | Date | string
    variantId?: StringNullableFilter<"Review"> | string | null
    productId?: StringFilter<"Review"> | string
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }, "id">

  export type ReviewOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    userName?: SortOrder
    userAvatar?: SortOrderInput | SortOrder
    rating?: SortOrder
    title?: SortOrderInput | SortOrder
    comment?: SortOrder
    helpful?: SortOrder
    createdAt?: SortOrder
    variantId?: SortOrderInput | SortOrder
    productId?: SortOrder
    _count?: ReviewCountOrderByAggregateInput
    _avg?: ReviewAvgOrderByAggregateInput
    _max?: ReviewMaxOrderByAggregateInput
    _min?: ReviewMinOrderByAggregateInput
    _sum?: ReviewSumOrderByAggregateInput
  }

  export type ReviewScalarWhereWithAggregatesInput = {
    AND?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    OR?: ReviewScalarWhereWithAggregatesInput[]
    NOT?: ReviewScalarWhereWithAggregatesInput | ReviewScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Review"> | string
    userId?: StringWithAggregatesFilter<"Review"> | string
    userName?: StringWithAggregatesFilter<"Review"> | string
    userAvatar?: StringNullableWithAggregatesFilter<"Review"> | string | null
    rating?: FloatWithAggregatesFilter<"Review"> | number
    title?: StringNullableWithAggregatesFilter<"Review"> | string | null
    comment?: StringWithAggregatesFilter<"Review"> | string
    helpful?: IntWithAggregatesFilter<"Review"> | number
    createdAt?: DateTimeWithAggregatesFilter<"Review"> | Date | string
    variantId?: StringNullableWithAggregatesFilter<"Review"> | string | null
    productId?: StringWithAggregatesFilter<"Review"> | string
  }

  export type CustomerWhereInput = {
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    id?: StringFilter<"Customer"> | string
    first_name?: StringFilter<"Customer"> | string
    last_name?: StringFilter<"Customer"> | string
    email?: StringFilter<"Customer"> | string
    phone?: StringNullableFilter<"Customer"> | string | null
    password?: StringFilter<"Customer"> | string
    is_active?: BoolFilter<"Customer"> | boolean
    remember_token?: StringNullableFilter<"Customer"> | string | null
    email_verified?: DateTimeNullableFilter<"Customer"> | Date | string | null
    created_at?: DateTimeFilter<"Customer"> | Date | string
    created_by?: StringFilter<"Customer"> | string
    created_ip?: StringNullableFilter<"Customer"> | string | null
    updated_at?: DateTimeFilter<"Customer"> | Date | string
    updated_by?: StringNullableFilter<"Customer"> | string | null
    updated_ip?: StringNullableFilter<"Customer"> | string | null
    orders?: OrderListRelationFilter
    refresh_tokens?: CustomerRefreshTokenListRelationFilter
    addresses?: CustomerAddressListRelationFilter
    Wishlist?: WishlistListRelationFilter
    PendingOrder?: PendingOrderListRelationFilter
  }

  export type CustomerOrderByWithRelationInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    password?: SortOrder
    is_active?: SortOrder
    remember_token?: SortOrderInput | SortOrder
    email_verified?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    orders?: OrderOrderByRelationAggregateInput
    refresh_tokens?: CustomerRefreshTokenOrderByRelationAggregateInput
    addresses?: CustomerAddressOrderByRelationAggregateInput
    Wishlist?: WishlistOrderByRelationAggregateInput
    PendingOrder?: PendingOrderOrderByRelationAggregateInput
  }

  export type CustomerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    email?: string
    AND?: CustomerWhereInput | CustomerWhereInput[]
    OR?: CustomerWhereInput[]
    NOT?: CustomerWhereInput | CustomerWhereInput[]
    first_name?: StringFilter<"Customer"> | string
    last_name?: StringFilter<"Customer"> | string
    phone?: StringNullableFilter<"Customer"> | string | null
    password?: StringFilter<"Customer"> | string
    is_active?: BoolFilter<"Customer"> | boolean
    remember_token?: StringNullableFilter<"Customer"> | string | null
    email_verified?: DateTimeNullableFilter<"Customer"> | Date | string | null
    created_at?: DateTimeFilter<"Customer"> | Date | string
    created_by?: StringFilter<"Customer"> | string
    created_ip?: StringNullableFilter<"Customer"> | string | null
    updated_at?: DateTimeFilter<"Customer"> | Date | string
    updated_by?: StringNullableFilter<"Customer"> | string | null
    updated_ip?: StringNullableFilter<"Customer"> | string | null
    orders?: OrderListRelationFilter
    refresh_tokens?: CustomerRefreshTokenListRelationFilter
    addresses?: CustomerAddressListRelationFilter
    Wishlist?: WishlistListRelationFilter
    PendingOrder?: PendingOrderListRelationFilter
  }, "id" | "email">

  export type CustomerOrderByWithAggregationInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrderInput | SortOrder
    password?: SortOrder
    is_active?: SortOrder
    remember_token?: SortOrderInput | SortOrder
    email_verified?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    _count?: CustomerCountOrderByAggregateInput
    _max?: CustomerMaxOrderByAggregateInput
    _min?: CustomerMinOrderByAggregateInput
  }

  export type CustomerScalarWhereWithAggregatesInput = {
    AND?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    OR?: CustomerScalarWhereWithAggregatesInput[]
    NOT?: CustomerScalarWhereWithAggregatesInput | CustomerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Customer"> | string
    first_name?: StringWithAggregatesFilter<"Customer"> | string
    last_name?: StringWithAggregatesFilter<"Customer"> | string
    email?: StringWithAggregatesFilter<"Customer"> | string
    phone?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    password?: StringWithAggregatesFilter<"Customer"> | string
    is_active?: BoolWithAggregatesFilter<"Customer"> | boolean
    remember_token?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    email_verified?: DateTimeNullableWithAggregatesFilter<"Customer"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"Customer"> | Date | string
    created_by?: StringWithAggregatesFilter<"Customer"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Customer"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Customer"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Customer"> | string | null
  }

  export type CustomerRefreshTokenWhereInput = {
    AND?: CustomerRefreshTokenWhereInput | CustomerRefreshTokenWhereInput[]
    OR?: CustomerRefreshTokenWhereInput[]
    NOT?: CustomerRefreshTokenWhereInput | CustomerRefreshTokenWhereInput[]
    id?: StringFilter<"CustomerRefreshToken"> | string
    token?: StringFilter<"CustomerRefreshToken"> | string
    customerId?: StringFilter<"CustomerRefreshToken"> | string
    expiresAt?: DateTimeFilter<"CustomerRefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"CustomerRefreshToken"> | Date | string
    isRevoked?: BoolFilter<"CustomerRefreshToken"> | boolean
    customer?: XOR<CustomerRelationFilter, CustomerWhereInput>
  }

  export type CustomerRefreshTokenOrderByWithRelationInput = {
    id?: SortOrder
    token?: SortOrder
    customerId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
    customer?: CustomerOrderByWithRelationInput
  }

  export type CustomerRefreshTokenWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    token?: string
    AND?: CustomerRefreshTokenWhereInput | CustomerRefreshTokenWhereInput[]
    OR?: CustomerRefreshTokenWhereInput[]
    NOT?: CustomerRefreshTokenWhereInput | CustomerRefreshTokenWhereInput[]
    customerId?: StringFilter<"CustomerRefreshToken"> | string
    expiresAt?: DateTimeFilter<"CustomerRefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"CustomerRefreshToken"> | Date | string
    isRevoked?: BoolFilter<"CustomerRefreshToken"> | boolean
    customer?: XOR<CustomerRelationFilter, CustomerWhereInput>
  }, "id" | "token">

  export type CustomerRefreshTokenOrderByWithAggregationInput = {
    id?: SortOrder
    token?: SortOrder
    customerId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
    _count?: CustomerRefreshTokenCountOrderByAggregateInput
    _max?: CustomerRefreshTokenMaxOrderByAggregateInput
    _min?: CustomerRefreshTokenMinOrderByAggregateInput
  }

  export type CustomerRefreshTokenScalarWhereWithAggregatesInput = {
    AND?: CustomerRefreshTokenScalarWhereWithAggregatesInput | CustomerRefreshTokenScalarWhereWithAggregatesInput[]
    OR?: CustomerRefreshTokenScalarWhereWithAggregatesInput[]
    NOT?: CustomerRefreshTokenScalarWhereWithAggregatesInput | CustomerRefreshTokenScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CustomerRefreshToken"> | string
    token?: StringWithAggregatesFilter<"CustomerRefreshToken"> | string
    customerId?: StringWithAggregatesFilter<"CustomerRefreshToken"> | string
    expiresAt?: DateTimeWithAggregatesFilter<"CustomerRefreshToken"> | Date | string
    createdAt?: DateTimeWithAggregatesFilter<"CustomerRefreshToken"> | Date | string
    isRevoked?: BoolWithAggregatesFilter<"CustomerRefreshToken"> | boolean
  }

  export type OrderWhereInput = {
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    id?: StringFilter<"Order"> | string
    orderNumber?: StringFilter<"Order"> | string
    userId?: StringNullableFilter<"Order"> | string | null
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    totalAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    tax?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    discount?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonFilter<"Order">
    billingAddress?: JsonFilter<"Order">
    paymentMethod?: StringFilter<"Order"> | string
    paymentStatus?: EnumPaymentStatusFilter<"Order"> | $Enums.PaymentStatus
    trackingNumber?: StringNullableFilter<"Order"> | string | null
    trackingStatus?: StringNullableFilter<"Order"> | string | null
    customerId?: StringNullableFilter<"Order"> | string | null
    created_at?: DateTimeFilter<"Order"> | Date | string
    created_by?: StringFilter<"Order"> | string
    created_ip?: StringNullableFilter<"Order"> | string | null
    updated_at?: DateTimeFilter<"Order"> | Date | string
    updated_by?: StringNullableFilter<"Order"> | string | null
    updated_ip?: StringNullableFilter<"Order"> | string | null
    company_id?: StringFilter<"Order"> | string
    paymentGateway?: StringNullableFilter<"Order"> | string | null
    sslcommerzTransactionId?: StringNullableFilter<"Order"> | string | null
    paypalOrderId?: StringNullableFilter<"Order"> | string | null
    paymentMetadata?: JsonNullableFilter<"Order">
    coupon_id?: StringNullableFilter<"Order"> | string | null
    discount_amount?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemListRelationFilter
    customer?: XOR<CustomerNullableRelationFilter, CustomerWhereInput> | null
    PaymentTransaction?: PaymentTransactionListRelationFilter
    coupon?: XOR<CouponNullableRelationFilter, CouponWhereInput> | null
  }

  export type OrderOrderByWithRelationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrderInput | SortOrder
    status?: SortOrder
    totalAmount?: SortOrder
    shippingCost?: SortOrder
    tax?: SortOrder
    discount?: SortOrderInput | SortOrder
    finalAmount?: SortOrder
    shippingAddress?: SortOrder
    billingAddress?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    trackingStatus?: SortOrderInput | SortOrder
    customerId?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    paymentGateway?: SortOrderInput | SortOrder
    sslcommerzTransactionId?: SortOrderInput | SortOrder
    paypalOrderId?: SortOrderInput | SortOrder
    paymentMetadata?: SortOrderInput | SortOrder
    coupon_id?: SortOrderInput | SortOrder
    discount_amount?: SortOrderInput | SortOrder
    orderItems?: OrderItemOrderByRelationAggregateInput
    customer?: CustomerOrderByWithRelationInput
    PaymentTransaction?: PaymentTransactionOrderByRelationAggregateInput
    coupon?: CouponOrderByWithRelationInput
  }

  export type OrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    orderNumber?: string
    sslcommerzTransactionId?: string
    paypalOrderId?: string
    AND?: OrderWhereInput | OrderWhereInput[]
    OR?: OrderWhereInput[]
    NOT?: OrderWhereInput | OrderWhereInput[]
    userId?: StringNullableFilter<"Order"> | string | null
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    totalAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    tax?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    discount?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonFilter<"Order">
    billingAddress?: JsonFilter<"Order">
    paymentMethod?: StringFilter<"Order"> | string
    paymentStatus?: EnumPaymentStatusFilter<"Order"> | $Enums.PaymentStatus
    trackingNumber?: StringNullableFilter<"Order"> | string | null
    trackingStatus?: StringNullableFilter<"Order"> | string | null
    customerId?: StringNullableFilter<"Order"> | string | null
    created_at?: DateTimeFilter<"Order"> | Date | string
    created_by?: StringFilter<"Order"> | string
    created_ip?: StringNullableFilter<"Order"> | string | null
    updated_at?: DateTimeFilter<"Order"> | Date | string
    updated_by?: StringNullableFilter<"Order"> | string | null
    updated_ip?: StringNullableFilter<"Order"> | string | null
    company_id?: StringFilter<"Order"> | string
    paymentGateway?: StringNullableFilter<"Order"> | string | null
    paymentMetadata?: JsonNullableFilter<"Order">
    coupon_id?: StringNullableFilter<"Order"> | string | null
    discount_amount?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemListRelationFilter
    customer?: XOR<CustomerNullableRelationFilter, CustomerWhereInput> | null
    PaymentTransaction?: PaymentTransactionListRelationFilter
    coupon?: XOR<CouponNullableRelationFilter, CouponWhereInput> | null
  }, "id" | "orderNumber" | "sslcommerzTransactionId" | "paypalOrderId">

  export type OrderOrderByWithAggregationInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrderInput | SortOrder
    status?: SortOrder
    totalAmount?: SortOrder
    shippingCost?: SortOrder
    tax?: SortOrder
    discount?: SortOrderInput | SortOrder
    finalAmount?: SortOrder
    shippingAddress?: SortOrder
    billingAddress?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    trackingNumber?: SortOrderInput | SortOrder
    trackingStatus?: SortOrderInput | SortOrder
    customerId?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    paymentGateway?: SortOrderInput | SortOrder
    sslcommerzTransactionId?: SortOrderInput | SortOrder
    paypalOrderId?: SortOrderInput | SortOrder
    paymentMetadata?: SortOrderInput | SortOrder
    coupon_id?: SortOrderInput | SortOrder
    discount_amount?: SortOrderInput | SortOrder
    _count?: OrderCountOrderByAggregateInput
    _avg?: OrderAvgOrderByAggregateInput
    _max?: OrderMaxOrderByAggregateInput
    _min?: OrderMinOrderByAggregateInput
    _sum?: OrderSumOrderByAggregateInput
  }

  export type OrderScalarWhereWithAggregatesInput = {
    AND?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    OR?: OrderScalarWhereWithAggregatesInput[]
    NOT?: OrderScalarWhereWithAggregatesInput | OrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Order"> | string
    orderNumber?: StringWithAggregatesFilter<"Order"> | string
    userId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    status?: EnumOrderStatusWithAggregatesFilter<"Order"> | $Enums.OrderStatus
    totalAmount?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    tax?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    discount?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonWithAggregatesFilter<"Order">
    billingAddress?: JsonWithAggregatesFilter<"Order">
    paymentMethod?: StringWithAggregatesFilter<"Order"> | string
    paymentStatus?: EnumPaymentStatusWithAggregatesFilter<"Order"> | $Enums.PaymentStatus
    trackingNumber?: StringNullableWithAggregatesFilter<"Order"> | string | null
    trackingStatus?: StringNullableWithAggregatesFilter<"Order"> | string | null
    customerId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    created_by?: StringWithAggregatesFilter<"Order"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Order"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Order"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Order"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Order"> | string | null
    company_id?: StringWithAggregatesFilter<"Order"> | string
    paymentGateway?: StringNullableWithAggregatesFilter<"Order"> | string | null
    sslcommerzTransactionId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    paypalOrderId?: StringNullableWithAggregatesFilter<"Order"> | string | null
    paymentMetadata?: JsonNullableWithAggregatesFilter<"Order">
    coupon_id?: StringNullableWithAggregatesFilter<"Order"> | string | null
    discount_amount?: DecimalNullableWithAggregatesFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
  }

  export type OrderItemWhereInput = {
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    id?: StringFilter<"OrderItem"> | string
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    variantId?: StringNullableFilter<"OrderItem"> | string | null
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringFilter<"OrderItem"> | string
    variantAttributes?: JsonNullableFilter<"OrderItem">
    created_at?: DateTimeFilter<"OrderItem"> | Date | string
    created_by?: StringFilter<"OrderItem"> | string
    created_ip?: StringNullableFilter<"OrderItem"> | string | null
    updated_at?: DateTimeFilter<"OrderItem"> | Date | string
    updated_by?: StringNullableFilter<"OrderItem"> | string | null
    updated_ip?: StringNullableFilter<"OrderItem"> | string | null
    company_id?: StringFilter<"OrderItem"> | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
  }

  export type OrderItemOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    productName?: SortOrder
    variantAttributes?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    order?: OrderOrderByWithRelationInput
  }

  export type OrderItemWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: OrderItemWhereInput | OrderItemWhereInput[]
    OR?: OrderItemWhereInput[]
    NOT?: OrderItemWhereInput | OrderItemWhereInput[]
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    variantId?: StringNullableFilter<"OrderItem"> | string | null
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringFilter<"OrderItem"> | string
    variantAttributes?: JsonNullableFilter<"OrderItem">
    created_at?: DateTimeFilter<"OrderItem"> | Date | string
    created_by?: StringFilter<"OrderItem"> | string
    created_ip?: StringNullableFilter<"OrderItem"> | string | null
    updated_at?: DateTimeFilter<"OrderItem"> | Date | string
    updated_by?: StringNullableFilter<"OrderItem"> | string | null
    updated_ip?: StringNullableFilter<"OrderItem"> | string | null
    company_id?: StringFilter<"OrderItem"> | string
    order?: XOR<OrderRelationFilter, OrderWhereInput>
  }, "id">

  export type OrderItemOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    productName?: SortOrder
    variantAttributes?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: OrderItemCountOrderByAggregateInput
    _avg?: OrderItemAvgOrderByAggregateInput
    _max?: OrderItemMaxOrderByAggregateInput
    _min?: OrderItemMinOrderByAggregateInput
    _sum?: OrderItemSumOrderByAggregateInput
  }

  export type OrderItemScalarWhereWithAggregatesInput = {
    AND?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    OR?: OrderItemScalarWhereWithAggregatesInput[]
    NOT?: OrderItemScalarWhereWithAggregatesInput | OrderItemScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"OrderItem"> | string
    orderId?: StringWithAggregatesFilter<"OrderItem"> | string
    productId?: StringWithAggregatesFilter<"OrderItem"> | string
    variantId?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    quantity?: IntWithAggregatesFilter<"OrderItem"> | number
    unitPrice?: DecimalWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalWithAggregatesFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringWithAggregatesFilter<"OrderItem"> | string
    variantAttributes?: JsonNullableWithAggregatesFilter<"OrderItem">
    created_at?: DateTimeWithAggregatesFilter<"OrderItem"> | Date | string
    created_by?: StringWithAggregatesFilter<"OrderItem"> | string
    created_ip?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"OrderItem"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"OrderItem"> | string | null
    company_id?: StringWithAggregatesFilter<"OrderItem"> | string
  }

  export type StockMovementWhereInput = {
    AND?: StockMovementWhereInput | StockMovementWhereInput[]
    OR?: StockMovementWhereInput[]
    NOT?: StockMovementWhereInput | StockMovementWhereInput[]
    id?: StringFilter<"StockMovement"> | string
    productId?: StringFilter<"StockMovement"> | string
    variantId?: StringNullableFilter<"StockMovement"> | string | null
    quantity?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    type?: EnumMovementTypeFilter<"StockMovement"> | $Enums.MovementType
    reference?: StringFilter<"StockMovement"> | string
    notes?: StringNullableFilter<"StockMovement"> | string | null
    created_at?: DateTimeFilter<"StockMovement"> | Date | string
    created_by?: StringFilter<"StockMovement"> | string
    created_ip?: StringNullableFilter<"StockMovement"> | string | null
    updated_at?: DateTimeFilter<"StockMovement"> | Date | string
    updated_by?: StringNullableFilter<"StockMovement"> | string | null
    updated_ip?: StringNullableFilter<"StockMovement"> | string | null
    company_id?: StringFilter<"StockMovement"> | string
  }

  export type StockMovementOrderByWithRelationInput = {
    id?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    quantity?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
  }

  export type StockMovementWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: StockMovementWhereInput | StockMovementWhereInput[]
    OR?: StockMovementWhereInput[]
    NOT?: StockMovementWhereInput | StockMovementWhereInput[]
    productId?: StringFilter<"StockMovement"> | string
    variantId?: StringNullableFilter<"StockMovement"> | string | null
    quantity?: DecimalFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    type?: EnumMovementTypeFilter<"StockMovement"> | $Enums.MovementType
    reference?: StringFilter<"StockMovement"> | string
    notes?: StringNullableFilter<"StockMovement"> | string | null
    created_at?: DateTimeFilter<"StockMovement"> | Date | string
    created_by?: StringFilter<"StockMovement"> | string
    created_ip?: StringNullableFilter<"StockMovement"> | string | null
    updated_at?: DateTimeFilter<"StockMovement"> | Date | string
    updated_by?: StringNullableFilter<"StockMovement"> | string | null
    updated_ip?: StringNullableFilter<"StockMovement"> | string | null
    company_id?: StringFilter<"StockMovement"> | string
  }, "id">

  export type StockMovementOrderByWithAggregationInput = {
    id?: SortOrder
    productId?: SortOrder
    variantId?: SortOrderInput | SortOrder
    quantity?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    notes?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: StockMovementCountOrderByAggregateInput
    _avg?: StockMovementAvgOrderByAggregateInput
    _max?: StockMovementMaxOrderByAggregateInput
    _min?: StockMovementMinOrderByAggregateInput
    _sum?: StockMovementSumOrderByAggregateInput
  }

  export type StockMovementScalarWhereWithAggregatesInput = {
    AND?: StockMovementScalarWhereWithAggregatesInput | StockMovementScalarWhereWithAggregatesInput[]
    OR?: StockMovementScalarWhereWithAggregatesInput[]
    NOT?: StockMovementScalarWhereWithAggregatesInput | StockMovementScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"StockMovement"> | string
    productId?: StringWithAggregatesFilter<"StockMovement"> | string
    variantId?: StringNullableWithAggregatesFilter<"StockMovement"> | string | null
    quantity?: DecimalWithAggregatesFilter<"StockMovement"> | Decimal | DecimalJsLike | number | string
    type?: EnumMovementTypeWithAggregatesFilter<"StockMovement"> | $Enums.MovementType
    reference?: StringWithAggregatesFilter<"StockMovement"> | string
    notes?: StringNullableWithAggregatesFilter<"StockMovement"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"StockMovement"> | Date | string
    created_by?: StringWithAggregatesFilter<"StockMovement"> | string
    created_ip?: StringNullableWithAggregatesFilter<"StockMovement"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"StockMovement"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"StockMovement"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"StockMovement"> | string | null
    company_id?: StringWithAggregatesFilter<"StockMovement"> | string
  }

  export type UserSettingsWhereInput = {
    AND?: UserSettingsWhereInput | UserSettingsWhereInput[]
    OR?: UserSettingsWhereInput[]
    NOT?: UserSettingsWhereInput | UserSettingsWhereInput[]
    id?: StringFilter<"UserSettings"> | string
    user_id?: StringFilter<"UserSettings"> | string
    settings?: JsonFilter<"UserSettings">
    created_at?: DateTimeFilter<"UserSettings"> | Date | string
    created_by?: StringFilter<"UserSettings"> | string
    created_ip?: StringNullableFilter<"UserSettings"> | string | null
    updated_at?: DateTimeFilter<"UserSettings"> | Date | string
    updated_by?: StringNullableFilter<"UserSettings"> | string | null
    updated_ip?: StringNullableFilter<"UserSettings"> | string | null
    company_id?: StringFilter<"UserSettings"> | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }

  export type UserSettingsOrderByWithRelationInput = {
    id?: SortOrder
    user_id?: SortOrder
    settings?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    user?: UserOrderByWithRelationInput
  }

  export type UserSettingsWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: UserSettingsWhereInput | UserSettingsWhereInput[]
    OR?: UserSettingsWhereInput[]
    NOT?: UserSettingsWhereInput | UserSettingsWhereInput[]
    user_id?: StringFilter<"UserSettings"> | string
    settings?: JsonFilter<"UserSettings">
    created_at?: DateTimeFilter<"UserSettings"> | Date | string
    created_by?: StringFilter<"UserSettings"> | string
    created_ip?: StringNullableFilter<"UserSettings"> | string | null
    updated_at?: DateTimeFilter<"UserSettings"> | Date | string
    updated_by?: StringNullableFilter<"UserSettings"> | string | null
    updated_ip?: StringNullableFilter<"UserSettings"> | string | null
    company_id?: StringFilter<"UserSettings"> | string
    user?: XOR<UserRelationFilter, UserWhereInput>
  }, "id">

  export type UserSettingsOrderByWithAggregationInput = {
    id?: SortOrder
    user_id?: SortOrder
    settings?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: UserSettingsCountOrderByAggregateInput
    _max?: UserSettingsMaxOrderByAggregateInput
    _min?: UserSettingsMinOrderByAggregateInput
  }

  export type UserSettingsScalarWhereWithAggregatesInput = {
    AND?: UserSettingsScalarWhereWithAggregatesInput | UserSettingsScalarWhereWithAggregatesInput[]
    OR?: UserSettingsScalarWhereWithAggregatesInput[]
    NOT?: UserSettingsScalarWhereWithAggregatesInput | UserSettingsScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"UserSettings"> | string
    user_id?: StringWithAggregatesFilter<"UserSettings"> | string
    settings?: JsonWithAggregatesFilter<"UserSettings">
    created_at?: DateTimeWithAggregatesFilter<"UserSettings"> | Date | string
    created_by?: StringWithAggregatesFilter<"UserSettings"> | string
    created_ip?: StringNullableWithAggregatesFilter<"UserSettings"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"UserSettings"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"UserSettings"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"UserSettings"> | string | null
    company_id?: StringWithAggregatesFilter<"UserSettings"> | string
  }

  export type CustomerAddressWhereInput = {
    AND?: CustomerAddressWhereInput | CustomerAddressWhereInput[]
    OR?: CustomerAddressWhereInput[]
    NOT?: CustomerAddressWhereInput | CustomerAddressWhereInput[]
    id?: StringFilter<"CustomerAddress"> | string
    customerId?: StringNullableFilter<"CustomerAddress"> | string | null
    label?: StringFilter<"CustomerAddress"> | string
    firstName?: StringFilter<"CustomerAddress"> | string
    lastName?: StringFilter<"CustomerAddress"> | string
    phone?: StringFilter<"CustomerAddress"> | string
    email?: StringNullableFilter<"CustomerAddress"> | string | null
    address?: StringFilter<"CustomerAddress"> | string
    apartment?: StringNullableFilter<"CustomerAddress"> | string | null
    city?: StringFilter<"CustomerAddress"> | string
    state?: StringFilter<"CustomerAddress"> | string
    country?: StringFilter<"CustomerAddress"> | string
    postalCode?: StringFilter<"CustomerAddress"> | string
    isDefault?: BoolFilter<"CustomerAddress"> | boolean
    created_at?: DateTimeFilter<"CustomerAddress"> | Date | string
    created_by?: StringFilter<"CustomerAddress"> | string
    created_ip?: StringNullableFilter<"CustomerAddress"> | string | null
    updated_at?: DateTimeFilter<"CustomerAddress"> | Date | string
    updated_by?: StringNullableFilter<"CustomerAddress"> | string | null
    updated_ip?: StringNullableFilter<"CustomerAddress"> | string | null
    customer?: XOR<CustomerNullableRelationFilter, CustomerWhereInput> | null
  }

  export type CustomerAddressOrderByWithRelationInput = {
    id?: SortOrder
    customerId?: SortOrderInput | SortOrder
    label?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    email?: SortOrderInput | SortOrder
    address?: SortOrder
    apartment?: SortOrderInput | SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    postalCode?: SortOrder
    isDefault?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    customer?: CustomerOrderByWithRelationInput
  }

  export type CustomerAddressWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: CustomerAddressWhereInput | CustomerAddressWhereInput[]
    OR?: CustomerAddressWhereInput[]
    NOT?: CustomerAddressWhereInput | CustomerAddressWhereInput[]
    customerId?: StringNullableFilter<"CustomerAddress"> | string | null
    label?: StringFilter<"CustomerAddress"> | string
    firstName?: StringFilter<"CustomerAddress"> | string
    lastName?: StringFilter<"CustomerAddress"> | string
    phone?: StringFilter<"CustomerAddress"> | string
    email?: StringNullableFilter<"CustomerAddress"> | string | null
    address?: StringFilter<"CustomerAddress"> | string
    apartment?: StringNullableFilter<"CustomerAddress"> | string | null
    city?: StringFilter<"CustomerAddress"> | string
    state?: StringFilter<"CustomerAddress"> | string
    country?: StringFilter<"CustomerAddress"> | string
    postalCode?: StringFilter<"CustomerAddress"> | string
    isDefault?: BoolFilter<"CustomerAddress"> | boolean
    created_at?: DateTimeFilter<"CustomerAddress"> | Date | string
    created_by?: StringFilter<"CustomerAddress"> | string
    created_ip?: StringNullableFilter<"CustomerAddress"> | string | null
    updated_at?: DateTimeFilter<"CustomerAddress"> | Date | string
    updated_by?: StringNullableFilter<"CustomerAddress"> | string | null
    updated_ip?: StringNullableFilter<"CustomerAddress"> | string | null
    customer?: XOR<CustomerNullableRelationFilter, CustomerWhereInput> | null
  }, "id">

  export type CustomerAddressOrderByWithAggregationInput = {
    id?: SortOrder
    customerId?: SortOrderInput | SortOrder
    label?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    email?: SortOrderInput | SortOrder
    address?: SortOrder
    apartment?: SortOrderInput | SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    postalCode?: SortOrder
    isDefault?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    _count?: CustomerAddressCountOrderByAggregateInput
    _max?: CustomerAddressMaxOrderByAggregateInput
    _min?: CustomerAddressMinOrderByAggregateInput
  }

  export type CustomerAddressScalarWhereWithAggregatesInput = {
    AND?: CustomerAddressScalarWhereWithAggregatesInput | CustomerAddressScalarWhereWithAggregatesInput[]
    OR?: CustomerAddressScalarWhereWithAggregatesInput[]
    NOT?: CustomerAddressScalarWhereWithAggregatesInput | CustomerAddressScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"CustomerAddress"> | string
    customerId?: StringNullableWithAggregatesFilter<"CustomerAddress"> | string | null
    label?: StringWithAggregatesFilter<"CustomerAddress"> | string
    firstName?: StringWithAggregatesFilter<"CustomerAddress"> | string
    lastName?: StringWithAggregatesFilter<"CustomerAddress"> | string
    phone?: StringWithAggregatesFilter<"CustomerAddress"> | string
    email?: StringNullableWithAggregatesFilter<"CustomerAddress"> | string | null
    address?: StringWithAggregatesFilter<"CustomerAddress"> | string
    apartment?: StringNullableWithAggregatesFilter<"CustomerAddress"> | string | null
    city?: StringWithAggregatesFilter<"CustomerAddress"> | string
    state?: StringWithAggregatesFilter<"CustomerAddress"> | string
    country?: StringWithAggregatesFilter<"CustomerAddress"> | string
    postalCode?: StringWithAggregatesFilter<"CustomerAddress"> | string
    isDefault?: BoolWithAggregatesFilter<"CustomerAddress"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"CustomerAddress"> | Date | string
    created_by?: StringWithAggregatesFilter<"CustomerAddress"> | string
    created_ip?: StringNullableWithAggregatesFilter<"CustomerAddress"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"CustomerAddress"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"CustomerAddress"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"CustomerAddress"> | string | null
  }

  export type PendingOrderWhereInput = {
    AND?: PendingOrderWhereInput | PendingOrderWhereInput[]
    OR?: PendingOrderWhereInput[]
    NOT?: PendingOrderWhereInput | PendingOrderWhereInput[]
    id?: StringFilter<"PendingOrder"> | string
    transactionId?: StringFilter<"PendingOrder"> | string
    customerId?: StringNullableFilter<"PendingOrder"> | string | null
    addressId?: StringFilter<"PendingOrder"> | string
    items?: JsonFilter<"PendingOrder">
    couponId?: StringNullableFilter<"PendingOrder"> | string | null
    couponCode?: StringNullableFilter<"PendingOrder"> | string | null
    subtotal?: DecimalFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    discount?: DecimalFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"PendingOrder"> | string
    paymentMethod?: StringFilter<"PendingOrder"> | string
    created_at?: DateTimeFilter<"PendingOrder"> | Date | string
    created_by?: StringFilter<"PendingOrder"> | string
    created_ip?: StringNullableFilter<"PendingOrder"> | string | null
    updated_at?: DateTimeFilter<"PendingOrder"> | Date | string
    updated_by?: StringNullableFilter<"PendingOrder"> | string | null
    updated_ip?: StringNullableFilter<"PendingOrder"> | string | null
    shippingChargeId?: StringNullableFilter<"PendingOrder"> | string | null
    customer?: XOR<CustomerNullableRelationFilter, CustomerWhereInput> | null
    coupon?: XOR<CouponNullableRelationFilter, CouponWhereInput> | null
  }

  export type PendingOrderOrderByWithRelationInput = {
    id?: SortOrder
    transactionId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    addressId?: SortOrder
    items?: SortOrder
    couponId?: SortOrderInput | SortOrder
    couponCode?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    shippingCost?: SortOrder
    discount?: SortOrder
    total?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    shippingChargeId?: SortOrderInput | SortOrder
    customer?: CustomerOrderByWithRelationInput
    coupon?: CouponOrderByWithRelationInput
  }

  export type PendingOrderWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    transactionId?: string
    AND?: PendingOrderWhereInput | PendingOrderWhereInput[]
    OR?: PendingOrderWhereInput[]
    NOT?: PendingOrderWhereInput | PendingOrderWhereInput[]
    customerId?: StringNullableFilter<"PendingOrder"> | string | null
    addressId?: StringFilter<"PendingOrder"> | string
    items?: JsonFilter<"PendingOrder">
    couponId?: StringNullableFilter<"PendingOrder"> | string | null
    couponCode?: StringNullableFilter<"PendingOrder"> | string | null
    subtotal?: DecimalFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    discount?: DecimalFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"PendingOrder"> | string
    paymentMethod?: StringFilter<"PendingOrder"> | string
    created_at?: DateTimeFilter<"PendingOrder"> | Date | string
    created_by?: StringFilter<"PendingOrder"> | string
    created_ip?: StringNullableFilter<"PendingOrder"> | string | null
    updated_at?: DateTimeFilter<"PendingOrder"> | Date | string
    updated_by?: StringNullableFilter<"PendingOrder"> | string | null
    updated_ip?: StringNullableFilter<"PendingOrder"> | string | null
    shippingChargeId?: StringNullableFilter<"PendingOrder"> | string | null
    customer?: XOR<CustomerNullableRelationFilter, CustomerWhereInput> | null
    coupon?: XOR<CouponNullableRelationFilter, CouponWhereInput> | null
  }, "id" | "transactionId">

  export type PendingOrderOrderByWithAggregationInput = {
    id?: SortOrder
    transactionId?: SortOrder
    customerId?: SortOrderInput | SortOrder
    addressId?: SortOrder
    items?: SortOrder
    couponId?: SortOrderInput | SortOrder
    couponCode?: SortOrderInput | SortOrder
    subtotal?: SortOrder
    shippingCost?: SortOrder
    discount?: SortOrder
    total?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    shippingChargeId?: SortOrderInput | SortOrder
    _count?: PendingOrderCountOrderByAggregateInput
    _avg?: PendingOrderAvgOrderByAggregateInput
    _max?: PendingOrderMaxOrderByAggregateInput
    _min?: PendingOrderMinOrderByAggregateInput
    _sum?: PendingOrderSumOrderByAggregateInput
  }

  export type PendingOrderScalarWhereWithAggregatesInput = {
    AND?: PendingOrderScalarWhereWithAggregatesInput | PendingOrderScalarWhereWithAggregatesInput[]
    OR?: PendingOrderScalarWhereWithAggregatesInput[]
    NOT?: PendingOrderScalarWhereWithAggregatesInput | PendingOrderScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PendingOrder"> | string
    transactionId?: StringWithAggregatesFilter<"PendingOrder"> | string
    customerId?: StringNullableWithAggregatesFilter<"PendingOrder"> | string | null
    addressId?: StringWithAggregatesFilter<"PendingOrder"> | string
    items?: JsonWithAggregatesFilter<"PendingOrder">
    couponId?: StringNullableWithAggregatesFilter<"PendingOrder"> | string | null
    couponCode?: StringNullableWithAggregatesFilter<"PendingOrder"> | string | null
    subtotal?: DecimalWithAggregatesFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalWithAggregatesFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    discount?: DecimalWithAggregatesFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    total?: DecimalWithAggregatesFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    status?: StringWithAggregatesFilter<"PendingOrder"> | string
    paymentMethod?: StringWithAggregatesFilter<"PendingOrder"> | string
    created_at?: DateTimeWithAggregatesFilter<"PendingOrder"> | Date | string
    created_by?: StringWithAggregatesFilter<"PendingOrder"> | string
    created_ip?: StringNullableWithAggregatesFilter<"PendingOrder"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"PendingOrder"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"PendingOrder"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"PendingOrder"> | string | null
    shippingChargeId?: StringNullableWithAggregatesFilter<"PendingOrder"> | string | null
  }

  export type PaymentTransactionWhereInput = {
    AND?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    OR?: PaymentTransactionWhereInput[]
    NOT?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    id?: StringFilter<"PaymentTransaction"> | string
    orderId?: StringNullableFilter<"PaymentTransaction"> | string | null
    transactionId?: StringFilter<"PaymentTransaction"> | string
    gateway?: StringFilter<"PaymentTransaction"> | string
    amount?: DecimalFilter<"PaymentTransaction"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PaymentTransaction"> | string
    status?: StringFilter<"PaymentTransaction"> | string
    metadata?: JsonNullableFilter<"PaymentTransaction">
    created_at?: DateTimeFilter<"PaymentTransaction"> | Date | string
    created_by?: StringFilter<"PaymentTransaction"> | string
    created_ip?: StringNullableFilter<"PaymentTransaction"> | string | null
    updated_at?: DateTimeFilter<"PaymentTransaction"> | Date | string
    updated_by?: StringNullableFilter<"PaymentTransaction"> | string | null
    updated_ip?: StringNullableFilter<"PaymentTransaction"> | string | null
    order?: XOR<OrderNullableRelationFilter, OrderWhereInput> | null
  }

  export type PaymentTransactionOrderByWithRelationInput = {
    id?: SortOrder
    orderId?: SortOrderInput | SortOrder
    transactionId?: SortOrder
    gateway?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    metadata?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    order?: OrderOrderByWithRelationInput
  }

  export type PaymentTransactionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    transactionId?: string
    AND?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    OR?: PaymentTransactionWhereInput[]
    NOT?: PaymentTransactionWhereInput | PaymentTransactionWhereInput[]
    orderId?: StringNullableFilter<"PaymentTransaction"> | string | null
    gateway?: StringFilter<"PaymentTransaction"> | string
    amount?: DecimalFilter<"PaymentTransaction"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PaymentTransaction"> | string
    status?: StringFilter<"PaymentTransaction"> | string
    metadata?: JsonNullableFilter<"PaymentTransaction">
    created_at?: DateTimeFilter<"PaymentTransaction"> | Date | string
    created_by?: StringFilter<"PaymentTransaction"> | string
    created_ip?: StringNullableFilter<"PaymentTransaction"> | string | null
    updated_at?: DateTimeFilter<"PaymentTransaction"> | Date | string
    updated_by?: StringNullableFilter<"PaymentTransaction"> | string | null
    updated_ip?: StringNullableFilter<"PaymentTransaction"> | string | null
    order?: XOR<OrderNullableRelationFilter, OrderWhereInput> | null
  }, "id" | "transactionId">

  export type PaymentTransactionOrderByWithAggregationInput = {
    id?: SortOrder
    orderId?: SortOrderInput | SortOrder
    transactionId?: SortOrder
    gateway?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    metadata?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    _count?: PaymentTransactionCountOrderByAggregateInput
    _avg?: PaymentTransactionAvgOrderByAggregateInput
    _max?: PaymentTransactionMaxOrderByAggregateInput
    _min?: PaymentTransactionMinOrderByAggregateInput
    _sum?: PaymentTransactionSumOrderByAggregateInput
  }

  export type PaymentTransactionScalarWhereWithAggregatesInput = {
    AND?: PaymentTransactionScalarWhereWithAggregatesInput | PaymentTransactionScalarWhereWithAggregatesInput[]
    OR?: PaymentTransactionScalarWhereWithAggregatesInput[]
    NOT?: PaymentTransactionScalarWhereWithAggregatesInput | PaymentTransactionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    orderId?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    transactionId?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    gateway?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    amount?: DecimalWithAggregatesFilter<"PaymentTransaction"> | Decimal | DecimalJsLike | number | string
    currency?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    status?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    metadata?: JsonNullableWithAggregatesFilter<"PaymentTransaction">
    created_at?: DateTimeWithAggregatesFilter<"PaymentTransaction"> | Date | string
    created_by?: StringWithAggregatesFilter<"PaymentTransaction"> | string
    created_ip?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"PaymentTransaction"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"PaymentTransaction"> | string | null
  }

  export type WishlistWhereInput = {
    AND?: WishlistWhereInput | WishlistWhereInput[]
    OR?: WishlistWhereInput[]
    NOT?: WishlistWhereInput | WishlistWhereInput[]
    id?: StringFilter<"Wishlist"> | string
    userId?: StringFilter<"Wishlist"> | string
    productId?: StringFilter<"Wishlist"> | string
    created_at?: DateTimeFilter<"Wishlist"> | Date | string
    updated_at?: DateTimeFilter<"Wishlist"> | Date | string
    user?: XOR<CustomerRelationFilter, CustomerWhereInput>
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }

  export type WishlistOrderByWithRelationInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    user?: CustomerOrderByWithRelationInput
    product?: ProductOrderByWithRelationInput
  }

  export type WishlistWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: WishlistWhereInput | WishlistWhereInput[]
    OR?: WishlistWhereInput[]
    NOT?: WishlistWhereInput | WishlistWhereInput[]
    userId?: StringFilter<"Wishlist"> | string
    productId?: StringFilter<"Wishlist"> | string
    created_at?: DateTimeFilter<"Wishlist"> | Date | string
    updated_at?: DateTimeFilter<"Wishlist"> | Date | string
    user?: XOR<CustomerRelationFilter, CustomerWhereInput>
    product?: XOR<ProductRelationFilter, ProductWhereInput>
  }, "id">

  export type WishlistOrderByWithAggregationInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
    _count?: WishlistCountOrderByAggregateInput
    _max?: WishlistMaxOrderByAggregateInput
    _min?: WishlistMinOrderByAggregateInput
  }

  export type WishlistScalarWhereWithAggregatesInput = {
    AND?: WishlistScalarWhereWithAggregatesInput | WishlistScalarWhereWithAggregatesInput[]
    OR?: WishlistScalarWhereWithAggregatesInput[]
    NOT?: WishlistScalarWhereWithAggregatesInput | WishlistScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Wishlist"> | string
    userId?: StringWithAggregatesFilter<"Wishlist"> | string
    productId?: StringWithAggregatesFilter<"Wishlist"> | string
    created_at?: DateTimeWithAggregatesFilter<"Wishlist"> | Date | string
    updated_at?: DateTimeWithAggregatesFilter<"Wishlist"> | Date | string
  }

  export type BannerWhereInput = {
    AND?: BannerWhereInput | BannerWhereInput[]
    OR?: BannerWhereInput[]
    NOT?: BannerWhereInput | BannerWhereInput[]
    id?: StringFilter<"Banner"> | string
    title?: StringNullableFilter<"Banner"> | string | null
    subtitle?: StringNullableFilter<"Banner"> | string | null
    image?: StringFilter<"Banner"> | string
    link?: StringNullableFilter<"Banner"> | string | null
    type?: StringFilter<"Banner"> | string
    sequence_no?: IntFilter<"Banner"> | number
    is_active?: BoolFilter<"Banner"> | boolean
    start_date?: DateTimeNullableFilter<"Banner"> | Date | string | null
    end_date?: DateTimeNullableFilter<"Banner"> | Date | string | null
    created_at?: DateTimeFilter<"Banner"> | Date | string
    created_by?: StringFilter<"Banner"> | string
    created_ip?: StringNullableFilter<"Banner"> | string | null
    updated_at?: DateTimeFilter<"Banner"> | Date | string
    updated_by?: StringNullableFilter<"Banner"> | string | null
    updated_ip?: StringNullableFilter<"Banner"> | string | null
    company_id?: StringFilter<"Banner"> | string
  }

  export type BannerOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    subtitle?: SortOrderInput | SortOrder
    image?: SortOrder
    link?: SortOrderInput | SortOrder
    type?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    start_date?: SortOrderInput | SortOrder
    end_date?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
  }

  export type BannerWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: BannerWhereInput | BannerWhereInput[]
    OR?: BannerWhereInput[]
    NOT?: BannerWhereInput | BannerWhereInput[]
    title?: StringNullableFilter<"Banner"> | string | null
    subtitle?: StringNullableFilter<"Banner"> | string | null
    image?: StringFilter<"Banner"> | string
    link?: StringNullableFilter<"Banner"> | string | null
    type?: StringFilter<"Banner"> | string
    sequence_no?: IntFilter<"Banner"> | number
    is_active?: BoolFilter<"Banner"> | boolean
    start_date?: DateTimeNullableFilter<"Banner"> | Date | string | null
    end_date?: DateTimeNullableFilter<"Banner"> | Date | string | null
    created_at?: DateTimeFilter<"Banner"> | Date | string
    created_by?: StringFilter<"Banner"> | string
    created_ip?: StringNullableFilter<"Banner"> | string | null
    updated_at?: DateTimeFilter<"Banner"> | Date | string
    updated_by?: StringNullableFilter<"Banner"> | string | null
    updated_ip?: StringNullableFilter<"Banner"> | string | null
    company_id?: StringFilter<"Banner"> | string
  }, "id">

  export type BannerOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrderInput | SortOrder
    subtitle?: SortOrderInput | SortOrder
    image?: SortOrder
    link?: SortOrderInput | SortOrder
    type?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    start_date?: SortOrderInput | SortOrder
    end_date?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: BannerCountOrderByAggregateInput
    _avg?: BannerAvgOrderByAggregateInput
    _max?: BannerMaxOrderByAggregateInput
    _min?: BannerMinOrderByAggregateInput
    _sum?: BannerSumOrderByAggregateInput
  }

  export type BannerScalarWhereWithAggregatesInput = {
    AND?: BannerScalarWhereWithAggregatesInput | BannerScalarWhereWithAggregatesInput[]
    OR?: BannerScalarWhereWithAggregatesInput[]
    NOT?: BannerScalarWhereWithAggregatesInput | BannerScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Banner"> | string
    title?: StringNullableWithAggregatesFilter<"Banner"> | string | null
    subtitle?: StringNullableWithAggregatesFilter<"Banner"> | string | null
    image?: StringWithAggregatesFilter<"Banner"> | string
    link?: StringNullableWithAggregatesFilter<"Banner"> | string | null
    type?: StringWithAggregatesFilter<"Banner"> | string
    sequence_no?: IntWithAggregatesFilter<"Banner"> | number
    is_active?: BoolWithAggregatesFilter<"Banner"> | boolean
    start_date?: DateTimeNullableWithAggregatesFilter<"Banner"> | Date | string | null
    end_date?: DateTimeNullableWithAggregatesFilter<"Banner"> | Date | string | null
    created_at?: DateTimeWithAggregatesFilter<"Banner"> | Date | string
    created_by?: StringWithAggregatesFilter<"Banner"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Banner"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Banner"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Banner"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Banner"> | string | null
    company_id?: StringWithAggregatesFilter<"Banner"> | string
  }

  export type SpecialOfferWhereInput = {
    AND?: SpecialOfferWhereInput | SpecialOfferWhereInput[]
    OR?: SpecialOfferWhereInput[]
    NOT?: SpecialOfferWhereInput | SpecialOfferWhereInput[]
    id?: StringFilter<"SpecialOffer"> | string
    title?: StringFilter<"SpecialOffer"> | string
    subtitle?: StringNullableFilter<"SpecialOffer"> | string | null
    discount?: DecimalFilter<"SpecialOffer"> | Decimal | DecimalJsLike | number | string
    start_date?: DateTimeFilter<"SpecialOffer"> | Date | string
    end_date?: DateTimeFilter<"SpecialOffer"> | Date | string
    is_active?: BoolFilter<"SpecialOffer"> | boolean
    image?: StringNullableFilter<"SpecialOffer"> | string | null
    created_at?: DateTimeFilter<"SpecialOffer"> | Date | string
    created_by?: StringFilter<"SpecialOffer"> | string
    created_ip?: StringNullableFilter<"SpecialOffer"> | string | null
    updated_at?: DateTimeFilter<"SpecialOffer"> | Date | string
    updated_by?: StringNullableFilter<"SpecialOffer"> | string | null
    updated_ip?: StringNullableFilter<"SpecialOffer"> | string | null
    company_id?: StringFilter<"SpecialOffer"> | string
    products?: ProductListRelationFilter
  }

  export type SpecialOfferOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrderInput | SortOrder
    discount?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    is_active?: SortOrder
    image?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    products?: ProductOrderByRelationAggregateInput
  }

  export type SpecialOfferWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: SpecialOfferWhereInput | SpecialOfferWhereInput[]
    OR?: SpecialOfferWhereInput[]
    NOT?: SpecialOfferWhereInput | SpecialOfferWhereInput[]
    title?: StringFilter<"SpecialOffer"> | string
    subtitle?: StringNullableFilter<"SpecialOffer"> | string | null
    discount?: DecimalFilter<"SpecialOffer"> | Decimal | DecimalJsLike | number | string
    start_date?: DateTimeFilter<"SpecialOffer"> | Date | string
    end_date?: DateTimeFilter<"SpecialOffer"> | Date | string
    is_active?: BoolFilter<"SpecialOffer"> | boolean
    image?: StringNullableFilter<"SpecialOffer"> | string | null
    created_at?: DateTimeFilter<"SpecialOffer"> | Date | string
    created_by?: StringFilter<"SpecialOffer"> | string
    created_ip?: StringNullableFilter<"SpecialOffer"> | string | null
    updated_at?: DateTimeFilter<"SpecialOffer"> | Date | string
    updated_by?: StringNullableFilter<"SpecialOffer"> | string | null
    updated_ip?: StringNullableFilter<"SpecialOffer"> | string | null
    company_id?: StringFilter<"SpecialOffer"> | string
    products?: ProductListRelationFilter
  }, "id">

  export type SpecialOfferOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrderInput | SortOrder
    discount?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    is_active?: SortOrder
    image?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: SpecialOfferCountOrderByAggregateInput
    _avg?: SpecialOfferAvgOrderByAggregateInput
    _max?: SpecialOfferMaxOrderByAggregateInput
    _min?: SpecialOfferMinOrderByAggregateInput
    _sum?: SpecialOfferSumOrderByAggregateInput
  }

  export type SpecialOfferScalarWhereWithAggregatesInput = {
    AND?: SpecialOfferScalarWhereWithAggregatesInput | SpecialOfferScalarWhereWithAggregatesInput[]
    OR?: SpecialOfferScalarWhereWithAggregatesInput[]
    NOT?: SpecialOfferScalarWhereWithAggregatesInput | SpecialOfferScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"SpecialOffer"> | string
    title?: StringWithAggregatesFilter<"SpecialOffer"> | string
    subtitle?: StringNullableWithAggregatesFilter<"SpecialOffer"> | string | null
    discount?: DecimalWithAggregatesFilter<"SpecialOffer"> | Decimal | DecimalJsLike | number | string
    start_date?: DateTimeWithAggregatesFilter<"SpecialOffer"> | Date | string
    end_date?: DateTimeWithAggregatesFilter<"SpecialOffer"> | Date | string
    is_active?: BoolWithAggregatesFilter<"SpecialOffer"> | boolean
    image?: StringNullableWithAggregatesFilter<"SpecialOffer"> | string | null
    created_at?: DateTimeWithAggregatesFilter<"SpecialOffer"> | Date | string
    created_by?: StringWithAggregatesFilter<"SpecialOffer"> | string
    created_ip?: StringNullableWithAggregatesFilter<"SpecialOffer"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"SpecialOffer"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"SpecialOffer"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"SpecialOffer"> | string | null
    company_id?: StringWithAggregatesFilter<"SpecialOffer"> | string
  }

  export type CouponWhereInput = {
    AND?: CouponWhereInput | CouponWhereInput[]
    OR?: CouponWhereInput[]
    NOT?: CouponWhereInput | CouponWhereInput[]
    id?: StringFilter<"Coupon"> | string
    code?: StringFilter<"Coupon"> | string
    description?: StringNullableFilter<"Coupon"> | string | null
    discount_type?: StringFilter<"Coupon"> | string
    discount_amount?: DecimalFilter<"Coupon"> | Decimal | DecimalJsLike | number | string
    minimum_purchase?: DecimalNullableFilter<"Coupon"> | Decimal | DecimalJsLike | number | string | null
    maximum_discount?: DecimalNullableFilter<"Coupon"> | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFilter<"Coupon"> | Date | string
    end_date?: DateTimeFilter<"Coupon"> | Date | string
    usage_limit?: IntNullableFilter<"Coupon"> | number | null
    used_count?: IntFilter<"Coupon"> | number
    is_active?: BoolFilter<"Coupon"> | boolean
    created_at?: DateTimeFilter<"Coupon"> | Date | string
    created_by?: StringFilter<"Coupon"> | string
    created_ip?: StringNullableFilter<"Coupon"> | string | null
    updated_at?: DateTimeFilter<"Coupon"> | Date | string
    updated_by?: StringNullableFilter<"Coupon"> | string | null
    updated_ip?: StringNullableFilter<"Coupon"> | string | null
    company_id?: StringFilter<"Coupon"> | string
    Order?: OrderListRelationFilter
    PendingOrder?: PendingOrderListRelationFilter
  }

  export type CouponOrderByWithRelationInput = {
    id?: SortOrder
    code?: SortOrder
    description?: SortOrderInput | SortOrder
    discount_type?: SortOrder
    discount_amount?: SortOrder
    minimum_purchase?: SortOrderInput | SortOrder
    maximum_discount?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    usage_limit?: SortOrderInput | SortOrder
    used_count?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    Order?: OrderOrderByRelationAggregateInput
    PendingOrder?: PendingOrderOrderByRelationAggregateInput
  }

  export type CouponWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    code?: string
    AND?: CouponWhereInput | CouponWhereInput[]
    OR?: CouponWhereInput[]
    NOT?: CouponWhereInput | CouponWhereInput[]
    description?: StringNullableFilter<"Coupon"> | string | null
    discount_type?: StringFilter<"Coupon"> | string
    discount_amount?: DecimalFilter<"Coupon"> | Decimal | DecimalJsLike | number | string
    minimum_purchase?: DecimalNullableFilter<"Coupon"> | Decimal | DecimalJsLike | number | string | null
    maximum_discount?: DecimalNullableFilter<"Coupon"> | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFilter<"Coupon"> | Date | string
    end_date?: DateTimeFilter<"Coupon"> | Date | string
    usage_limit?: IntNullableFilter<"Coupon"> | number | null
    used_count?: IntFilter<"Coupon"> | number
    is_active?: BoolFilter<"Coupon"> | boolean
    created_at?: DateTimeFilter<"Coupon"> | Date | string
    created_by?: StringFilter<"Coupon"> | string
    created_ip?: StringNullableFilter<"Coupon"> | string | null
    updated_at?: DateTimeFilter<"Coupon"> | Date | string
    updated_by?: StringNullableFilter<"Coupon"> | string | null
    updated_ip?: StringNullableFilter<"Coupon"> | string | null
    company_id?: StringFilter<"Coupon"> | string
    Order?: OrderListRelationFilter
    PendingOrder?: PendingOrderListRelationFilter
  }, "id" | "code">

  export type CouponOrderByWithAggregationInput = {
    id?: SortOrder
    code?: SortOrder
    description?: SortOrderInput | SortOrder
    discount_type?: SortOrder
    discount_amount?: SortOrder
    minimum_purchase?: SortOrderInput | SortOrder
    maximum_discount?: SortOrderInput | SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    usage_limit?: SortOrderInput | SortOrder
    used_count?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: CouponCountOrderByAggregateInput
    _avg?: CouponAvgOrderByAggregateInput
    _max?: CouponMaxOrderByAggregateInput
    _min?: CouponMinOrderByAggregateInput
    _sum?: CouponSumOrderByAggregateInput
  }

  export type CouponScalarWhereWithAggregatesInput = {
    AND?: CouponScalarWhereWithAggregatesInput | CouponScalarWhereWithAggregatesInput[]
    OR?: CouponScalarWhereWithAggregatesInput[]
    NOT?: CouponScalarWhereWithAggregatesInput | CouponScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Coupon"> | string
    code?: StringWithAggregatesFilter<"Coupon"> | string
    description?: StringNullableWithAggregatesFilter<"Coupon"> | string | null
    discount_type?: StringWithAggregatesFilter<"Coupon"> | string
    discount_amount?: DecimalWithAggregatesFilter<"Coupon"> | Decimal | DecimalJsLike | number | string
    minimum_purchase?: DecimalNullableWithAggregatesFilter<"Coupon"> | Decimal | DecimalJsLike | number | string | null
    maximum_discount?: DecimalNullableWithAggregatesFilter<"Coupon"> | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeWithAggregatesFilter<"Coupon"> | Date | string
    end_date?: DateTimeWithAggregatesFilter<"Coupon"> | Date | string
    usage_limit?: IntNullableWithAggregatesFilter<"Coupon"> | number | null
    used_count?: IntWithAggregatesFilter<"Coupon"> | number
    is_active?: BoolWithAggregatesFilter<"Coupon"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"Coupon"> | Date | string
    created_by?: StringWithAggregatesFilter<"Coupon"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Coupon"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Coupon"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Coupon"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Coupon"> | string | null
    company_id?: StringWithAggregatesFilter<"Coupon"> | string
  }

  export type ShippingChargeWhereInput = {
    AND?: ShippingChargeWhereInput | ShippingChargeWhereInput[]
    OR?: ShippingChargeWhereInput[]
    NOT?: ShippingChargeWhereInput | ShippingChargeWhereInput[]
    id?: StringFilter<"ShippingCharge"> | string
    name?: StringFilter<"ShippingCharge"> | string
    description?: StringNullableFilter<"ShippingCharge"> | string | null
    amount?: DecimalFilter<"ShippingCharge"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolFilter<"ShippingCharge"> | boolean
    is_default?: BoolFilter<"ShippingCharge"> | boolean
    min_amount?: DecimalNullableFilter<"ShippingCharge"> | Decimal | DecimalJsLike | number | string | null
    max_amount?: DecimalNullableFilter<"ShippingCharge"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFilter<"ShippingCharge"> | Date | string
    created_by?: StringFilter<"ShippingCharge"> | string
    created_ip?: StringNullableFilter<"ShippingCharge"> | string | null
    updated_at?: DateTimeFilter<"ShippingCharge"> | Date | string
    updated_by?: StringNullableFilter<"ShippingCharge"> | string | null
    updated_ip?: StringNullableFilter<"ShippingCharge"> | string | null
    company_id?: StringFilter<"ShippingCharge"> | string
  }

  export type ShippingChargeOrderByWithRelationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    amount?: SortOrder
    is_active?: SortOrder
    is_default?: SortOrder
    min_amount?: SortOrderInput | SortOrder
    max_amount?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
  }

  export type ShippingChargeWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: ShippingChargeWhereInput | ShippingChargeWhereInput[]
    OR?: ShippingChargeWhereInput[]
    NOT?: ShippingChargeWhereInput | ShippingChargeWhereInput[]
    name?: StringFilter<"ShippingCharge"> | string
    description?: StringNullableFilter<"ShippingCharge"> | string | null
    amount?: DecimalFilter<"ShippingCharge"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolFilter<"ShippingCharge"> | boolean
    is_default?: BoolFilter<"ShippingCharge"> | boolean
    min_amount?: DecimalNullableFilter<"ShippingCharge"> | Decimal | DecimalJsLike | number | string | null
    max_amount?: DecimalNullableFilter<"ShippingCharge"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFilter<"ShippingCharge"> | Date | string
    created_by?: StringFilter<"ShippingCharge"> | string
    created_ip?: StringNullableFilter<"ShippingCharge"> | string | null
    updated_at?: DateTimeFilter<"ShippingCharge"> | Date | string
    updated_by?: StringNullableFilter<"ShippingCharge"> | string | null
    updated_ip?: StringNullableFilter<"ShippingCharge"> | string | null
    company_id?: StringFilter<"ShippingCharge"> | string
  }, "id">

  export type ShippingChargeOrderByWithAggregationInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrderInput | SortOrder
    amount?: SortOrder
    is_active?: SortOrder
    is_default?: SortOrder
    min_amount?: SortOrderInput | SortOrder
    max_amount?: SortOrderInput | SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: ShippingChargeCountOrderByAggregateInput
    _avg?: ShippingChargeAvgOrderByAggregateInput
    _max?: ShippingChargeMaxOrderByAggregateInput
    _min?: ShippingChargeMinOrderByAggregateInput
    _sum?: ShippingChargeSumOrderByAggregateInput
  }

  export type ShippingChargeScalarWhereWithAggregatesInput = {
    AND?: ShippingChargeScalarWhereWithAggregatesInput | ShippingChargeScalarWhereWithAggregatesInput[]
    OR?: ShippingChargeScalarWhereWithAggregatesInput[]
    NOT?: ShippingChargeScalarWhereWithAggregatesInput | ShippingChargeScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"ShippingCharge"> | string
    name?: StringWithAggregatesFilter<"ShippingCharge"> | string
    description?: StringNullableWithAggregatesFilter<"ShippingCharge"> | string | null
    amount?: DecimalWithAggregatesFilter<"ShippingCharge"> | Decimal | DecimalJsLike | number | string
    is_active?: BoolWithAggregatesFilter<"ShippingCharge"> | boolean
    is_default?: BoolWithAggregatesFilter<"ShippingCharge"> | boolean
    min_amount?: DecimalNullableWithAggregatesFilter<"ShippingCharge"> | Decimal | DecimalJsLike | number | string | null
    max_amount?: DecimalNullableWithAggregatesFilter<"ShippingCharge"> | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeWithAggregatesFilter<"ShippingCharge"> | Date | string
    created_by?: StringWithAggregatesFilter<"ShippingCharge"> | string
    created_ip?: StringNullableWithAggregatesFilter<"ShippingCharge"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"ShippingCharge"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"ShippingCharge"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"ShippingCharge"> | string | null
    company_id?: StringWithAggregatesFilter<"ShippingCharge"> | string
  }

  export type PageWhereInput = {
    AND?: PageWhereInput | PageWhereInput[]
    OR?: PageWhereInput[]
    NOT?: PageWhereInput | PageWhereInput[]
    id?: StringFilter<"Page"> | string
    title?: StringFilter<"Page"> | string
    slug?: StringFilter<"Page"> | string
    content?: StringFilter<"Page"> | string
    meta_title?: StringNullableFilter<"Page"> | string | null
    meta_desc?: StringNullableFilter<"Page"> | string | null
    is_active?: BoolFilter<"Page"> | boolean
    created_at?: DateTimeFilter<"Page"> | Date | string
    created_by?: StringFilter<"Page"> | string
    created_ip?: StringNullableFilter<"Page"> | string | null
    updated_at?: DateTimeFilter<"Page"> | Date | string
    updated_by?: StringNullableFilter<"Page"> | string | null
    updated_ip?: StringNullableFilter<"Page"> | string | null
    company_id?: StringFilter<"Page"> | string
    sections?: PageSectionListRelationFilter
  }

  export type PageOrderByWithRelationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    content?: SortOrder
    meta_title?: SortOrderInput | SortOrder
    meta_desc?: SortOrderInput | SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    sections?: PageSectionOrderByRelationAggregateInput
  }

  export type PageWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    slug?: string
    AND?: PageWhereInput | PageWhereInput[]
    OR?: PageWhereInput[]
    NOT?: PageWhereInput | PageWhereInput[]
    title?: StringFilter<"Page"> | string
    content?: StringFilter<"Page"> | string
    meta_title?: StringNullableFilter<"Page"> | string | null
    meta_desc?: StringNullableFilter<"Page"> | string | null
    is_active?: BoolFilter<"Page"> | boolean
    created_at?: DateTimeFilter<"Page"> | Date | string
    created_by?: StringFilter<"Page"> | string
    created_ip?: StringNullableFilter<"Page"> | string | null
    updated_at?: DateTimeFilter<"Page"> | Date | string
    updated_by?: StringNullableFilter<"Page"> | string | null
    updated_ip?: StringNullableFilter<"Page"> | string | null
    company_id?: StringFilter<"Page"> | string
    sections?: PageSectionListRelationFilter
  }, "id" | "slug">

  export type PageOrderByWithAggregationInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    content?: SortOrder
    meta_title?: SortOrderInput | SortOrder
    meta_desc?: SortOrderInput | SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: PageCountOrderByAggregateInput
    _max?: PageMaxOrderByAggregateInput
    _min?: PageMinOrderByAggregateInput
  }

  export type PageScalarWhereWithAggregatesInput = {
    AND?: PageScalarWhereWithAggregatesInput | PageScalarWhereWithAggregatesInput[]
    OR?: PageScalarWhereWithAggregatesInput[]
    NOT?: PageScalarWhereWithAggregatesInput | PageScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Page"> | string
    title?: StringWithAggregatesFilter<"Page"> | string
    slug?: StringWithAggregatesFilter<"Page"> | string
    content?: StringWithAggregatesFilter<"Page"> | string
    meta_title?: StringNullableWithAggregatesFilter<"Page"> | string | null
    meta_desc?: StringNullableWithAggregatesFilter<"Page"> | string | null
    is_active?: BoolWithAggregatesFilter<"Page"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"Page"> | Date | string
    created_by?: StringWithAggregatesFilter<"Page"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Page"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Page"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Page"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Page"> | string | null
    company_id?: StringWithAggregatesFilter<"Page"> | string
  }

  export type PageSectionWhereInput = {
    AND?: PageSectionWhereInput | PageSectionWhereInput[]
    OR?: PageSectionWhereInput[]
    NOT?: PageSectionWhereInput | PageSectionWhereInput[]
    id?: StringFilter<"PageSection"> | string
    page_id?: StringFilter<"PageSection"> | string
    title?: StringFilter<"PageSection"> | string
    content?: StringFilter<"PageSection"> | string
    image?: StringNullableFilter<"PageSection"> | string | null
    sequence_no?: IntFilter<"PageSection"> | number
    is_active?: BoolFilter<"PageSection"> | boolean
    created_at?: DateTimeFilter<"PageSection"> | Date | string
    created_by?: StringFilter<"PageSection"> | string
    created_ip?: StringNullableFilter<"PageSection"> | string | null
    updated_at?: DateTimeFilter<"PageSection"> | Date | string
    updated_by?: StringNullableFilter<"PageSection"> | string | null
    updated_ip?: StringNullableFilter<"PageSection"> | string | null
    company_id?: StringFilter<"PageSection"> | string
    page?: XOR<PageRelationFilter, PageWhereInput>
  }

  export type PageSectionOrderByWithRelationInput = {
    id?: SortOrder
    page_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image?: SortOrderInput | SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    page?: PageOrderByWithRelationInput
  }

  export type PageSectionWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: PageSectionWhereInput | PageSectionWhereInput[]
    OR?: PageSectionWhereInput[]
    NOT?: PageSectionWhereInput | PageSectionWhereInput[]
    page_id?: StringFilter<"PageSection"> | string
    title?: StringFilter<"PageSection"> | string
    content?: StringFilter<"PageSection"> | string
    image?: StringNullableFilter<"PageSection"> | string | null
    sequence_no?: IntFilter<"PageSection"> | number
    is_active?: BoolFilter<"PageSection"> | boolean
    created_at?: DateTimeFilter<"PageSection"> | Date | string
    created_by?: StringFilter<"PageSection"> | string
    created_ip?: StringNullableFilter<"PageSection"> | string | null
    updated_at?: DateTimeFilter<"PageSection"> | Date | string
    updated_by?: StringNullableFilter<"PageSection"> | string | null
    updated_ip?: StringNullableFilter<"PageSection"> | string | null
    company_id?: StringFilter<"PageSection"> | string
    page?: XOR<PageRelationFilter, PageWhereInput>
  }, "id">

  export type PageSectionOrderByWithAggregationInput = {
    id?: SortOrder
    page_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image?: SortOrderInput | SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: PageSectionCountOrderByAggregateInput
    _avg?: PageSectionAvgOrderByAggregateInput
    _max?: PageSectionMaxOrderByAggregateInput
    _min?: PageSectionMinOrderByAggregateInput
    _sum?: PageSectionSumOrderByAggregateInput
  }

  export type PageSectionScalarWhereWithAggregatesInput = {
    AND?: PageSectionScalarWhereWithAggregatesInput | PageSectionScalarWhereWithAggregatesInput[]
    OR?: PageSectionScalarWhereWithAggregatesInput[]
    NOT?: PageSectionScalarWhereWithAggregatesInput | PageSectionScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"PageSection"> | string
    page_id?: StringWithAggregatesFilter<"PageSection"> | string
    title?: StringWithAggregatesFilter<"PageSection"> | string
    content?: StringWithAggregatesFilter<"PageSection"> | string
    image?: StringNullableWithAggregatesFilter<"PageSection"> | string | null
    sequence_no?: IntWithAggregatesFilter<"PageSection"> | number
    is_active?: BoolWithAggregatesFilter<"PageSection"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"PageSection"> | Date | string
    created_by?: StringWithAggregatesFilter<"PageSection"> | string
    created_ip?: StringNullableWithAggregatesFilter<"PageSection"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"PageSection"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"PageSection"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"PageSection"> | string | null
    company_id?: StringWithAggregatesFilter<"PageSection"> | string
  }

  export type FaqWhereInput = {
    AND?: FaqWhereInput | FaqWhereInput[]
    OR?: FaqWhereInput[]
    NOT?: FaqWhereInput | FaqWhereInput[]
    id?: StringFilter<"Faq"> | string
    question?: StringFilter<"Faq"> | string
    answer?: StringFilter<"Faq"> | string
    category?: StringNullableFilter<"Faq"> | string | null
    sequence_no?: IntFilter<"Faq"> | number
    is_active?: BoolFilter<"Faq"> | boolean
    created_at?: DateTimeFilter<"Faq"> | Date | string
    created_by?: StringFilter<"Faq"> | string
    created_ip?: StringNullableFilter<"Faq"> | string | null
    updated_at?: DateTimeFilter<"Faq"> | Date | string
    updated_by?: StringNullableFilter<"Faq"> | string | null
    updated_ip?: StringNullableFilter<"Faq"> | string | null
    company_id?: StringFilter<"Faq"> | string
  }

  export type FaqOrderByWithRelationInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    category?: SortOrderInput | SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
  }

  export type FaqWhereUniqueInput = Prisma.AtLeast<{
    id?: string
    AND?: FaqWhereInput | FaqWhereInput[]
    OR?: FaqWhereInput[]
    NOT?: FaqWhereInput | FaqWhereInput[]
    question?: StringFilter<"Faq"> | string
    answer?: StringFilter<"Faq"> | string
    category?: StringNullableFilter<"Faq"> | string | null
    sequence_no?: IntFilter<"Faq"> | number
    is_active?: BoolFilter<"Faq"> | boolean
    created_at?: DateTimeFilter<"Faq"> | Date | string
    created_by?: StringFilter<"Faq"> | string
    created_ip?: StringNullableFilter<"Faq"> | string | null
    updated_at?: DateTimeFilter<"Faq"> | Date | string
    updated_by?: StringNullableFilter<"Faq"> | string | null
    updated_ip?: StringNullableFilter<"Faq"> | string | null
    company_id?: StringFilter<"Faq"> | string
  }, "id">

  export type FaqOrderByWithAggregationInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    category?: SortOrderInput | SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrderInput | SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrderInput | SortOrder
    updated_ip?: SortOrderInput | SortOrder
    company_id?: SortOrder
    _count?: FaqCountOrderByAggregateInput
    _avg?: FaqAvgOrderByAggregateInput
    _max?: FaqMaxOrderByAggregateInput
    _min?: FaqMinOrderByAggregateInput
    _sum?: FaqSumOrderByAggregateInput
  }

  export type FaqScalarWhereWithAggregatesInput = {
    AND?: FaqScalarWhereWithAggregatesInput | FaqScalarWhereWithAggregatesInput[]
    OR?: FaqScalarWhereWithAggregatesInput[]
    NOT?: FaqScalarWhereWithAggregatesInput | FaqScalarWhereWithAggregatesInput[]
    id?: StringWithAggregatesFilter<"Faq"> | string
    question?: StringWithAggregatesFilter<"Faq"> | string
    answer?: StringWithAggregatesFilter<"Faq"> | string
    category?: StringNullableWithAggregatesFilter<"Faq"> | string | null
    sequence_no?: IntWithAggregatesFilter<"Faq"> | number
    is_active?: BoolWithAggregatesFilter<"Faq"> | boolean
    created_at?: DateTimeWithAggregatesFilter<"Faq"> | Date | string
    created_by?: StringWithAggregatesFilter<"Faq"> | string
    created_ip?: StringNullableWithAggregatesFilter<"Faq"> | string | null
    updated_at?: DateTimeWithAggregatesFilter<"Faq"> | Date | string
    updated_by?: StringNullableWithAggregatesFilter<"Faq"> | string | null
    updated_ip?: StringNullableWithAggregatesFilter<"Faq"> | string | null
    company_id?: StringWithAggregatesFilter<"Faq"> | string
  }

  export type ApplicationLogCreateInput = {
    id?: string
    level: string
    message: string
    meta: JsonNullValueInput | InputJsonValue
    timestamp: Date | string
  }

  export type ApplicationLogUncheckedCreateInput = {
    id?: string
    level: string
    message: string
    meta: JsonNullValueInput | InputJsonValue
    timestamp: Date | string
  }

  export type ApplicationLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationLogCreateManyInput = {
    id?: string
    level: string
    message: string
    meta: JsonNullValueInput | InputJsonValue
    timestamp: Date | string
  }

  export type ApplicationLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type ApplicationLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    level?: StringFieldUpdateOperationsInput | string
    message?: StringFieldUpdateOperationsInput | string
    meta?: JsonNullValueInput | InputJsonValue
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogCreateInput = {
    id?: string
    table_name: string
    record_id: string
    action: string
    previous_data: JsonNullValueInput | InputJsonValue
    new_data: JsonNullValueInput | InputJsonValue
    changed_by: string
    timestamp: Date | string
  }

  export type AuditLogUncheckedCreateInput = {
    id?: string
    table_name: string
    record_id: string
    action: string
    previous_data: JsonNullValueInput | InputJsonValue
    new_data: JsonNullValueInput | InputJsonValue
    changed_by: string
    timestamp: Date | string
  }

  export type AuditLogUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    record_id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    previous_data?: JsonNullValueInput | InputJsonValue
    new_data?: JsonNullValueInput | InputJsonValue
    changed_by?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    record_id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    previous_data?: JsonNullValueInput | InputJsonValue
    new_data?: JsonNullValueInput | InputJsonValue
    changed_by?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogCreateManyInput = {
    id?: string
    table_name: string
    record_id: string
    action: string
    previous_data: JsonNullValueInput | InputJsonValue
    new_data: JsonNullValueInput | InputJsonValue
    changed_by: string
    timestamp: Date | string
  }

  export type AuditLogUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    record_id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    previous_data?: JsonNullValueInput | InputJsonValue
    new_data?: JsonNullValueInput | InputJsonValue
    changed_by?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type AuditLogUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    table_name?: StringFieldUpdateOperationsInput | string
    record_id?: StringFieldUpdateOperationsInput | string
    action?: StringFieldUpdateOperationsInput | string
    previous_data?: JsonNullValueInput | InputJsonValue
    new_data?: JsonNullValueInput | InputJsonValue
    changed_by?: StringFieldUpdateOperationsInput | string
    timestamp?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type CompanyCreateInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    is_seller?: boolean
    is_verified?: boolean
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    seller?: SellerCreateNestedOneWithoutCompaniesInput
    CompanyAdditionalInfo?: CompanyAdditionalInfoCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    is_seller?: boolean
    is_verified?: boolean
    seller_id?: string | null
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    CompanyAdditionalInfo?: CompanyAdditionalInfoUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    is_seller?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    seller?: SellerUpdateOneWithoutCompaniesNestedInput
    CompanyAdditionalInfo?: CompanyAdditionalInfoUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    is_seller?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    seller_id?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyAdditionalInfo?: CompanyAdditionalInfoUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyCreateManyInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    is_seller?: boolean
    is_verified?: boolean
    seller_id?: string | null
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CompanyUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    is_seller?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    is_seller?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    seller_id?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyAdditionalInfoCreateInput = {
    id?: string
    short_description?: string | null
    facebook_link?: string | null
    twitter_link?: string | null
    instagram_link?: string | null
    linkedin_link?: string | null
    youtube_link?: string | null
    whatsapp_number?: string | null
    google_map_link?: string | null
    vision?: string | null
    mission?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company: CompanyCreateNestedOneWithoutCompanyAdditionalInfoInput
  }

  export type CompanyAdditionalInfoUncheckedCreateInput = {
    id?: string
    company_id: string
    short_description?: string | null
    facebook_link?: string | null
    twitter_link?: string | null
    instagram_link?: string | null
    linkedin_link?: string | null
    youtube_link?: string | null
    whatsapp_number?: string | null
    google_map_link?: string | null
    vision?: string | null
    mission?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CompanyAdditionalInfoUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company?: CompanyUpdateOneRequiredWithoutCompanyAdditionalInfoNestedInput
  }

  export type CompanyAdditionalInfoUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyAdditionalInfoCreateManyInput = {
    id?: string
    company_id: string
    short_description?: string | null
    facebook_link?: string | null
    twitter_link?: string | null
    instagram_link?: string | null
    linkedin_link?: string | null
    youtube_link?: string | null
    whatsapp_number?: string | null
    google_map_link?: string | null
    vision?: string | null
    mission?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CompanyAdditionalInfoUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyAdditionalInfoUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserCreateInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupCreateNestedManyWithoutUserInput
    UserSettings?: UserSettingsCreateNestedManyWithoutUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupUncheckedCreateNestedManyWithoutUserInput
    UserSettings?: UserSettingsUncheckedCreateNestedManyWithoutUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUpdateManyWithoutUserNestedInput
    UserSettings?: UserSettingsUpdateManyWithoutUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUncheckedUpdateManyWithoutUserNestedInput
    UserSettings?: UserSettingsUncheckedUpdateManyWithoutUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type UserCreateManyInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type RefreshTokenCreateInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
    user: UserCreateNestedOneWithoutRefreshTokenInput
  }

  export type RefreshTokenUncheckedCreateInput = {
    id?: string
    token: string
    userId: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type RefreshTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
    user?: UserUpdateOneRequiredWithoutRefreshTokenNestedInput
  }

  export type RefreshTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RefreshTokenCreateManyInput = {
    id?: string
    token: string
    userId: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type RefreshTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RefreshTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SecurityRuleCreateInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionCreateNestedManyWithoutSecurity_ruleInput
    SecurityGroupRules?: SecurityGroupRuleCreateNestedManyWithoutSecurity_ruleInput
  }

  export type SecurityRuleUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionUncheckedCreateNestedManyWithoutSecurity_ruleInput
    SecurityGroupRules?: SecurityGroupRuleUncheckedCreateNestedManyWithoutSecurity_ruleInput
  }

  export type SecurityRuleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionUpdateManyWithoutSecurity_ruleNestedInput
    SecurityGroupRules?: SecurityGroupRuleUpdateManyWithoutSecurity_ruleNestedInput
  }

  export type SecurityRuleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionUncheckedUpdateManyWithoutSecurity_ruleNestedInput
    SecurityGroupRules?: SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_ruleNestedInput
  }

  export type SecurityRuleCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityRuleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityRuleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityRuleWiseMenuPermissionCreateInput = {
    id?: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    security_rule: SecurityRuleCreateNestedOneWithoutSecurityRuleWiseMenuPermissionsInput
  }

  export type SecurityRuleWiseMenuPermissionUncheckedCreateInput = {
    id?: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    rule_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityRuleWiseMenuPermissionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    security_rule?: SecurityRuleUpdateOneRequiredWithoutSecurityRuleWiseMenuPermissionsNestedInput
  }

  export type SecurityRuleWiseMenuPermissionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    rule_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityRuleWiseMenuPermissionCreateManyInput = {
    id?: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    rule_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityRuleWiseMenuPermissionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityRuleWiseMenuPermissionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    rule_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupCreateInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityGroupRules?: SecurityGroupRuleCreateNestedManyWithoutSecurity_groupInput
    UserGroups?: UserGroupCreateNestedManyWithoutSecurity_groupInput
  }

  export type SecurityGroupUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityGroupRules?: SecurityGroupRuleUncheckedCreateNestedManyWithoutSecurity_groupInput
    UserGroups?: UserGroupUncheckedCreateNestedManyWithoutSecurity_groupInput
  }

  export type SecurityGroupUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityGroupRules?: SecurityGroupRuleUpdateManyWithoutSecurity_groupNestedInput
    UserGroups?: UserGroupUpdateManyWithoutSecurity_groupNestedInput
  }

  export type SecurityGroupUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityGroupRules?: SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_groupNestedInput
    UserGroups?: UserGroupUncheckedUpdateManyWithoutSecurity_groupNestedInput
  }

  export type SecurityGroupCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleCreateInput = {
    id?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    security_group: SecurityGroupCreateNestedOneWithoutSecurityGroupRulesInput
    security_rule: SecurityRuleCreateNestedOneWithoutSecurityGroupRulesInput
  }

  export type SecurityGroupRuleUncheckedCreateInput = {
    id?: string
    group_id: string
    rule_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupRuleUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    security_group?: SecurityGroupUpdateOneRequiredWithoutSecurityGroupRulesNestedInput
    security_rule?: SecurityRuleUpdateOneRequiredWithoutSecurityGroupRulesNestedInput
  }

  export type SecurityGroupRuleUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    rule_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleCreateManyInput = {
    id?: string
    group_id: string
    rule_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupRuleUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    rule_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserGroupCreateInput = {
    id?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    user: UserCreateNestedOneWithoutUserGroupsInput
    security_group: SecurityGroupCreateNestedOneWithoutUserGroupsInput
  }

  export type UserGroupUncheckedCreateInput = {
    id?: string
    user_id: string
    group_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserGroupUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutUserGroupsNestedInput
    security_group?: SecurityGroupUpdateOneRequiredWithoutUserGroupsNestedInput
  }

  export type UserGroupUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserGroupCreateManyInput = {
    id?: string
    user_id: string
    group_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserGroupUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserGroupUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type MenuCreateInput = {
    id?: number
    title: string
    url?: string | null
    icon?: string | null
    icon_library?: string | null
    parent_id: number
    sequence_no: Decimal | DecimalJsLike | number | string
    is_active: boolean
    can_view?: boolean | null
    can_create?: boolean | null
    can_update?: boolean | null
    can_delete?: boolean | null
    can_report?: boolean | null
  }

  export type MenuUncheckedCreateInput = {
    id?: number
    title: string
    url?: string | null
    icon?: string | null
    icon_library?: string | null
    parent_id: number
    sequence_no: Decimal | DecimalJsLike | number | string
    is_active: boolean
    can_view?: boolean | null
    can_create?: boolean | null
    can_update?: boolean | null
    can_delete?: boolean | null
    can_report?: boolean | null
  }

  export type MenuUpdateInput = {
    title?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    icon_library?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: IntFieldUpdateOperationsInput | number
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    can_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_create?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_delete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type MenuUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    icon_library?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: IntFieldUpdateOperationsInput | number
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    can_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_create?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_delete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type MenuCreateManyInput = {
    id?: number
    title: string
    url?: string | null
    icon?: string | null
    icon_library?: string | null
    parent_id: number
    sequence_no: Decimal | DecimalJsLike | number | string
    is_active: boolean
    can_view?: boolean | null
    can_create?: boolean | null
    can_update?: boolean | null
    can_delete?: boolean | null
    can_report?: boolean | null
  }

  export type MenuUpdateManyMutationInput = {
    title?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    icon_library?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: IntFieldUpdateOperationsInput | number
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    can_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_create?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_delete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type MenuUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    title?: StringFieldUpdateOperationsInput | string
    url?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    icon_library?: NullableStringFieldUpdateOperationsInput | string | null
    parent_id?: IntFieldUpdateOperationsInput | number
    sequence_no?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    can_view?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_create?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_update?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_delete?: NullableBoolFieldUpdateOperationsInput | boolean | null
    can_report?: NullableBoolFieldUpdateOperationsInput | boolean | null
  }

  export type ProductCreateInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProductsInput
    subcategory: SubcategoryCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    seller: SellerCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    Wishlist?: WishlistCreateNestedManyWithoutProductInput
    SpecialOffer?: SpecialOfferCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    brandId: string
    sellerId: string
    specialOfferId?: string | null
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProductsNestedInput
    subcategory?: SubcategoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    seller?: SellerUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUpdateManyWithoutProductNestedInput
    SpecialOffer?: SpecialOfferUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateManyInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    brandId: string
    sellerId: string
    specialOfferId?: string | null
  }

  export type ProductUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProductUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CategoryCreateInput = {
    id?: string
    name: string
    slug: string
    image?: string | null
    icon?: string | null
    featured?: boolean
    productCount?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    subcategories?: SubcategoryCreateNestedManyWithoutCategoryInput
    products?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    image?: string | null
    icon?: string | null
    featured?: boolean
    productCount?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    subcategories?: SubcategoryUncheckedCreateNestedManyWithoutCategoryInput
    products?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    featured?: BoolFieldUpdateOperationsInput | boolean
    productCount?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    subcategories?: SubcategoryUpdateManyWithoutCategoryNestedInput
    products?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    featured?: BoolFieldUpdateOperationsInput | boolean
    productCount?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    subcategories?: SubcategoryUncheckedUpdateManyWithoutCategoryNestedInput
    products?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryCreateManyInput = {
    id?: string
    name: string
    slug: string
    image?: string | null
    icon?: string | null
    featured?: boolean
    productCount?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type CategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    featured?: BoolFieldUpdateOperationsInput | boolean
    productCount?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    featured?: BoolFieldUpdateOperationsInput | boolean
    productCount?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SubcategoryCreateInput = {
    id?: string
    name: string
    slug: string
    productCount?: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutSubcategoriesInput
    products?: ProductCreateNestedManyWithoutSubcategoryInput
  }

  export type SubcategoryUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    productCount?: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    products?: ProductUncheckedCreateNestedManyWithoutSubcategoryInput
  }

  export type SubcategoryUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    productCount?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutSubcategoriesNestedInput
    products?: ProductUpdateManyWithoutSubcategoryNestedInput
  }

  export type SubcategoryUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    productCount?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    products?: ProductUncheckedUpdateManyWithoutSubcategoryNestedInput
  }

  export type SubcategoryCreateManyInput = {
    id?: string
    name: string
    slug: string
    productCount?: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
  }

  export type SubcategoryUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    productCount?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SubcategoryUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    productCount?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
  }

  export type BrandCreateInput = {
    id?: string
    name: string
    slug: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    products?: ProductCreateNestedManyWithoutBrandInput
  }

  export type BrandUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    products?: ProductUncheckedCreateNestedManyWithoutBrandInput
  }

  export type BrandUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    products?: ProductUpdateManyWithoutBrandNestedInput
  }

  export type BrandUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    products?: ProductUncheckedUpdateManyWithoutBrandNestedInput
  }

  export type BrandCreateManyInput = {
    id?: string
    name: string
    slug: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type BrandUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type BrandUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProductAttributeCreateInput = {
    id?: string
    name: string
    type: string
    value: string
    unit?: string | null
    displayValue?: string | null
    options?: NullableJsonNullValueInput | InputJsonValue
    product: ProductCreateNestedOneWithoutAttributesInput
  }

  export type ProductAttributeUncheckedCreateInput = {
    id?: string
    name: string
    type: string
    value: string
    unit?: string | null
    displayValue?: string | null
    options?: NullableJsonNullValueInput | InputJsonValue
    productId: string
  }

  export type ProductAttributeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    displayValue?: NullableStringFieldUpdateOperationsInput | string | null
    options?: NullableJsonNullValueInput | InputJsonValue
    product?: ProductUpdateOneRequiredWithoutAttributesNestedInput
  }

  export type ProductAttributeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    displayValue?: NullableStringFieldUpdateOperationsInput | string | null
    options?: NullableJsonNullValueInput | InputJsonValue
    productId?: StringFieldUpdateOperationsInput | string
  }

  export type ProductAttributeCreateManyInput = {
    id?: string
    name: string
    type: string
    value: string
    unit?: string | null
    displayValue?: string | null
    options?: NullableJsonNullValueInput | InputJsonValue
    productId: string
  }

  export type ProductAttributeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    displayValue?: NullableStringFieldUpdateOperationsInput | string | null
    options?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductAttributeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    displayValue?: NullableStringFieldUpdateOperationsInput | string | null
    options?: NullableJsonNullValueInput | InputJsonValue
    productId?: StringFieldUpdateOperationsInput | string
  }

  export type ProductVariantCreateInput = {
    id?: string
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    images: JsonNullValueInput | InputJsonValue
    sequence_no?: number
    product: ProductCreateNestedOneWithoutVariantsInput
  }

  export type ProductVariantUncheckedCreateInput = {
    id?: string
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    images: JsonNullValueInput | InputJsonValue
    sequence_no?: number
    productId: string
  }

  export type ProductVariantUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    images?: JsonNullValueInput | InputJsonValue
    sequence_no?: IntFieldUpdateOperationsInput | number
    product?: ProductUpdateOneRequiredWithoutVariantsNestedInput
  }

  export type ProductVariantUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    images?: JsonNullValueInput | InputJsonValue
    sequence_no?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
  }

  export type ProductVariantCreateManyInput = {
    id?: string
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    images: JsonNullValueInput | InputJsonValue
    sequence_no?: number
    productId: string
  }

  export type ProductVariantUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    images?: JsonNullValueInput | InputJsonValue
    sequence_no?: IntFieldUpdateOperationsInput | number
  }

  export type ProductVariantUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    images?: JsonNullValueInput | InputJsonValue
    sequence_no?: IntFieldUpdateOperationsInput | number
    productId?: StringFieldUpdateOperationsInput | string
  }

  export type SellerCreateInput = {
    id?: string
    name: string
    slug: string
    email: string
    phone?: string | null
    logo?: string | null
    rating: number
    reviewCount: number
    verified?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    products?: ProductCreateNestedManyWithoutSellerInput
    companies?: CompanyCreateNestedManyWithoutSellerInput
  }

  export type SellerUncheckedCreateInput = {
    id?: string
    name: string
    slug: string
    email: string
    phone?: string | null
    logo?: string | null
    rating: number
    reviewCount: number
    verified?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
    companies?: CompanyUncheckedCreateNestedManyWithoutSellerInput
  }

  export type SellerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    verified?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    products?: ProductUpdateManyWithoutSellerNestedInput
    companies?: CompanyUpdateManyWithoutSellerNestedInput
  }

  export type SellerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    verified?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
    companies?: CompanyUncheckedUpdateManyWithoutSellerNestedInput
  }

  export type SellerCreateManyInput = {
    id?: string
    name: string
    slug: string
    email: string
    phone?: string | null
    logo?: string | null
    rating: number
    reviewCount: number
    verified?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SellerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    verified?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SellerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    verified?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ReviewCreateInput = {
    id?: string
    userId: string
    userName: string
    userAvatar?: string | null
    rating: number
    title?: string | null
    comment: string
    helpful?: number
    createdAt?: Date | string
    variantId?: string | null
    product: ProductCreateNestedOneWithoutReviewsInput
  }

  export type ReviewUncheckedCreateInput = {
    id?: string
    userId: string
    userName: string
    userAvatar?: string | null
    rating: number
    title?: string | null
    comment: string
    helpful?: number
    createdAt?: Date | string
    variantId?: string | null
    productId: string
  }

  export type ReviewUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: StringFieldUpdateOperationsInput | string
    helpful?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    product?: ProductUpdateOneRequiredWithoutReviewsNestedInput
  }

  export type ReviewUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: StringFieldUpdateOperationsInput | string
    helpful?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
  }

  export type ReviewCreateManyInput = {
    id?: string
    userId: string
    userName: string
    userAvatar?: string | null
    rating: number
    title?: string | null
    comment: string
    helpful?: number
    createdAt?: Date | string
    variantId?: string | null
    productId: string
  }

  export type ReviewUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: StringFieldUpdateOperationsInput | string
    helpful?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReviewUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: StringFieldUpdateOperationsInput | string
    helpful?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    productId?: StringFieldUpdateOperationsInput | string
  }

  export type CustomerCreateInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    orders?: OrderCreateNestedManyWithoutCustomerInput
    refresh_tokens?: CustomerRefreshTokenCreateNestedManyWithoutCustomerInput
    addresses?: CustomerAddressCreateNestedManyWithoutCustomerInput
    Wishlist?: WishlistCreateNestedManyWithoutUserInput
    PendingOrder?: PendingOrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    refresh_tokens?: CustomerRefreshTokenUncheckedCreateNestedManyWithoutCustomerInput
    addresses?: CustomerAddressUncheckedCreateNestedManyWithoutCustomerInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutUserInput
    PendingOrder?: PendingOrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutCustomerNestedInput
    refresh_tokens?: CustomerRefreshTokenUpdateManyWithoutCustomerNestedInput
    addresses?: CustomerAddressUpdateManyWithoutCustomerNestedInput
    Wishlist?: WishlistUpdateManyWithoutUserNestedInput
    PendingOrder?: PendingOrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    refresh_tokens?: CustomerRefreshTokenUncheckedUpdateManyWithoutCustomerNestedInput
    addresses?: CustomerAddressUncheckedUpdateManyWithoutCustomerNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutUserNestedInput
    PendingOrder?: PendingOrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerCreateManyInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CustomerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CustomerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CustomerRefreshTokenCreateInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
    customer: CustomerCreateNestedOneWithoutRefresh_tokensInput
  }

  export type CustomerRefreshTokenUncheckedCreateInput = {
    id?: string
    token: string
    customerId: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type CustomerRefreshTokenUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
    customer?: CustomerUpdateOneRequiredWithoutRefresh_tokensNestedInput
  }

  export type CustomerRefreshTokenUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CustomerRefreshTokenCreateManyInput = {
    id?: string
    token: string
    customerId: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type CustomerRefreshTokenUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CustomerRefreshTokenUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    customerId?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type OrderCreateInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    PaymentTransaction?: PaymentTransactionCreateNestedManyWithoutOrderInput
    coupon?: CouponCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    customerId?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    coupon_id?: string | null
    discount_amount?: Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    PaymentTransaction?: PaymentTransactionUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    PaymentTransaction?: PaymentTransactionUpdateManyWithoutOrderNestedInput
    coupon?: CouponUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    coupon_id?: NullableStringFieldUpdateOperationsInput | string | null
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    PaymentTransaction?: PaymentTransactionUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderCreateManyInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    customerId?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    coupon_id?: string | null
    discount_amount?: Decimal | DecimalJsLike | number | string | null
  }

  export type OrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type OrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    coupon_id?: NullableStringFieldUpdateOperationsInput | string | null
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type OrderItemCreateInput = {
    id?: string
    productId: string
    variantId?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    order: OrderCreateNestedOneWithoutOrderItemsInput
  }

  export type OrderItemUncheckedCreateInput = {
    id?: string
    orderId: string
    productId: string
    variantId?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type OrderItemUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    order?: OrderUpdateOneRequiredWithoutOrderItemsNestedInput
  }

  export type OrderItemUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type OrderItemCreateManyInput = {
    id?: string
    orderId: string
    productId: string
    variantId?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type OrderItemUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type OrderItemUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type StockMovementCreateInput = {
    id?: string
    productId: string
    variantId?: string | null
    quantity: Decimal | DecimalJsLike | number | string
    type: $Enums.MovementType
    reference: string
    notes?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type StockMovementUncheckedCreateInput = {
    id?: string
    productId: string
    variantId?: string | null
    quantity: Decimal | DecimalJsLike | number | string
    type: $Enums.MovementType
    reference: string
    notes?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type StockMovementUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    reference?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type StockMovementUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    reference?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type StockMovementCreateManyInput = {
    id?: string
    productId: string
    variantId?: string | null
    quantity: Decimal | DecimalJsLike | number | string
    type: $Enums.MovementType
    reference: string
    notes?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type StockMovementUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    reference?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type StockMovementUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    type?: EnumMovementTypeFieldUpdateOperationsInput | $Enums.MovementType
    reference?: StringFieldUpdateOperationsInput | string
    notes?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserSettingsCreateInput = {
    id?: string
    settings: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    user: UserCreateNestedOneWithoutUserSettingsInput
  }

  export type UserSettingsUncheckedCreateInput = {
    id?: string
    user_id: string
    settings: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserSettingsUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutUserSettingsNestedInput
  }

  export type UserSettingsUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserSettingsCreateManyInput = {
    id?: string
    user_id: string
    settings: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserSettingsUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserSettingsUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CustomerAddressCreateInput = {
    id?: string
    label: string
    firstName: string
    lastName: string
    phone: string
    email?: string | null
    address: string
    apartment?: string | null
    city: string
    state: string
    country: string
    postalCode: string
    isDefault?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    customer?: CustomerCreateNestedOneWithoutAddressesInput
  }

  export type CustomerAddressUncheckedCreateInput = {
    id?: string
    customerId?: string | null
    label: string
    firstName: string
    lastName: string
    phone: string
    email?: string | null
    address: string
    apartment?: string | null
    city: string
    state: string
    country: string
    postalCode: string
    isDefault?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CustomerAddressUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    apartment?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    customer?: CustomerUpdateOneWithoutAddressesNestedInput
  }

  export type CustomerAddressUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    label?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    apartment?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CustomerAddressCreateManyInput = {
    id?: string
    customerId?: string | null
    label: string
    firstName: string
    lastName: string
    phone: string
    email?: string | null
    address: string
    apartment?: string | null
    city: string
    state: string
    country: string
    postalCode: string
    isDefault?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CustomerAddressUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    apartment?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CustomerAddressUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    label?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    apartment?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PendingOrderCreateInput = {
    id?: string
    transactionId: string
    addressId: string
    items: JsonNullValueInput | InputJsonValue
    couponCode?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    discount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    status: string
    paymentMethod?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    shippingChargeId?: string | null
    customer?: CustomerCreateNestedOneWithoutPendingOrderInput
    coupon?: CouponCreateNestedOneWithoutPendingOrderInput
  }

  export type PendingOrderUncheckedCreateInput = {
    id?: string
    transactionId: string
    customerId?: string | null
    addressId: string
    items: JsonNullValueInput | InputJsonValue
    couponId?: string | null
    couponCode?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    discount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    status: string
    paymentMethod?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    shippingChargeId?: string | null
  }

  export type PendingOrderUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    items?: JsonNullValueInput | InputJsonValue
    couponCode?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    shippingChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    customer?: CustomerUpdateOneWithoutPendingOrderNestedInput
    coupon?: CouponUpdateOneWithoutPendingOrderNestedInput
  }

  export type PendingOrderUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    items?: JsonNullValueInput | InputJsonValue
    couponId?: NullableStringFieldUpdateOperationsInput | string | null
    couponCode?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    shippingChargeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PendingOrderCreateManyInput = {
    id?: string
    transactionId: string
    customerId?: string | null
    addressId: string
    items: JsonNullValueInput | InputJsonValue
    couponId?: string | null
    couponCode?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    discount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    status: string
    paymentMethod?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    shippingChargeId?: string | null
  }

  export type PendingOrderUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    items?: JsonNullValueInput | InputJsonValue
    couponCode?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    shippingChargeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PendingOrderUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    items?: JsonNullValueInput | InputJsonValue
    couponId?: NullableStringFieldUpdateOperationsInput | string | null
    couponCode?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    shippingChargeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentTransactionCreateInput = {
    id?: string
    transactionId: string
    gateway: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    order?: OrderCreateNestedOneWithoutPaymentTransactionInput
  }

  export type PaymentTransactionUncheckedCreateInput = {
    id?: string
    orderId?: string | null
    transactionId: string
    gateway: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type PaymentTransactionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    order?: OrderUpdateOneWithoutPaymentTransactionNestedInput
  }

  export type PaymentTransactionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    transactionId?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentTransactionCreateManyInput = {
    id?: string
    orderId?: string | null
    transactionId: string
    gateway: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type PaymentTransactionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentTransactionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderId?: NullableStringFieldUpdateOperationsInput | string | null
    transactionId?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WishlistCreateInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    user: CustomerCreateNestedOneWithoutWishlistInput
    product: ProductCreateNestedOneWithoutWishlistInput
  }

  export type WishlistUncheckedCreateInput = {
    id?: string
    userId: string
    productId: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type WishlistUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: CustomerUpdateOneRequiredWithoutWishlistNestedInput
    product?: ProductUpdateOneRequiredWithoutWishlistNestedInput
  }

  export type WishlistUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WishlistCreateManyInput = {
    id?: string
    userId: string
    productId: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type WishlistUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WishlistUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type BannerCreateInput = {
    id?: string
    title?: string | null
    subtitle?: string | null
    image: string
    link?: string | null
    type: string
    sequence_no?: number
    is_active?: boolean
    start_date?: Date | string | null
    end_date?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type BannerUncheckedCreateInput = {
    id?: string
    title?: string | null
    subtitle?: string | null
    image: string
    link?: string | null
    type: string
    sequence_no?: number
    is_active?: boolean
    start_date?: Date | string | null
    end_date?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type BannerUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type BannerUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type BannerCreateManyInput = {
    id?: string
    title?: string | null
    subtitle?: string | null
    image: string
    link?: string | null
    type: string
    sequence_no?: number
    is_active?: boolean
    start_date?: Date | string | null
    end_date?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type BannerUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type BannerUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: NullableStringFieldUpdateOperationsInput | string | null
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    image?: StringFieldUpdateOperationsInput | string
    link?: NullableStringFieldUpdateOperationsInput | string | null
    type?: StringFieldUpdateOperationsInput | string
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    start_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    end_date?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SpecialOfferCreateInput = {
    id?: string
    title: string
    subtitle?: string | null
    discount: Decimal | DecimalJsLike | number | string
    start_date: Date | string
    end_date: Date | string
    is_active?: boolean
    image?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    products?: ProductCreateNestedManyWithoutSpecialOfferInput
  }

  export type SpecialOfferUncheckedCreateInput = {
    id?: string
    title: string
    subtitle?: string | null
    discount: Decimal | DecimalJsLike | number | string
    start_date: Date | string
    end_date: Date | string
    is_active?: boolean
    image?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    products?: ProductUncheckedCreateNestedManyWithoutSpecialOfferInput
  }

  export type SpecialOfferUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    products?: ProductUpdateManyWithoutSpecialOfferNestedInput
  }

  export type SpecialOfferUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    products?: ProductUncheckedUpdateManyWithoutSpecialOfferNestedInput
  }

  export type SpecialOfferCreateManyInput = {
    id?: string
    title: string
    subtitle?: string | null
    discount: Decimal | DecimalJsLike | number | string
    start_date: Date | string
    end_date: Date | string
    is_active?: boolean
    image?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SpecialOfferUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SpecialOfferUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CouponCreateInput = {
    id?: string
    code: string
    description?: string | null
    discount_type?: string
    discount_amount: Decimal | DecimalJsLike | number | string
    minimum_purchase?: Decimal | DecimalJsLike | number | string | null
    maximum_discount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date: Date | string
    usage_limit?: number | null
    used_count?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    Order?: OrderCreateNestedManyWithoutCouponInput
    PendingOrder?: PendingOrderCreateNestedManyWithoutCouponInput
  }

  export type CouponUncheckedCreateInput = {
    id?: string
    code: string
    description?: string | null
    discount_type?: string
    discount_amount: Decimal | DecimalJsLike | number | string
    minimum_purchase?: Decimal | DecimalJsLike | number | string | null
    maximum_discount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date: Date | string
    usage_limit?: number | null
    used_count?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    Order?: OrderUncheckedCreateNestedManyWithoutCouponInput
    PendingOrder?: PendingOrderUncheckedCreateNestedManyWithoutCouponInput
  }

  export type CouponUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    discount_type?: StringFieldUpdateOperationsInput | string
    discount_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimum_purchase?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maximum_discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    used_count?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    Order?: OrderUpdateManyWithoutCouponNestedInput
    PendingOrder?: PendingOrderUpdateManyWithoutCouponNestedInput
  }

  export type CouponUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    discount_type?: StringFieldUpdateOperationsInput | string
    discount_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimum_purchase?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maximum_discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    used_count?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    Order?: OrderUncheckedUpdateManyWithoutCouponNestedInput
    PendingOrder?: PendingOrderUncheckedUpdateManyWithoutCouponNestedInput
  }

  export type CouponCreateManyInput = {
    id?: string
    code: string
    description?: string | null
    discount_type?: string
    discount_amount: Decimal | DecimalJsLike | number | string
    minimum_purchase?: Decimal | DecimalJsLike | number | string | null
    maximum_discount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date: Date | string
    usage_limit?: number | null
    used_count?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type CouponUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    discount_type?: StringFieldUpdateOperationsInput | string
    discount_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimum_purchase?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maximum_discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    used_count?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CouponUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    discount_type?: StringFieldUpdateOperationsInput | string
    discount_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimum_purchase?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maximum_discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    used_count?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ShippingChargeCreateInput = {
    id?: string
    name: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    is_active?: boolean
    is_default?: boolean
    min_amount?: Decimal | DecimalJsLike | number | string | null
    max_amount?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ShippingChargeUncheckedCreateInput = {
    id?: string
    name: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    is_active?: boolean
    is_default?: boolean
    min_amount?: Decimal | DecimalJsLike | number | string | null
    max_amount?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ShippingChargeUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_default?: BoolFieldUpdateOperationsInput | boolean
    min_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ShippingChargeUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_default?: BoolFieldUpdateOperationsInput | boolean
    min_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ShippingChargeCreateManyInput = {
    id?: string
    name: string
    description?: string | null
    amount: Decimal | DecimalJsLike | number | string
    is_active?: boolean
    is_default?: boolean
    min_amount?: Decimal | DecimalJsLike | number | string | null
    max_amount?: Decimal | DecimalJsLike | number | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ShippingChargeUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_default?: BoolFieldUpdateOperationsInput | boolean
    min_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ShippingChargeUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    is_default?: BoolFieldUpdateOperationsInput | boolean
    min_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    max_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type PageCreateInput = {
    id?: string
    title: string
    slug: string
    content: string
    meta_title?: string | null
    meta_desc?: string | null
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    sections?: PageSectionCreateNestedManyWithoutPageInput
  }

  export type PageUncheckedCreateInput = {
    id?: string
    title: string
    slug: string
    content: string
    meta_title?: string | null
    meta_desc?: string | null
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    sections?: PageSectionUncheckedCreateNestedManyWithoutPageInput
  }

  export type PageUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    meta_title?: NullableStringFieldUpdateOperationsInput | string | null
    meta_desc?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    sections?: PageSectionUpdateManyWithoutPageNestedInput
  }

  export type PageUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    meta_title?: NullableStringFieldUpdateOperationsInput | string | null
    meta_desc?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    sections?: PageSectionUncheckedUpdateManyWithoutPageNestedInput
  }

  export type PageCreateManyInput = {
    id?: string
    title: string
    slug: string
    content: string
    meta_title?: string | null
    meta_desc?: string | null
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type PageUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    meta_title?: NullableStringFieldUpdateOperationsInput | string | null
    meta_desc?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type PageUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    meta_title?: NullableStringFieldUpdateOperationsInput | string | null
    meta_desc?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type PageSectionCreateInput = {
    id?: string
    title: string
    content: string
    image?: string | null
    sequence_no?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    page: PageCreateNestedOneWithoutSectionsInput
  }

  export type PageSectionUncheckedCreateInput = {
    id?: string
    page_id: string
    title: string
    content: string
    image?: string | null
    sequence_no?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type PageSectionUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    page?: PageUpdateOneRequiredWithoutSectionsNestedInput
  }

  export type PageSectionUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    page_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type PageSectionCreateManyInput = {
    id?: string
    page_id: string
    title: string
    content: string
    image?: string | null
    sequence_no?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type PageSectionUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type PageSectionUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    page_id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type FaqCreateInput = {
    id?: string
    question: string
    answer: string
    category?: string | null
    sequence_no?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type FaqUncheckedCreateInput = {
    id?: string
    question: string
    answer: string
    category?: string | null
    sequence_no?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type FaqUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type FaqUncheckedUpdateInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type FaqCreateManyInput = {
    id?: string
    question: string
    answer: string
    category?: string | null
    sequence_no?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type FaqUpdateManyMutationInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type FaqUncheckedUpdateManyInput = {
    id?: StringFieldUpdateOperationsInput | string
    question?: StringFieldUpdateOperationsInput | string
    answer?: StringFieldUpdateOperationsInput | string
    category?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }
  export type JsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonFilterBase<$PrismaModel>>, 'path'>>

  export type JsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type ApplicationLogCountOrderByAggregateInput = {
    id?: SortOrder
    level?: SortOrder
    message?: SortOrder
    meta?: SortOrder
    timestamp?: SortOrder
  }

  export type ApplicationLogMaxOrderByAggregateInput = {
    id?: SortOrder
    level?: SortOrder
    message?: SortOrder
    timestamp?: SortOrder
  }

  export type ApplicationLogMinOrderByAggregateInput = {
    id?: SortOrder
    level?: SortOrder
    message?: SortOrder
    timestamp?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }
  export type JsonWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedJsonFilter<$PrismaModel>
    _max?: NestedJsonFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type AuditLogCountOrderByAggregateInput = {
    id?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    action?: SortOrder
    previous_data?: SortOrder
    new_data?: SortOrder
    changed_by?: SortOrder
    timestamp?: SortOrder
  }

  export type AuditLogMaxOrderByAggregateInput = {
    id?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    action?: SortOrder
    changed_by?: SortOrder
    timestamp?: SortOrder
  }

  export type AuditLogMinOrderByAggregateInput = {
    id?: SortOrder
    table_name?: SortOrder
    record_id?: SortOrder
    action?: SortOrder
    changed_by?: SortOrder
    timestamp?: SortOrder
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type BoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type DecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type SellerNullableRelationFilter = {
    is?: SellerWhereInput | null
    isNot?: SellerWhereInput | null
  }

  export type CompanyAdditionalInfoListRelationFilter = {
    every?: CompanyAdditionalInfoWhereInput
    some?: CompanyAdditionalInfoWhereInput
    none?: CompanyAdditionalInfoWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type CompanyAdditionalInfoOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CompanyCountOrderByAggregateInput = {
    id?: SortOrder
    company_name?: SortOrder
    company_short_name?: SortOrder
    company_code?: SortOrder
    registration_number?: SortOrder
    tax_id?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    postal_code?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    website?: SortOrder
    is_seller?: SortOrder
    is_verified?: SortOrder
    seller_id?: SortOrder
    industry?: SortOrder
    number_of_employees?: SortOrder
    annual_revenue?: SortOrder
    description?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type CompanyAvgOrderByAggregateInput = {
    number_of_employees?: SortOrder
    annual_revenue?: SortOrder
  }

  export type CompanyMaxOrderByAggregateInput = {
    id?: SortOrder
    company_name?: SortOrder
    company_short_name?: SortOrder
    company_code?: SortOrder
    registration_number?: SortOrder
    tax_id?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    postal_code?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    website?: SortOrder
    is_seller?: SortOrder
    is_verified?: SortOrder
    seller_id?: SortOrder
    industry?: SortOrder
    number_of_employees?: SortOrder
    annual_revenue?: SortOrder
    description?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type CompanyMinOrderByAggregateInput = {
    id?: SortOrder
    company_name?: SortOrder
    company_short_name?: SortOrder
    company_code?: SortOrder
    registration_number?: SortOrder
    tax_id?: SortOrder
    address?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    postal_code?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    website?: SortOrder
    is_seller?: SortOrder
    is_verified?: SortOrder
    seller_id?: SortOrder
    industry?: SortOrder
    number_of_employees?: SortOrder
    annual_revenue?: SortOrder
    description?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type CompanySumOrderByAggregateInput = {
    number_of_employees?: SortOrder
    annual_revenue?: SortOrder
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type BoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type DecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type CompanyRelationFilter = {
    is?: CompanyWhereInput
    isNot?: CompanyWhereInput
  }

  export type CompanyAdditionalInfoCountOrderByAggregateInput = {
    id?: SortOrder
    company_id?: SortOrder
    short_description?: SortOrder
    facebook_link?: SortOrder
    twitter_link?: SortOrder
    instagram_link?: SortOrder
    linkedin_link?: SortOrder
    youtube_link?: SortOrder
    whatsapp_number?: SortOrder
    google_map_link?: SortOrder
    vision?: SortOrder
    mission?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type CompanyAdditionalInfoMaxOrderByAggregateInput = {
    id?: SortOrder
    company_id?: SortOrder
    short_description?: SortOrder
    facebook_link?: SortOrder
    twitter_link?: SortOrder
    instagram_link?: SortOrder
    linkedin_link?: SortOrder
    youtube_link?: SortOrder
    whatsapp_number?: SortOrder
    google_map_link?: SortOrder
    vision?: SortOrder
    mission?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type CompanyAdditionalInfoMinOrderByAggregateInput = {
    id?: SortOrder
    company_id?: SortOrder
    short_description?: SortOrder
    facebook_link?: SortOrder
    twitter_link?: SortOrder
    instagram_link?: SortOrder
    linkedin_link?: SortOrder
    youtube_link?: SortOrder
    whatsapp_number?: SortOrder
    google_map_link?: SortOrder
    vision?: SortOrder
    mission?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type BoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type UserGroupListRelationFilter = {
    every?: UserGroupWhereInput
    some?: UserGroupWhereInput
    none?: UserGroupWhereInput
  }

  export type UserSettingsListRelationFilter = {
    every?: UserSettingsWhereInput
    some?: UserSettingsWhereInput
    none?: UserSettingsWhereInput
  }

  export type RefreshTokenListRelationFilter = {
    every?: RefreshTokenWhereInput
    some?: RefreshTokenWhereInput
    none?: RefreshTokenWhereInput
  }

  export type UserGroupOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserSettingsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type RefreshTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type UserCountOrderByAggregateInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    is_active?: SortOrder
    is_admin?: SortOrder
    is_password_reset?: SortOrder
    user_type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type UserMaxOrderByAggregateInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    is_active?: SortOrder
    is_admin?: SortOrder
    is_password_reset?: SortOrder
    user_type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type UserMinOrderByAggregateInput = {
    id?: SortOrder
    fullname?: SortOrder
    username?: SortOrder
    email?: SortOrder
    password?: SortOrder
    address?: SortOrder
    phone?: SortOrder
    is_active?: SortOrder
    is_admin?: SortOrder
    is_password_reset?: SortOrder
    user_type?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type BoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type UserRelationFilter = {
    is?: UserWhereInput
    isNot?: UserWhereInput
  }

  export type RefreshTokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
  }

  export type RefreshTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
  }

  export type RefreshTokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    userId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
  }

  export type SecurityRuleWiseMenuPermissionListRelationFilter = {
    every?: SecurityRuleWiseMenuPermissionWhereInput
    some?: SecurityRuleWiseMenuPermissionWhereInput
    none?: SecurityRuleWiseMenuPermissionWhereInput
  }

  export type SecurityGroupRuleListRelationFilter = {
    every?: SecurityGroupRuleWhereInput
    some?: SecurityGroupRuleWhereInput
    none?: SecurityGroupRuleWhereInput
  }

  export type SecurityRuleWiseMenuPermissionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SecurityGroupRuleOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SecurityRuleCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityRuleMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityRuleMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type SecurityRuleRelationFilter = {
    is?: SecurityRuleWhereInput
    isNot?: SecurityRuleWhereInput
  }

  export type SecurityRuleWiseMenuPermissionCountOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityRuleWiseMenuPermissionAvgOrderByAggregateInput = {
    menu_id?: SortOrder
  }

  export type SecurityRuleWiseMenuPermissionMaxOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityRuleWiseMenuPermissionMinOrderByAggregateInput = {
    id?: SortOrder
    menu_id?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityRuleWiseMenuPermissionSumOrderByAggregateInput = {
    menu_id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type SecurityGroupCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityGroupMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityGroupMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityGroupRelationFilter = {
    is?: SecurityGroupWhereInput
    isNot?: SecurityGroupWhereInput
  }

  export type SecurityGroupRuleCountOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityGroupRuleMaxOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SecurityGroupRuleMinOrderByAggregateInput = {
    id?: SortOrder
    group_id?: SortOrder
    rule_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type UserGroupCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type UserGroupMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type UserGroupMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    group_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type DecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type MenuCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    url?: SortOrder
    icon?: SortOrder
    icon_library?: SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
  }

  export type MenuAvgOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
  }

  export type MenuMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    url?: SortOrder
    icon?: SortOrder
    icon_library?: SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
  }

  export type MenuMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    url?: SortOrder
    icon?: SortOrder
    icon_library?: SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    can_view?: SortOrder
    can_create?: SortOrder
    can_update?: SortOrder
    can_delete?: SortOrder
    can_report?: SortOrder
  }

  export type MenuSumOrderByAggregateInput = {
    id?: SortOrder
    parent_id?: SortOrder
    sequence_no?: SortOrder
  }

  export type DecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type FloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type DateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type CategoryRelationFilter = {
    is?: CategoryWhereInput
    isNot?: CategoryWhereInput
  }

  export type SubcategoryRelationFilter = {
    is?: SubcategoryWhereInput
    isNot?: SubcategoryWhereInput
  }

  export type BrandRelationFilter = {
    is?: BrandWhereInput
    isNot?: BrandWhereInput
  }

  export type SellerRelationFilter = {
    is?: SellerWhereInput
    isNot?: SellerWhereInput
  }

  export type ProductAttributeListRelationFilter = {
    every?: ProductAttributeWhereInput
    some?: ProductAttributeWhereInput
    none?: ProductAttributeWhereInput
  }

  export type ProductVariantListRelationFilter = {
    every?: ProductVariantWhereInput
    some?: ProductVariantWhereInput
    none?: ProductVariantWhereInput
  }

  export type ReviewListRelationFilter = {
    every?: ReviewWhereInput
    some?: ReviewWhereInput
    none?: ReviewWhereInput
  }

  export type WishlistListRelationFilter = {
    every?: WishlistWhereInput
    some?: WishlistWhereInput
    none?: WishlistWhereInput
  }

  export type SpecialOfferNullableRelationFilter = {
    is?: SpecialOfferWhereInput | null
    isNot?: SpecialOfferWhereInput | null
  }

  export type ProductAttributeOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductVariantOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ReviewOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type WishlistOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    price?: SortOrder
    priceRange?: SortOrder
    compareAtPrice?: SortOrder
    images?: SortOrder
    thumbnail?: SortOrder
    hasVariants?: SortOrder
    stock?: SortOrder
    tags?: SortOrder
    rating?: SortOrder
    reviewCount?: SortOrder
    status?: SortOrder
    isFeatured?: SortOrder
    isNew?: SortOrder
    onSale?: SortOrder
    salePercentage?: SortOrder
    salePrice?: SortOrder
    saleStartDate?: SortOrder
    saleEndDate?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
    categoryId?: SortOrder
    subcategoryId?: SortOrder
    brandId?: SortOrder
    sellerId?: SortOrder
    specialOfferId?: SortOrder
  }

  export type ProductAvgOrderByAggregateInput = {
    price?: SortOrder
    priceRange?: SortOrder
    compareAtPrice?: SortOrder
    stock?: SortOrder
    rating?: SortOrder
    reviewCount?: SortOrder
    salePercentage?: SortOrder
    salePrice?: SortOrder
  }

  export type ProductMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    price?: SortOrder
    priceRange?: SortOrder
    compareAtPrice?: SortOrder
    thumbnail?: SortOrder
    hasVariants?: SortOrder
    stock?: SortOrder
    rating?: SortOrder
    reviewCount?: SortOrder
    status?: SortOrder
    isFeatured?: SortOrder
    isNew?: SortOrder
    onSale?: SortOrder
    salePercentage?: SortOrder
    salePrice?: SortOrder
    saleStartDate?: SortOrder
    saleEndDate?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
    categoryId?: SortOrder
    subcategoryId?: SortOrder
    brandId?: SortOrder
    sellerId?: SortOrder
    specialOfferId?: SortOrder
  }

  export type ProductMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    description?: SortOrder
    price?: SortOrder
    priceRange?: SortOrder
    compareAtPrice?: SortOrder
    thumbnail?: SortOrder
    hasVariants?: SortOrder
    stock?: SortOrder
    rating?: SortOrder
    reviewCount?: SortOrder
    status?: SortOrder
    isFeatured?: SortOrder
    isNew?: SortOrder
    onSale?: SortOrder
    salePercentage?: SortOrder
    salePrice?: SortOrder
    saleStartDate?: SortOrder
    saleEndDate?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
    categoryId?: SortOrder
    subcategoryId?: SortOrder
    brandId?: SortOrder
    sellerId?: SortOrder
    specialOfferId?: SortOrder
  }

  export type ProductSumOrderByAggregateInput = {
    price?: SortOrder
    priceRange?: SortOrder
    compareAtPrice?: SortOrder
    stock?: SortOrder
    rating?: SortOrder
    reviewCount?: SortOrder
    salePercentage?: SortOrder
    salePrice?: SortOrder
  }

  export type FloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type DateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }

  export type SubcategoryListRelationFilter = {
    every?: SubcategoryWhereInput
    some?: SubcategoryWhereInput
    none?: SubcategoryWhereInput
  }

  export type ProductListRelationFilter = {
    every?: ProductWhereInput
    some?: ProductWhereInput
    none?: ProductWhereInput
  }

  export type SubcategoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type ProductOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    image?: SortOrder
    icon?: SortOrder
    featured?: SortOrder
    productCount?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type CategoryAvgOrderByAggregateInput = {
    productCount?: SortOrder
  }

  export type CategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    image?: SortOrder
    icon?: SortOrder
    featured?: SortOrder
    productCount?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type CategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    image?: SortOrder
    icon?: SortOrder
    featured?: SortOrder
    productCount?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type CategorySumOrderByAggregateInput = {
    productCount?: SortOrder
  }

  export type SubcategoryCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    productCount?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
    categoryId?: SortOrder
  }

  export type SubcategoryAvgOrderByAggregateInput = {
    productCount?: SortOrder
  }

  export type SubcategoryMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    productCount?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
    categoryId?: SortOrder
  }

  export type SubcategoryMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    productCount?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
    categoryId?: SortOrder
  }

  export type SubcategorySumOrderByAggregateInput = {
    productCount?: SortOrder
  }

  export type BrandCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type BrandMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type BrandMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }
  export type JsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type ProductRelationFilter = {
    is?: ProductWhereInput
    isNot?: ProductWhereInput
  }

  export type ProductAttributeCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    value?: SortOrder
    unit?: SortOrder
    displayValue?: SortOrder
    options?: SortOrder
    productId?: SortOrder
  }

  export type ProductAttributeMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    value?: SortOrder
    unit?: SortOrder
    displayValue?: SortOrder
    productId?: SortOrder
  }

  export type ProductAttributeMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    type?: SortOrder
    value?: SortOrder
    unit?: SortOrder
    displayValue?: SortOrder
    productId?: SortOrder
  }
  export type JsonNullableWithAggregatesFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, Exclude<keyof Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>,
        Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<JsonNullableWithAggregatesFilterBase<$PrismaModel>>, 'path'>>

  export type JsonNullableWithAggregatesFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedJsonNullableFilter<$PrismaModel>
    _max?: NestedJsonNullableFilter<$PrismaModel>
  }

  export type ProductVariantCountOrderByAggregateInput = {
    id?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    attributes?: SortOrder
    images?: SortOrder
    sequence_no?: SortOrder
    productId?: SortOrder
  }

  export type ProductVariantAvgOrderByAggregateInput = {
    price?: SortOrder
    stock?: SortOrder
    sequence_no?: SortOrder
  }

  export type ProductVariantMaxOrderByAggregateInput = {
    id?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    sequence_no?: SortOrder
    productId?: SortOrder
  }

  export type ProductVariantMinOrderByAggregateInput = {
    id?: SortOrder
    sku?: SortOrder
    price?: SortOrder
    stock?: SortOrder
    sequence_no?: SortOrder
    productId?: SortOrder
  }

  export type ProductVariantSumOrderByAggregateInput = {
    price?: SortOrder
    stock?: SortOrder
    sequence_no?: SortOrder
  }

  export type CompanyListRelationFilter = {
    every?: CompanyWhereInput
    some?: CompanyWhereInput
    none?: CompanyWhereInput
  }

  export type CompanyOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type SellerCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    logo?: SortOrder
    rating?: SortOrder
    reviewCount?: SortOrder
    verified?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SellerAvgOrderByAggregateInput = {
    rating?: SortOrder
    reviewCount?: SortOrder
  }

  export type SellerMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    logo?: SortOrder
    rating?: SortOrder
    reviewCount?: SortOrder
    verified?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SellerMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    slug?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    logo?: SortOrder
    rating?: SortOrder
    reviewCount?: SortOrder
    verified?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SellerSumOrderByAggregateInput = {
    rating?: SortOrder
    reviewCount?: SortOrder
  }

  export type ReviewCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    userName?: SortOrder
    userAvatar?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    comment?: SortOrder
    helpful?: SortOrder
    createdAt?: SortOrder
    variantId?: SortOrder
    productId?: SortOrder
  }

  export type ReviewAvgOrderByAggregateInput = {
    rating?: SortOrder
    helpful?: SortOrder
  }

  export type ReviewMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    userName?: SortOrder
    userAvatar?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    comment?: SortOrder
    helpful?: SortOrder
    createdAt?: SortOrder
    variantId?: SortOrder
    productId?: SortOrder
  }

  export type ReviewMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    userName?: SortOrder
    userAvatar?: SortOrder
    rating?: SortOrder
    title?: SortOrder
    comment?: SortOrder
    helpful?: SortOrder
    createdAt?: SortOrder
    variantId?: SortOrder
    productId?: SortOrder
  }

  export type ReviewSumOrderByAggregateInput = {
    rating?: SortOrder
    helpful?: SortOrder
  }

  export type OrderListRelationFilter = {
    every?: OrderWhereInput
    some?: OrderWhereInput
    none?: OrderWhereInput
  }

  export type CustomerRefreshTokenListRelationFilter = {
    every?: CustomerRefreshTokenWhereInput
    some?: CustomerRefreshTokenWhereInput
    none?: CustomerRefreshTokenWhereInput
  }

  export type CustomerAddressListRelationFilter = {
    every?: CustomerAddressWhereInput
    some?: CustomerAddressWhereInput
    none?: CustomerAddressWhereInput
  }

  export type PendingOrderListRelationFilter = {
    every?: PendingOrderWhereInput
    some?: PendingOrderWhereInput
    none?: PendingOrderWhereInput
  }

  export type OrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerRefreshTokenOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerAddressOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PendingOrderOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type CustomerCountOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    is_active?: SortOrder
    remember_token?: SortOrder
    email_verified?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type CustomerMaxOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    is_active?: SortOrder
    remember_token?: SortOrder
    email_verified?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type CustomerMinOrderByAggregateInput = {
    id?: SortOrder
    first_name?: SortOrder
    last_name?: SortOrder
    email?: SortOrder
    phone?: SortOrder
    password?: SortOrder
    is_active?: SortOrder
    remember_token?: SortOrder
    email_verified?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type CustomerRelationFilter = {
    is?: CustomerWhereInput
    isNot?: CustomerWhereInput
  }

  export type CustomerRefreshTokenCountOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    customerId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
  }

  export type CustomerRefreshTokenMaxOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    customerId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
  }

  export type CustomerRefreshTokenMinOrderByAggregateInput = {
    id?: SortOrder
    token?: SortOrder
    customerId?: SortOrder
    expiresAt?: SortOrder
    createdAt?: SortOrder
    isRevoked?: SortOrder
  }

  export type EnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[]
    notIn?: $Enums.OrderStatus[]
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type EnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[]
    notIn?: $Enums.PaymentStatus[]
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type OrderItemListRelationFilter = {
    every?: OrderItemWhereInput
    some?: OrderItemWhereInput
    none?: OrderItemWhereInput
  }

  export type CustomerNullableRelationFilter = {
    is?: CustomerWhereInput | null
    isNot?: CustomerWhereInput | null
  }

  export type PaymentTransactionListRelationFilter = {
    every?: PaymentTransactionWhereInput
    some?: PaymentTransactionWhereInput
    none?: PaymentTransactionWhereInput
  }

  export type CouponNullableRelationFilter = {
    is?: CouponWhereInput | null
    isNot?: CouponWhereInput | null
  }

  export type OrderItemOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PaymentTransactionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type OrderCountOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    totalAmount?: SortOrder
    shippingCost?: SortOrder
    tax?: SortOrder
    discount?: SortOrder
    finalAmount?: SortOrder
    shippingAddress?: SortOrder
    billingAddress?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    trackingNumber?: SortOrder
    trackingStatus?: SortOrder
    customerId?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
    paymentGateway?: SortOrder
    sslcommerzTransactionId?: SortOrder
    paypalOrderId?: SortOrder
    paymentMetadata?: SortOrder
    coupon_id?: SortOrder
    discount_amount?: SortOrder
  }

  export type OrderAvgOrderByAggregateInput = {
    totalAmount?: SortOrder
    shippingCost?: SortOrder
    tax?: SortOrder
    discount?: SortOrder
    finalAmount?: SortOrder
    discount_amount?: SortOrder
  }

  export type OrderMaxOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    totalAmount?: SortOrder
    shippingCost?: SortOrder
    tax?: SortOrder
    discount?: SortOrder
    finalAmount?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    trackingNumber?: SortOrder
    trackingStatus?: SortOrder
    customerId?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
    paymentGateway?: SortOrder
    sslcommerzTransactionId?: SortOrder
    paypalOrderId?: SortOrder
    coupon_id?: SortOrder
    discount_amount?: SortOrder
  }

  export type OrderMinOrderByAggregateInput = {
    id?: SortOrder
    orderNumber?: SortOrder
    userId?: SortOrder
    status?: SortOrder
    totalAmount?: SortOrder
    shippingCost?: SortOrder
    tax?: SortOrder
    discount?: SortOrder
    finalAmount?: SortOrder
    paymentMethod?: SortOrder
    paymentStatus?: SortOrder
    trackingNumber?: SortOrder
    trackingStatus?: SortOrder
    customerId?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
    paymentGateway?: SortOrder
    sslcommerzTransactionId?: SortOrder
    paypalOrderId?: SortOrder
    coupon_id?: SortOrder
    discount_amount?: SortOrder
  }

  export type OrderSumOrderByAggregateInput = {
    totalAmount?: SortOrder
    shippingCost?: SortOrder
    tax?: SortOrder
    discount?: SortOrder
    finalAmount?: SortOrder
    discount_amount?: SortOrder
  }

  export type EnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[]
    notIn?: $Enums.OrderStatus[]
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type EnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[]
    notIn?: $Enums.PaymentStatus[]
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type OrderRelationFilter = {
    is?: OrderWhereInput
    isNot?: OrderWhereInput
  }

  export type OrderItemCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    productName?: SortOrder
    variantAttributes?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type OrderItemAvgOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type OrderItemMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    productName?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type OrderItemMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
    productName?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type OrderItemSumOrderByAggregateInput = {
    quantity?: SortOrder
    unitPrice?: SortOrder
    totalPrice?: SortOrder
  }

  export type EnumMovementTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MovementType | EnumMovementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MovementType[]
    notIn?: $Enums.MovementType[]
    not?: NestedEnumMovementTypeFilter<$PrismaModel> | $Enums.MovementType
  }

  export type StockMovementCountOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    quantity?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type StockMovementAvgOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type StockMovementMaxOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    quantity?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type StockMovementMinOrderByAggregateInput = {
    id?: SortOrder
    productId?: SortOrder
    variantId?: SortOrder
    quantity?: SortOrder
    type?: SortOrder
    reference?: SortOrder
    notes?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type StockMovementSumOrderByAggregateInput = {
    quantity?: SortOrder
  }

  export type EnumMovementTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MovementType | EnumMovementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MovementType[]
    notIn?: $Enums.MovementType[]
    not?: NestedEnumMovementTypeWithAggregatesFilter<$PrismaModel> | $Enums.MovementType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMovementTypeFilter<$PrismaModel>
    _max?: NestedEnumMovementTypeFilter<$PrismaModel>
  }

  export type UserSettingsCountOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    settings?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type UserSettingsMaxOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type UserSettingsMinOrderByAggregateInput = {
    id?: SortOrder
    user_id?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type CustomerAddressCountOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    label?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    apartment?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    postalCode?: SortOrder
    isDefault?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type CustomerAddressMaxOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    label?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    apartment?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    postalCode?: SortOrder
    isDefault?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type CustomerAddressMinOrderByAggregateInput = {
    id?: SortOrder
    customerId?: SortOrder
    label?: SortOrder
    firstName?: SortOrder
    lastName?: SortOrder
    phone?: SortOrder
    email?: SortOrder
    address?: SortOrder
    apartment?: SortOrder
    city?: SortOrder
    state?: SortOrder
    country?: SortOrder
    postalCode?: SortOrder
    isDefault?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type PendingOrderCountOrderByAggregateInput = {
    id?: SortOrder
    transactionId?: SortOrder
    customerId?: SortOrder
    addressId?: SortOrder
    items?: SortOrder
    couponId?: SortOrder
    couponCode?: SortOrder
    subtotal?: SortOrder
    shippingCost?: SortOrder
    discount?: SortOrder
    total?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    shippingChargeId?: SortOrder
  }

  export type PendingOrderAvgOrderByAggregateInput = {
    subtotal?: SortOrder
    shippingCost?: SortOrder
    discount?: SortOrder
    total?: SortOrder
  }

  export type PendingOrderMaxOrderByAggregateInput = {
    id?: SortOrder
    transactionId?: SortOrder
    customerId?: SortOrder
    addressId?: SortOrder
    couponId?: SortOrder
    couponCode?: SortOrder
    subtotal?: SortOrder
    shippingCost?: SortOrder
    discount?: SortOrder
    total?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    shippingChargeId?: SortOrder
  }

  export type PendingOrderMinOrderByAggregateInput = {
    id?: SortOrder
    transactionId?: SortOrder
    customerId?: SortOrder
    addressId?: SortOrder
    couponId?: SortOrder
    couponCode?: SortOrder
    subtotal?: SortOrder
    shippingCost?: SortOrder
    discount?: SortOrder
    total?: SortOrder
    status?: SortOrder
    paymentMethod?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    shippingChargeId?: SortOrder
  }

  export type PendingOrderSumOrderByAggregateInput = {
    subtotal?: SortOrder
    shippingCost?: SortOrder
    discount?: SortOrder
    total?: SortOrder
  }

  export type OrderNullableRelationFilter = {
    is?: OrderWhereInput | null
    isNot?: OrderWhereInput | null
  }

  export type PaymentTransactionCountOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    transactionId?: SortOrder
    gateway?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    metadata?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type PaymentTransactionAvgOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type PaymentTransactionMaxOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    transactionId?: SortOrder
    gateway?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type PaymentTransactionMinOrderByAggregateInput = {
    id?: SortOrder
    orderId?: SortOrder
    transactionId?: SortOrder
    gateway?: SortOrder
    amount?: SortOrder
    currency?: SortOrder
    status?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
  }

  export type PaymentTransactionSumOrderByAggregateInput = {
    amount?: SortOrder
  }

  export type WishlistCountOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type WishlistMaxOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type WishlistMinOrderByAggregateInput = {
    id?: SortOrder
    userId?: SortOrder
    productId?: SortOrder
    created_at?: SortOrder
    updated_at?: SortOrder
  }

  export type BannerCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    image?: SortOrder
    link?: SortOrder
    type?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type BannerAvgOrderByAggregateInput = {
    sequence_no?: SortOrder
  }

  export type BannerMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    image?: SortOrder
    link?: SortOrder
    type?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type BannerMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    image?: SortOrder
    link?: SortOrder
    type?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type BannerSumOrderByAggregateInput = {
    sequence_no?: SortOrder
  }

  export type SpecialOfferCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    discount?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    is_active?: SortOrder
    image?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SpecialOfferAvgOrderByAggregateInput = {
    discount?: SortOrder
  }

  export type SpecialOfferMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    discount?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    is_active?: SortOrder
    image?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SpecialOfferMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    subtitle?: SortOrder
    discount?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    is_active?: SortOrder
    image?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type SpecialOfferSumOrderByAggregateInput = {
    discount?: SortOrder
  }

  export type CouponCountOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    description?: SortOrder
    discount_type?: SortOrder
    discount_amount?: SortOrder
    minimum_purchase?: SortOrder
    maximum_discount?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    usage_limit?: SortOrder
    used_count?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type CouponAvgOrderByAggregateInput = {
    discount_amount?: SortOrder
    minimum_purchase?: SortOrder
    maximum_discount?: SortOrder
    usage_limit?: SortOrder
    used_count?: SortOrder
  }

  export type CouponMaxOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    description?: SortOrder
    discount_type?: SortOrder
    discount_amount?: SortOrder
    minimum_purchase?: SortOrder
    maximum_discount?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    usage_limit?: SortOrder
    used_count?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type CouponMinOrderByAggregateInput = {
    id?: SortOrder
    code?: SortOrder
    description?: SortOrder
    discount_type?: SortOrder
    discount_amount?: SortOrder
    minimum_purchase?: SortOrder
    maximum_discount?: SortOrder
    start_date?: SortOrder
    end_date?: SortOrder
    usage_limit?: SortOrder
    used_count?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type CouponSumOrderByAggregateInput = {
    discount_amount?: SortOrder
    minimum_purchase?: SortOrder
    maximum_discount?: SortOrder
    usage_limit?: SortOrder
    used_count?: SortOrder
  }

  export type ShippingChargeCountOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    is_active?: SortOrder
    is_default?: SortOrder
    min_amount?: SortOrder
    max_amount?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ShippingChargeAvgOrderByAggregateInput = {
    amount?: SortOrder
    min_amount?: SortOrder
    max_amount?: SortOrder
  }

  export type ShippingChargeMaxOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    is_active?: SortOrder
    is_default?: SortOrder
    min_amount?: SortOrder
    max_amount?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ShippingChargeMinOrderByAggregateInput = {
    id?: SortOrder
    name?: SortOrder
    description?: SortOrder
    amount?: SortOrder
    is_active?: SortOrder
    is_default?: SortOrder
    min_amount?: SortOrder
    max_amount?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type ShippingChargeSumOrderByAggregateInput = {
    amount?: SortOrder
    min_amount?: SortOrder
    max_amount?: SortOrder
  }

  export type PageSectionListRelationFilter = {
    every?: PageSectionWhereInput
    some?: PageSectionWhereInput
    none?: PageSectionWhereInput
  }

  export type PageSectionOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type PageCountOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    content?: SortOrder
    meta_title?: SortOrder
    meta_desc?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type PageMaxOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    content?: SortOrder
    meta_title?: SortOrder
    meta_desc?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type PageMinOrderByAggregateInput = {
    id?: SortOrder
    title?: SortOrder
    slug?: SortOrder
    content?: SortOrder
    meta_title?: SortOrder
    meta_desc?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type PageRelationFilter = {
    is?: PageWhereInput
    isNot?: PageWhereInput
  }

  export type PageSectionCountOrderByAggregateInput = {
    id?: SortOrder
    page_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type PageSectionAvgOrderByAggregateInput = {
    sequence_no?: SortOrder
  }

  export type PageSectionMaxOrderByAggregateInput = {
    id?: SortOrder
    page_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type PageSectionMinOrderByAggregateInput = {
    id?: SortOrder
    page_id?: SortOrder
    title?: SortOrder
    content?: SortOrder
    image?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type PageSectionSumOrderByAggregateInput = {
    sequence_no?: SortOrder
  }

  export type FaqCountOrderByAggregateInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    category?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type FaqAvgOrderByAggregateInput = {
    sequence_no?: SortOrder
  }

  export type FaqMaxOrderByAggregateInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    category?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type FaqMinOrderByAggregateInput = {
    id?: SortOrder
    question?: SortOrder
    answer?: SortOrder
    category?: SortOrder
    sequence_no?: SortOrder
    is_active?: SortOrder
    created_at?: SortOrder
    created_by?: SortOrder
    created_ip?: SortOrder
    updated_at?: SortOrder
    updated_by?: SortOrder
    updated_ip?: SortOrder
    company_id?: SortOrder
  }

  export type FaqSumOrderByAggregateInput = {
    sequence_no?: SortOrder
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type SellerCreateNestedOneWithoutCompaniesInput = {
    create?: XOR<SellerCreateWithoutCompaniesInput, SellerUncheckedCreateWithoutCompaniesInput>
    connectOrCreate?: SellerCreateOrConnectWithoutCompaniesInput
    connect?: SellerWhereUniqueInput
  }

  export type CompanyAdditionalInfoCreateNestedManyWithoutCompanyInput = {
    create?: XOR<CompanyAdditionalInfoCreateWithoutCompanyInput, CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput> | CompanyAdditionalInfoCreateWithoutCompanyInput[] | CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput | CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput[]
    createMany?: CompanyAdditionalInfoCreateManyCompanyInputEnvelope
    connect?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
  }

  export type CompanyAdditionalInfoUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<CompanyAdditionalInfoCreateWithoutCompanyInput, CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput> | CompanyAdditionalInfoCreateWithoutCompanyInput[] | CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput | CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput[]
    createMany?: CompanyAdditionalInfoCreateManyCompanyInputEnvelope
    connect?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type BoolFieldUpdateOperationsInput = {
    set?: boolean
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string | null
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type SellerUpdateOneWithoutCompaniesNestedInput = {
    create?: XOR<SellerCreateWithoutCompaniesInput, SellerUncheckedCreateWithoutCompaniesInput>
    connectOrCreate?: SellerCreateOrConnectWithoutCompaniesInput
    upsert?: SellerUpsertWithoutCompaniesInput
    disconnect?: SellerWhereInput | boolean
    delete?: SellerWhereInput | boolean
    connect?: SellerWhereUniqueInput
    update?: XOR<XOR<SellerUpdateToOneWithWhereWithoutCompaniesInput, SellerUpdateWithoutCompaniesInput>, SellerUncheckedUpdateWithoutCompaniesInput>
  }

  export type CompanyAdditionalInfoUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<CompanyAdditionalInfoCreateWithoutCompanyInput, CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput> | CompanyAdditionalInfoCreateWithoutCompanyInput[] | CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput | CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput[]
    upsert?: CompanyAdditionalInfoUpsertWithWhereUniqueWithoutCompanyInput | CompanyAdditionalInfoUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: CompanyAdditionalInfoCreateManyCompanyInputEnvelope
    set?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    disconnect?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    delete?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    connect?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    update?: CompanyAdditionalInfoUpdateWithWhereUniqueWithoutCompanyInput | CompanyAdditionalInfoUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: CompanyAdditionalInfoUpdateManyWithWhereWithoutCompanyInput | CompanyAdditionalInfoUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: CompanyAdditionalInfoScalarWhereInput | CompanyAdditionalInfoScalarWhereInput[]
  }

  export type CompanyAdditionalInfoUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<CompanyAdditionalInfoCreateWithoutCompanyInput, CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput> | CompanyAdditionalInfoCreateWithoutCompanyInput[] | CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput | CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput[]
    upsert?: CompanyAdditionalInfoUpsertWithWhereUniqueWithoutCompanyInput | CompanyAdditionalInfoUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: CompanyAdditionalInfoCreateManyCompanyInputEnvelope
    set?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    disconnect?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    delete?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    connect?: CompanyAdditionalInfoWhereUniqueInput | CompanyAdditionalInfoWhereUniqueInput[]
    update?: CompanyAdditionalInfoUpdateWithWhereUniqueWithoutCompanyInput | CompanyAdditionalInfoUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: CompanyAdditionalInfoUpdateManyWithWhereWithoutCompanyInput | CompanyAdditionalInfoUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: CompanyAdditionalInfoScalarWhereInput | CompanyAdditionalInfoScalarWhereInput[]
  }

  export type CompanyCreateNestedOneWithoutCompanyAdditionalInfoInput = {
    create?: XOR<CompanyCreateWithoutCompanyAdditionalInfoInput, CompanyUncheckedCreateWithoutCompanyAdditionalInfoInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutCompanyAdditionalInfoInput
    connect?: CompanyWhereUniqueInput
  }

  export type CompanyUpdateOneRequiredWithoutCompanyAdditionalInfoNestedInput = {
    create?: XOR<CompanyCreateWithoutCompanyAdditionalInfoInput, CompanyUncheckedCreateWithoutCompanyAdditionalInfoInput>
    connectOrCreate?: CompanyCreateOrConnectWithoutCompanyAdditionalInfoInput
    upsert?: CompanyUpsertWithoutCompanyAdditionalInfoInput
    connect?: CompanyWhereUniqueInput
    update?: XOR<XOR<CompanyUpdateToOneWithWhereWithoutCompanyAdditionalInfoInput, CompanyUpdateWithoutCompanyAdditionalInfoInput>, CompanyUncheckedUpdateWithoutCompanyAdditionalInfoInput>
  }

  export type UserGroupCreateNestedManyWithoutUserInput = {
    create?: XOR<UserGroupCreateWithoutUserInput, UserGroupUncheckedCreateWithoutUserInput> | UserGroupCreateWithoutUserInput[] | UserGroupUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutUserInput | UserGroupCreateOrConnectWithoutUserInput[]
    createMany?: UserGroupCreateManyUserInputEnvelope
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
  }

  export type UserSettingsCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput> | UserSettingsCreateWithoutUserInput[] | UserSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSettingsCreateOrConnectWithoutUserInput | UserSettingsCreateOrConnectWithoutUserInput[]
    createMany?: UserSettingsCreateManyUserInputEnvelope
    connect?: UserSettingsWhereUniqueInput | UserSettingsWhereUniqueInput[]
  }

  export type RefreshTokenCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type UserGroupUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserGroupCreateWithoutUserInput, UserGroupUncheckedCreateWithoutUserInput> | UserGroupCreateWithoutUserInput[] | UserGroupUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutUserInput | UserGroupCreateOrConnectWithoutUserInput[]
    createMany?: UserGroupCreateManyUserInputEnvelope
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
  }

  export type UserSettingsUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput> | UserSettingsCreateWithoutUserInput[] | UserSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSettingsCreateOrConnectWithoutUserInput | UserSettingsCreateOrConnectWithoutUserInput[]
    createMany?: UserSettingsCreateManyUserInputEnvelope
    connect?: UserSettingsWhereUniqueInput | UserSettingsWhereUniqueInput[]
  }

  export type RefreshTokenUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
  }

  export type NullableBoolFieldUpdateOperationsInput = {
    set?: boolean | null
  }

  export type UserGroupUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserGroupCreateWithoutUserInput, UserGroupUncheckedCreateWithoutUserInput> | UserGroupCreateWithoutUserInput[] | UserGroupUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutUserInput | UserGroupCreateOrConnectWithoutUserInput[]
    upsert?: UserGroupUpsertWithWhereUniqueWithoutUserInput | UserGroupUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserGroupCreateManyUserInputEnvelope
    set?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    disconnect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    delete?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    update?: UserGroupUpdateWithWhereUniqueWithoutUserInput | UserGroupUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserGroupUpdateManyWithWhereWithoutUserInput | UserGroupUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserGroupScalarWhereInput | UserGroupScalarWhereInput[]
  }

  export type UserSettingsUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput> | UserSettingsCreateWithoutUserInput[] | UserSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSettingsCreateOrConnectWithoutUserInput | UserSettingsCreateOrConnectWithoutUserInput[]
    upsert?: UserSettingsUpsertWithWhereUniqueWithoutUserInput | UserSettingsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSettingsCreateManyUserInputEnvelope
    set?: UserSettingsWhereUniqueInput | UserSettingsWhereUniqueInput[]
    disconnect?: UserSettingsWhereUniqueInput | UserSettingsWhereUniqueInput[]
    delete?: UserSettingsWhereUniqueInput | UserSettingsWhereUniqueInput[]
    connect?: UserSettingsWhereUniqueInput | UserSettingsWhereUniqueInput[]
    update?: UserSettingsUpdateWithWhereUniqueWithoutUserInput | UserSettingsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSettingsUpdateManyWithWhereWithoutUserInput | UserSettingsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSettingsScalarWhereInput | UserSettingsScalarWhereInput[]
  }

  export type RefreshTokenUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type UserGroupUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserGroupCreateWithoutUserInput, UserGroupUncheckedCreateWithoutUserInput> | UserGroupCreateWithoutUserInput[] | UserGroupUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutUserInput | UserGroupCreateOrConnectWithoutUserInput[]
    upsert?: UserGroupUpsertWithWhereUniqueWithoutUserInput | UserGroupUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserGroupCreateManyUserInputEnvelope
    set?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    disconnect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    delete?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    update?: UserGroupUpdateWithWhereUniqueWithoutUserInput | UserGroupUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserGroupUpdateManyWithWhereWithoutUserInput | UserGroupUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserGroupScalarWhereInput | UserGroupScalarWhereInput[]
  }

  export type UserSettingsUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput> | UserSettingsCreateWithoutUserInput[] | UserSettingsUncheckedCreateWithoutUserInput[]
    connectOrCreate?: UserSettingsCreateOrConnectWithoutUserInput | UserSettingsCreateOrConnectWithoutUserInput[]
    upsert?: UserSettingsUpsertWithWhereUniqueWithoutUserInput | UserSettingsUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: UserSettingsCreateManyUserInputEnvelope
    set?: UserSettingsWhereUniqueInput | UserSettingsWhereUniqueInput[]
    disconnect?: UserSettingsWhereUniqueInput | UserSettingsWhereUniqueInput[]
    delete?: UserSettingsWhereUniqueInput | UserSettingsWhereUniqueInput[]
    connect?: UserSettingsWhereUniqueInput | UserSettingsWhereUniqueInput[]
    update?: UserSettingsUpdateWithWhereUniqueWithoutUserInput | UserSettingsUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: UserSettingsUpdateManyWithWhereWithoutUserInput | UserSettingsUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: UserSettingsScalarWhereInput | UserSettingsScalarWhereInput[]
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput> | RefreshTokenCreateWithoutUserInput[] | RefreshTokenUncheckedCreateWithoutUserInput[]
    connectOrCreate?: RefreshTokenCreateOrConnectWithoutUserInput | RefreshTokenCreateOrConnectWithoutUserInput[]
    upsert?: RefreshTokenUpsertWithWhereUniqueWithoutUserInput | RefreshTokenUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: RefreshTokenCreateManyUserInputEnvelope
    set?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    disconnect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    delete?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    connect?: RefreshTokenWhereUniqueInput | RefreshTokenWhereUniqueInput[]
    update?: RefreshTokenUpdateWithWhereUniqueWithoutUserInput | RefreshTokenUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: RefreshTokenUpdateManyWithWhereWithoutUserInput | RefreshTokenUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
  }

  export type UserCreateNestedOneWithoutRefreshTokenInput = {
    create?: XOR<UserCreateWithoutRefreshTokenInput, UserUncheckedCreateWithoutRefreshTokenInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokenInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutRefreshTokenNestedInput = {
    create?: XOR<UserCreateWithoutRefreshTokenInput, UserUncheckedCreateWithoutRefreshTokenInput>
    connectOrCreate?: UserCreateOrConnectWithoutRefreshTokenInput
    upsert?: UserUpsertWithoutRefreshTokenInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutRefreshTokenInput, UserUpdateWithoutRefreshTokenInput>, UserUncheckedUpdateWithoutRefreshTokenInput>
  }

  export type SecurityRuleWiseMenuPermissionCreateNestedManyWithoutSecurity_ruleInput = {
    create?: XOR<SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput> | SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput[] | SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput[]
    createMany?: SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInputEnvelope
    connect?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
  }

  export type SecurityGroupRuleCreateNestedManyWithoutSecurity_ruleInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput> | SecurityGroupRuleCreateWithoutSecurity_ruleInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_ruleInputEnvelope
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
  }

  export type SecurityRuleWiseMenuPermissionUncheckedCreateNestedManyWithoutSecurity_ruleInput = {
    create?: XOR<SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput> | SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput[] | SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput[]
    createMany?: SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInputEnvelope
    connect?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
  }

  export type SecurityGroupRuleUncheckedCreateNestedManyWithoutSecurity_ruleInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput> | SecurityGroupRuleCreateWithoutSecurity_ruleInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_ruleInputEnvelope
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
  }

  export type SecurityRuleWiseMenuPermissionUpdateManyWithoutSecurity_ruleNestedInput = {
    create?: XOR<SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput> | SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput[] | SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput[]
    upsert?: SecurityRuleWiseMenuPermissionUpsertWithWhereUniqueWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionUpsertWithWhereUniqueWithoutSecurity_ruleInput[]
    createMany?: SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInputEnvelope
    set?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    disconnect?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    delete?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    connect?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    update?: SecurityRuleWiseMenuPermissionUpdateWithWhereUniqueWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionUpdateWithWhereUniqueWithoutSecurity_ruleInput[]
    updateMany?: SecurityRuleWiseMenuPermissionUpdateManyWithWhereWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionUpdateManyWithWhereWithoutSecurity_ruleInput[]
    deleteMany?: SecurityRuleWiseMenuPermissionScalarWhereInput | SecurityRuleWiseMenuPermissionScalarWhereInput[]
  }

  export type SecurityGroupRuleUpdateManyWithoutSecurity_ruleNestedInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput> | SecurityGroupRuleCreateWithoutSecurity_ruleInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput[]
    upsert?: SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_ruleInput | SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_ruleInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_ruleInputEnvelope
    set?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    disconnect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    delete?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    update?: SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_ruleInput | SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_ruleInput[]
    updateMany?: SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_ruleInput | SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_ruleInput[]
    deleteMany?: SecurityGroupRuleScalarWhereInput | SecurityGroupRuleScalarWhereInput[]
  }

  export type SecurityRuleWiseMenuPermissionUncheckedUpdateManyWithoutSecurity_ruleNestedInput = {
    create?: XOR<SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput> | SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput[] | SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput[]
    upsert?: SecurityRuleWiseMenuPermissionUpsertWithWhereUniqueWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionUpsertWithWhereUniqueWithoutSecurity_ruleInput[]
    createMany?: SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInputEnvelope
    set?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    disconnect?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    delete?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    connect?: SecurityRuleWiseMenuPermissionWhereUniqueInput | SecurityRuleWiseMenuPermissionWhereUniqueInput[]
    update?: SecurityRuleWiseMenuPermissionUpdateWithWhereUniqueWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionUpdateWithWhereUniqueWithoutSecurity_ruleInput[]
    updateMany?: SecurityRuleWiseMenuPermissionUpdateManyWithWhereWithoutSecurity_ruleInput | SecurityRuleWiseMenuPermissionUpdateManyWithWhereWithoutSecurity_ruleInput[]
    deleteMany?: SecurityRuleWiseMenuPermissionScalarWhereInput | SecurityRuleWiseMenuPermissionScalarWhereInput[]
  }

  export type SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_ruleNestedInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput> | SecurityGroupRuleCreateWithoutSecurity_ruleInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput[]
    upsert?: SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_ruleInput | SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_ruleInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_ruleInputEnvelope
    set?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    disconnect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    delete?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    update?: SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_ruleInput | SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_ruleInput[]
    updateMany?: SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_ruleInput | SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_ruleInput[]
    deleteMany?: SecurityGroupRuleScalarWhereInput | SecurityGroupRuleScalarWhereInput[]
  }

  export type SecurityRuleCreateNestedOneWithoutSecurityRuleWiseMenuPermissionsInput = {
    create?: XOR<SecurityRuleCreateWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUncheckedCreateWithoutSecurityRuleWiseMenuPermissionsInput>
    connectOrCreate?: SecurityRuleCreateOrConnectWithoutSecurityRuleWiseMenuPermissionsInput
    connect?: SecurityRuleWhereUniqueInput
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type SecurityRuleUpdateOneRequiredWithoutSecurityRuleWiseMenuPermissionsNestedInput = {
    create?: XOR<SecurityRuleCreateWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUncheckedCreateWithoutSecurityRuleWiseMenuPermissionsInput>
    connectOrCreate?: SecurityRuleCreateOrConnectWithoutSecurityRuleWiseMenuPermissionsInput
    upsert?: SecurityRuleUpsertWithoutSecurityRuleWiseMenuPermissionsInput
    connect?: SecurityRuleWhereUniqueInput
    update?: XOR<XOR<SecurityRuleUpdateToOneWithWhereWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUpdateWithoutSecurityRuleWiseMenuPermissionsInput>, SecurityRuleUncheckedUpdateWithoutSecurityRuleWiseMenuPermissionsInput>
  }

  export type SecurityGroupRuleCreateNestedManyWithoutSecurity_groupInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput> | SecurityGroupRuleCreateWithoutSecurity_groupInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_groupInputEnvelope
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
  }

  export type UserGroupCreateNestedManyWithoutSecurity_groupInput = {
    create?: XOR<UserGroupCreateWithoutSecurity_groupInput, UserGroupUncheckedCreateWithoutSecurity_groupInput> | UserGroupCreateWithoutSecurity_groupInput[] | UserGroupUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutSecurity_groupInput | UserGroupCreateOrConnectWithoutSecurity_groupInput[]
    createMany?: UserGroupCreateManySecurity_groupInputEnvelope
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
  }

  export type SecurityGroupRuleUncheckedCreateNestedManyWithoutSecurity_groupInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput> | SecurityGroupRuleCreateWithoutSecurity_groupInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_groupInputEnvelope
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
  }

  export type UserGroupUncheckedCreateNestedManyWithoutSecurity_groupInput = {
    create?: XOR<UserGroupCreateWithoutSecurity_groupInput, UserGroupUncheckedCreateWithoutSecurity_groupInput> | UserGroupCreateWithoutSecurity_groupInput[] | UserGroupUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutSecurity_groupInput | UserGroupCreateOrConnectWithoutSecurity_groupInput[]
    createMany?: UserGroupCreateManySecurity_groupInputEnvelope
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
  }

  export type SecurityGroupRuleUpdateManyWithoutSecurity_groupNestedInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput> | SecurityGroupRuleCreateWithoutSecurity_groupInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput[]
    upsert?: SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_groupInput | SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_groupInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_groupInputEnvelope
    set?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    disconnect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    delete?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    update?: SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_groupInput | SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_groupInput[]
    updateMany?: SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_groupInput | SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_groupInput[]
    deleteMany?: SecurityGroupRuleScalarWhereInput | SecurityGroupRuleScalarWhereInput[]
  }

  export type UserGroupUpdateManyWithoutSecurity_groupNestedInput = {
    create?: XOR<UserGroupCreateWithoutSecurity_groupInput, UserGroupUncheckedCreateWithoutSecurity_groupInput> | UserGroupCreateWithoutSecurity_groupInput[] | UserGroupUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutSecurity_groupInput | UserGroupCreateOrConnectWithoutSecurity_groupInput[]
    upsert?: UserGroupUpsertWithWhereUniqueWithoutSecurity_groupInput | UserGroupUpsertWithWhereUniqueWithoutSecurity_groupInput[]
    createMany?: UserGroupCreateManySecurity_groupInputEnvelope
    set?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    disconnect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    delete?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    update?: UserGroupUpdateWithWhereUniqueWithoutSecurity_groupInput | UserGroupUpdateWithWhereUniqueWithoutSecurity_groupInput[]
    updateMany?: UserGroupUpdateManyWithWhereWithoutSecurity_groupInput | UserGroupUpdateManyWithWhereWithoutSecurity_groupInput[]
    deleteMany?: UserGroupScalarWhereInput | UserGroupScalarWhereInput[]
  }

  export type SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_groupNestedInput = {
    create?: XOR<SecurityGroupRuleCreateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput> | SecurityGroupRuleCreateWithoutSecurity_groupInput[] | SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput | SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput[]
    upsert?: SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_groupInput | SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_groupInput[]
    createMany?: SecurityGroupRuleCreateManySecurity_groupInputEnvelope
    set?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    disconnect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    delete?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    connect?: SecurityGroupRuleWhereUniqueInput | SecurityGroupRuleWhereUniqueInput[]
    update?: SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_groupInput | SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_groupInput[]
    updateMany?: SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_groupInput | SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_groupInput[]
    deleteMany?: SecurityGroupRuleScalarWhereInput | SecurityGroupRuleScalarWhereInput[]
  }

  export type UserGroupUncheckedUpdateManyWithoutSecurity_groupNestedInput = {
    create?: XOR<UserGroupCreateWithoutSecurity_groupInput, UserGroupUncheckedCreateWithoutSecurity_groupInput> | UserGroupCreateWithoutSecurity_groupInput[] | UserGroupUncheckedCreateWithoutSecurity_groupInput[]
    connectOrCreate?: UserGroupCreateOrConnectWithoutSecurity_groupInput | UserGroupCreateOrConnectWithoutSecurity_groupInput[]
    upsert?: UserGroupUpsertWithWhereUniqueWithoutSecurity_groupInput | UserGroupUpsertWithWhereUniqueWithoutSecurity_groupInput[]
    createMany?: UserGroupCreateManySecurity_groupInputEnvelope
    set?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    disconnect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    delete?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    connect?: UserGroupWhereUniqueInput | UserGroupWhereUniqueInput[]
    update?: UserGroupUpdateWithWhereUniqueWithoutSecurity_groupInput | UserGroupUpdateWithWhereUniqueWithoutSecurity_groupInput[]
    updateMany?: UserGroupUpdateManyWithWhereWithoutSecurity_groupInput | UserGroupUpdateManyWithWhereWithoutSecurity_groupInput[]
    deleteMany?: UserGroupScalarWhereInput | UserGroupScalarWhereInput[]
  }

  export type SecurityGroupCreateNestedOneWithoutSecurityGroupRulesInput = {
    create?: XOR<SecurityGroupCreateWithoutSecurityGroupRulesInput, SecurityGroupUncheckedCreateWithoutSecurityGroupRulesInput>
    connectOrCreate?: SecurityGroupCreateOrConnectWithoutSecurityGroupRulesInput
    connect?: SecurityGroupWhereUniqueInput
  }

  export type SecurityRuleCreateNestedOneWithoutSecurityGroupRulesInput = {
    create?: XOR<SecurityRuleCreateWithoutSecurityGroupRulesInput, SecurityRuleUncheckedCreateWithoutSecurityGroupRulesInput>
    connectOrCreate?: SecurityRuleCreateOrConnectWithoutSecurityGroupRulesInput
    connect?: SecurityRuleWhereUniqueInput
  }

  export type SecurityGroupUpdateOneRequiredWithoutSecurityGroupRulesNestedInput = {
    create?: XOR<SecurityGroupCreateWithoutSecurityGroupRulesInput, SecurityGroupUncheckedCreateWithoutSecurityGroupRulesInput>
    connectOrCreate?: SecurityGroupCreateOrConnectWithoutSecurityGroupRulesInput
    upsert?: SecurityGroupUpsertWithoutSecurityGroupRulesInput
    connect?: SecurityGroupWhereUniqueInput
    update?: XOR<XOR<SecurityGroupUpdateToOneWithWhereWithoutSecurityGroupRulesInput, SecurityGroupUpdateWithoutSecurityGroupRulesInput>, SecurityGroupUncheckedUpdateWithoutSecurityGroupRulesInput>
  }

  export type SecurityRuleUpdateOneRequiredWithoutSecurityGroupRulesNestedInput = {
    create?: XOR<SecurityRuleCreateWithoutSecurityGroupRulesInput, SecurityRuleUncheckedCreateWithoutSecurityGroupRulesInput>
    connectOrCreate?: SecurityRuleCreateOrConnectWithoutSecurityGroupRulesInput
    upsert?: SecurityRuleUpsertWithoutSecurityGroupRulesInput
    connect?: SecurityRuleWhereUniqueInput
    update?: XOR<XOR<SecurityRuleUpdateToOneWithWhereWithoutSecurityGroupRulesInput, SecurityRuleUpdateWithoutSecurityGroupRulesInput>, SecurityRuleUncheckedUpdateWithoutSecurityGroupRulesInput>
  }

  export type UserCreateNestedOneWithoutUserGroupsInput = {
    create?: XOR<UserCreateWithoutUserGroupsInput, UserUncheckedCreateWithoutUserGroupsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserGroupsInput
    connect?: UserWhereUniqueInput
  }

  export type SecurityGroupCreateNestedOneWithoutUserGroupsInput = {
    create?: XOR<SecurityGroupCreateWithoutUserGroupsInput, SecurityGroupUncheckedCreateWithoutUserGroupsInput>
    connectOrCreate?: SecurityGroupCreateOrConnectWithoutUserGroupsInput
    connect?: SecurityGroupWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUserGroupsNestedInput = {
    create?: XOR<UserCreateWithoutUserGroupsInput, UserUncheckedCreateWithoutUserGroupsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserGroupsInput
    upsert?: UserUpsertWithoutUserGroupsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserGroupsInput, UserUpdateWithoutUserGroupsInput>, UserUncheckedUpdateWithoutUserGroupsInput>
  }

  export type SecurityGroupUpdateOneRequiredWithoutUserGroupsNestedInput = {
    create?: XOR<SecurityGroupCreateWithoutUserGroupsInput, SecurityGroupUncheckedCreateWithoutUserGroupsInput>
    connectOrCreate?: SecurityGroupCreateOrConnectWithoutUserGroupsInput
    upsert?: SecurityGroupUpsertWithoutUserGroupsInput
    connect?: SecurityGroupWhereUniqueInput
    update?: XOR<XOR<SecurityGroupUpdateToOneWithWhereWithoutUserGroupsInput, SecurityGroupUpdateWithoutUserGroupsInput>, SecurityGroupUncheckedUpdateWithoutUserGroupsInput>
  }

  export type DecimalFieldUpdateOperationsInput = {
    set?: Decimal | DecimalJsLike | number | string
    increment?: Decimal | DecimalJsLike | number | string
    decrement?: Decimal | DecimalJsLike | number | string
    multiply?: Decimal | DecimalJsLike | number | string
    divide?: Decimal | DecimalJsLike | number | string
  }

  export type CategoryCreateNestedOneWithoutProductsInput = {
    create?: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput
    connect?: CategoryWhereUniqueInput
  }

  export type SubcategoryCreateNestedOneWithoutProductsInput = {
    create?: XOR<SubcategoryCreateWithoutProductsInput, SubcategoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: SubcategoryCreateOrConnectWithoutProductsInput
    connect?: SubcategoryWhereUniqueInput
  }

  export type BrandCreateNestedOneWithoutProductsInput = {
    create?: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutProductsInput
    connect?: BrandWhereUniqueInput
  }

  export type SellerCreateNestedOneWithoutProductsInput = {
    create?: XOR<SellerCreateWithoutProductsInput, SellerUncheckedCreateWithoutProductsInput>
    connectOrCreate?: SellerCreateOrConnectWithoutProductsInput
    connect?: SellerWhereUniqueInput
  }

  export type ProductAttributeCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductAttributeCreateWithoutProductInput, ProductAttributeUncheckedCreateWithoutProductInput> | ProductAttributeCreateWithoutProductInput[] | ProductAttributeUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductAttributeCreateOrConnectWithoutProductInput | ProductAttributeCreateOrConnectWithoutProductInput[]
    createMany?: ProductAttributeCreateManyProductInputEnvelope
    connect?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
  }

  export type ProductVariantCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput> | ProductVariantCreateWithoutProductInput[] | ProductVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductVariantCreateOrConnectWithoutProductInput | ProductVariantCreateOrConnectWithoutProductInput[]
    createMany?: ProductVariantCreateManyProductInputEnvelope
    connect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
  }

  export type ReviewCreateNestedManyWithoutProductInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type WishlistCreateNestedManyWithoutProductInput = {
    create?: XOR<WishlistCreateWithoutProductInput, WishlistUncheckedCreateWithoutProductInput> | WishlistCreateWithoutProductInput[] | WishlistUncheckedCreateWithoutProductInput[]
    connectOrCreate?: WishlistCreateOrConnectWithoutProductInput | WishlistCreateOrConnectWithoutProductInput[]
    createMany?: WishlistCreateManyProductInputEnvelope
    connect?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
  }

  export type SpecialOfferCreateNestedOneWithoutProductsInput = {
    create?: XOR<SpecialOfferCreateWithoutProductsInput, SpecialOfferUncheckedCreateWithoutProductsInput>
    connectOrCreate?: SpecialOfferCreateOrConnectWithoutProductsInput
    connect?: SpecialOfferWhereUniqueInput
  }

  export type ProductAttributeUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductAttributeCreateWithoutProductInput, ProductAttributeUncheckedCreateWithoutProductInput> | ProductAttributeCreateWithoutProductInput[] | ProductAttributeUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductAttributeCreateOrConnectWithoutProductInput | ProductAttributeCreateOrConnectWithoutProductInput[]
    createMany?: ProductAttributeCreateManyProductInputEnvelope
    connect?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
  }

  export type ProductVariantUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput> | ProductVariantCreateWithoutProductInput[] | ProductVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductVariantCreateOrConnectWithoutProductInput | ProductVariantCreateOrConnectWithoutProductInput[]
    createMany?: ProductVariantCreateManyProductInputEnvelope
    connect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
  }

  export type ReviewUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
  }

  export type WishlistUncheckedCreateNestedManyWithoutProductInput = {
    create?: XOR<WishlistCreateWithoutProductInput, WishlistUncheckedCreateWithoutProductInput> | WishlistCreateWithoutProductInput[] | WishlistUncheckedCreateWithoutProductInput[]
    connectOrCreate?: WishlistCreateOrConnectWithoutProductInput | WishlistCreateOrConnectWithoutProductInput[]
    createMany?: WishlistCreateManyProductInputEnvelope
    connect?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
  }

  export type FloatFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type NullableDateTimeFieldUpdateOperationsInput = {
    set?: Date | string | null
  }

  export type CategoryUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutProductsInput
    upsert?: CategoryUpsertWithoutProductsInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutProductsInput, CategoryUpdateWithoutProductsInput>, CategoryUncheckedUpdateWithoutProductsInput>
  }

  export type SubcategoryUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<SubcategoryCreateWithoutProductsInput, SubcategoryUncheckedCreateWithoutProductsInput>
    connectOrCreate?: SubcategoryCreateOrConnectWithoutProductsInput
    upsert?: SubcategoryUpsertWithoutProductsInput
    connect?: SubcategoryWhereUniqueInput
    update?: XOR<XOR<SubcategoryUpdateToOneWithWhereWithoutProductsInput, SubcategoryUpdateWithoutProductsInput>, SubcategoryUncheckedUpdateWithoutProductsInput>
  }

  export type BrandUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    connectOrCreate?: BrandCreateOrConnectWithoutProductsInput
    upsert?: BrandUpsertWithoutProductsInput
    connect?: BrandWhereUniqueInput
    update?: XOR<XOR<BrandUpdateToOneWithWhereWithoutProductsInput, BrandUpdateWithoutProductsInput>, BrandUncheckedUpdateWithoutProductsInput>
  }

  export type SellerUpdateOneRequiredWithoutProductsNestedInput = {
    create?: XOR<SellerCreateWithoutProductsInput, SellerUncheckedCreateWithoutProductsInput>
    connectOrCreate?: SellerCreateOrConnectWithoutProductsInput
    upsert?: SellerUpsertWithoutProductsInput
    connect?: SellerWhereUniqueInput
    update?: XOR<XOR<SellerUpdateToOneWithWhereWithoutProductsInput, SellerUpdateWithoutProductsInput>, SellerUncheckedUpdateWithoutProductsInput>
  }

  export type ProductAttributeUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductAttributeCreateWithoutProductInput, ProductAttributeUncheckedCreateWithoutProductInput> | ProductAttributeCreateWithoutProductInput[] | ProductAttributeUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductAttributeCreateOrConnectWithoutProductInput | ProductAttributeCreateOrConnectWithoutProductInput[]
    upsert?: ProductAttributeUpsertWithWhereUniqueWithoutProductInput | ProductAttributeUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductAttributeCreateManyProductInputEnvelope
    set?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    disconnect?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    delete?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    connect?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    update?: ProductAttributeUpdateWithWhereUniqueWithoutProductInput | ProductAttributeUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductAttributeUpdateManyWithWhereWithoutProductInput | ProductAttributeUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductAttributeScalarWhereInput | ProductAttributeScalarWhereInput[]
  }

  export type ProductVariantUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput> | ProductVariantCreateWithoutProductInput[] | ProductVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductVariantCreateOrConnectWithoutProductInput | ProductVariantCreateOrConnectWithoutProductInput[]
    upsert?: ProductVariantUpsertWithWhereUniqueWithoutProductInput | ProductVariantUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductVariantCreateManyProductInputEnvelope
    set?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    disconnect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    delete?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    connect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    update?: ProductVariantUpdateWithWhereUniqueWithoutProductInput | ProductVariantUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductVariantUpdateManyWithWhereWithoutProductInput | ProductVariantUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductVariantScalarWhereInput | ProductVariantScalarWhereInput[]
  }

  export type ReviewUpdateManyWithoutProductNestedInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutProductInput | ReviewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutProductInput | ReviewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutProductInput | ReviewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type WishlistUpdateManyWithoutProductNestedInput = {
    create?: XOR<WishlistCreateWithoutProductInput, WishlistUncheckedCreateWithoutProductInput> | WishlistCreateWithoutProductInput[] | WishlistUncheckedCreateWithoutProductInput[]
    connectOrCreate?: WishlistCreateOrConnectWithoutProductInput | WishlistCreateOrConnectWithoutProductInput[]
    upsert?: WishlistUpsertWithWhereUniqueWithoutProductInput | WishlistUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: WishlistCreateManyProductInputEnvelope
    set?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    disconnect?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    delete?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    connect?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    update?: WishlistUpdateWithWhereUniqueWithoutProductInput | WishlistUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: WishlistUpdateManyWithWhereWithoutProductInput | WishlistUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: WishlistScalarWhereInput | WishlistScalarWhereInput[]
  }

  export type SpecialOfferUpdateOneWithoutProductsNestedInput = {
    create?: XOR<SpecialOfferCreateWithoutProductsInput, SpecialOfferUncheckedCreateWithoutProductsInput>
    connectOrCreate?: SpecialOfferCreateOrConnectWithoutProductsInput
    upsert?: SpecialOfferUpsertWithoutProductsInput
    disconnect?: SpecialOfferWhereInput | boolean
    delete?: SpecialOfferWhereInput | boolean
    connect?: SpecialOfferWhereUniqueInput
    update?: XOR<XOR<SpecialOfferUpdateToOneWithWhereWithoutProductsInput, SpecialOfferUpdateWithoutProductsInput>, SpecialOfferUncheckedUpdateWithoutProductsInput>
  }

  export type ProductAttributeUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductAttributeCreateWithoutProductInput, ProductAttributeUncheckedCreateWithoutProductInput> | ProductAttributeCreateWithoutProductInput[] | ProductAttributeUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductAttributeCreateOrConnectWithoutProductInput | ProductAttributeCreateOrConnectWithoutProductInput[]
    upsert?: ProductAttributeUpsertWithWhereUniqueWithoutProductInput | ProductAttributeUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductAttributeCreateManyProductInputEnvelope
    set?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    disconnect?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    delete?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    connect?: ProductAttributeWhereUniqueInput | ProductAttributeWhereUniqueInput[]
    update?: ProductAttributeUpdateWithWhereUniqueWithoutProductInput | ProductAttributeUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductAttributeUpdateManyWithWhereWithoutProductInput | ProductAttributeUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductAttributeScalarWhereInput | ProductAttributeScalarWhereInput[]
  }

  export type ProductVariantUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput> | ProductVariantCreateWithoutProductInput[] | ProductVariantUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ProductVariantCreateOrConnectWithoutProductInput | ProductVariantCreateOrConnectWithoutProductInput[]
    upsert?: ProductVariantUpsertWithWhereUniqueWithoutProductInput | ProductVariantUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ProductVariantCreateManyProductInputEnvelope
    set?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    disconnect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    delete?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    connect?: ProductVariantWhereUniqueInput | ProductVariantWhereUniqueInput[]
    update?: ProductVariantUpdateWithWhereUniqueWithoutProductInput | ProductVariantUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ProductVariantUpdateManyWithWhereWithoutProductInput | ProductVariantUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ProductVariantScalarWhereInput | ProductVariantScalarWhereInput[]
  }

  export type ReviewUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput> | ReviewCreateWithoutProductInput[] | ReviewUncheckedCreateWithoutProductInput[]
    connectOrCreate?: ReviewCreateOrConnectWithoutProductInput | ReviewCreateOrConnectWithoutProductInput[]
    upsert?: ReviewUpsertWithWhereUniqueWithoutProductInput | ReviewUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: ReviewCreateManyProductInputEnvelope
    set?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    disconnect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    delete?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    connect?: ReviewWhereUniqueInput | ReviewWhereUniqueInput[]
    update?: ReviewUpdateWithWhereUniqueWithoutProductInput | ReviewUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: ReviewUpdateManyWithWhereWithoutProductInput | ReviewUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
  }

  export type WishlistUncheckedUpdateManyWithoutProductNestedInput = {
    create?: XOR<WishlistCreateWithoutProductInput, WishlistUncheckedCreateWithoutProductInput> | WishlistCreateWithoutProductInput[] | WishlistUncheckedCreateWithoutProductInput[]
    connectOrCreate?: WishlistCreateOrConnectWithoutProductInput | WishlistCreateOrConnectWithoutProductInput[]
    upsert?: WishlistUpsertWithWhereUniqueWithoutProductInput | WishlistUpsertWithWhereUniqueWithoutProductInput[]
    createMany?: WishlistCreateManyProductInputEnvelope
    set?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    disconnect?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    delete?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    connect?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    update?: WishlistUpdateWithWhereUniqueWithoutProductInput | WishlistUpdateWithWhereUniqueWithoutProductInput[]
    updateMany?: WishlistUpdateManyWithWhereWithoutProductInput | WishlistUpdateManyWithWhereWithoutProductInput[]
    deleteMany?: WishlistScalarWhereInput | WishlistScalarWhereInput[]
  }

  export type SubcategoryCreateNestedManyWithoutCategoryInput = {
    create?: XOR<SubcategoryCreateWithoutCategoryInput, SubcategoryUncheckedCreateWithoutCategoryInput> | SubcategoryCreateWithoutCategoryInput[] | SubcategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: SubcategoryCreateOrConnectWithoutCategoryInput | SubcategoryCreateOrConnectWithoutCategoryInput[]
    createMany?: SubcategoryCreateManyCategoryInputEnvelope
    connect?: SubcategoryWhereUniqueInput | SubcategoryWhereUniqueInput[]
  }

  export type ProductCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type SubcategoryUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<SubcategoryCreateWithoutCategoryInput, SubcategoryUncheckedCreateWithoutCategoryInput> | SubcategoryCreateWithoutCategoryInput[] | SubcategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: SubcategoryCreateOrConnectWithoutCategoryInput | SubcategoryCreateOrConnectWithoutCategoryInput[]
    createMany?: SubcategoryCreateManyCategoryInputEnvelope
    connect?: SubcategoryWhereUniqueInput | SubcategoryWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutCategoryInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type SubcategoryUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<SubcategoryCreateWithoutCategoryInput, SubcategoryUncheckedCreateWithoutCategoryInput> | SubcategoryCreateWithoutCategoryInput[] | SubcategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: SubcategoryCreateOrConnectWithoutCategoryInput | SubcategoryCreateOrConnectWithoutCategoryInput[]
    upsert?: SubcategoryUpsertWithWhereUniqueWithoutCategoryInput | SubcategoryUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: SubcategoryCreateManyCategoryInputEnvelope
    set?: SubcategoryWhereUniqueInput | SubcategoryWhereUniqueInput[]
    disconnect?: SubcategoryWhereUniqueInput | SubcategoryWhereUniqueInput[]
    delete?: SubcategoryWhereUniqueInput | SubcategoryWhereUniqueInput[]
    connect?: SubcategoryWhereUniqueInput | SubcategoryWhereUniqueInput[]
    update?: SubcategoryUpdateWithWhereUniqueWithoutCategoryInput | SubcategoryUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: SubcategoryUpdateManyWithWhereWithoutCategoryInput | SubcategoryUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: SubcategoryScalarWhereInput | SubcategoryScalarWhereInput[]
  }

  export type ProductUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoryInput | ProductUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoryInput | ProductUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoryInput | ProductUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type SubcategoryUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<SubcategoryCreateWithoutCategoryInput, SubcategoryUncheckedCreateWithoutCategoryInput> | SubcategoryCreateWithoutCategoryInput[] | SubcategoryUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: SubcategoryCreateOrConnectWithoutCategoryInput | SubcategoryCreateOrConnectWithoutCategoryInput[]
    upsert?: SubcategoryUpsertWithWhereUniqueWithoutCategoryInput | SubcategoryUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: SubcategoryCreateManyCategoryInputEnvelope
    set?: SubcategoryWhereUniqueInput | SubcategoryWhereUniqueInput[]
    disconnect?: SubcategoryWhereUniqueInput | SubcategoryWhereUniqueInput[]
    delete?: SubcategoryWhereUniqueInput | SubcategoryWhereUniqueInput[]
    connect?: SubcategoryWhereUniqueInput | SubcategoryWhereUniqueInput[]
    update?: SubcategoryUpdateWithWhereUniqueWithoutCategoryInput | SubcategoryUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: SubcategoryUpdateManyWithWhereWithoutCategoryInput | SubcategoryUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: SubcategoryScalarWhereInput | SubcategoryScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutCategoryNestedInput = {
    create?: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput> | ProductCreateWithoutCategoryInput[] | ProductUncheckedCreateWithoutCategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutCategoryInput | ProductCreateOrConnectWithoutCategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutCategoryInput | ProductUpsertWithWhereUniqueWithoutCategoryInput[]
    createMany?: ProductCreateManyCategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutCategoryInput | ProductUpdateWithWhereUniqueWithoutCategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutCategoryInput | ProductUpdateManyWithWhereWithoutCategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type CategoryCreateNestedOneWithoutSubcategoriesInput = {
    create?: XOR<CategoryCreateWithoutSubcategoriesInput, CategoryUncheckedCreateWithoutSubcategoriesInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutSubcategoriesInput
    connect?: CategoryWhereUniqueInput
  }

  export type ProductCreateNestedManyWithoutSubcategoryInput = {
    create?: XOR<ProductCreateWithoutSubcategoryInput, ProductUncheckedCreateWithoutSubcategoryInput> | ProductCreateWithoutSubcategoryInput[] | ProductUncheckedCreateWithoutSubcategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSubcategoryInput | ProductCreateOrConnectWithoutSubcategoryInput[]
    createMany?: ProductCreateManySubcategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutSubcategoryInput = {
    create?: XOR<ProductCreateWithoutSubcategoryInput, ProductUncheckedCreateWithoutSubcategoryInput> | ProductCreateWithoutSubcategoryInput[] | ProductUncheckedCreateWithoutSubcategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSubcategoryInput | ProductCreateOrConnectWithoutSubcategoryInput[]
    createMany?: ProductCreateManySubcategoryInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CategoryUpdateOneRequiredWithoutSubcategoriesNestedInput = {
    create?: XOR<CategoryCreateWithoutSubcategoriesInput, CategoryUncheckedCreateWithoutSubcategoriesInput>
    connectOrCreate?: CategoryCreateOrConnectWithoutSubcategoriesInput
    upsert?: CategoryUpsertWithoutSubcategoriesInput
    connect?: CategoryWhereUniqueInput
    update?: XOR<XOR<CategoryUpdateToOneWithWhereWithoutSubcategoriesInput, CategoryUpdateWithoutSubcategoriesInput>, CategoryUncheckedUpdateWithoutSubcategoriesInput>
  }

  export type ProductUpdateManyWithoutSubcategoryNestedInput = {
    create?: XOR<ProductCreateWithoutSubcategoryInput, ProductUncheckedCreateWithoutSubcategoryInput> | ProductCreateWithoutSubcategoryInput[] | ProductUncheckedCreateWithoutSubcategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSubcategoryInput | ProductCreateOrConnectWithoutSubcategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutSubcategoryInput | ProductUpsertWithWhereUniqueWithoutSubcategoryInput[]
    createMany?: ProductCreateManySubcategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutSubcategoryInput | ProductUpdateWithWhereUniqueWithoutSubcategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutSubcategoryInput | ProductUpdateManyWithWhereWithoutSubcategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutSubcategoryNestedInput = {
    create?: XOR<ProductCreateWithoutSubcategoryInput, ProductUncheckedCreateWithoutSubcategoryInput> | ProductCreateWithoutSubcategoryInput[] | ProductUncheckedCreateWithoutSubcategoryInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSubcategoryInput | ProductCreateOrConnectWithoutSubcategoryInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutSubcategoryInput | ProductUpsertWithWhereUniqueWithoutSubcategoryInput[]
    createMany?: ProductCreateManySubcategoryInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutSubcategoryInput | ProductUpdateWithWhereUniqueWithoutSubcategoryInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutSubcategoryInput | ProductUpdateManyWithWhereWithoutSubcategoryInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductCreateNestedManyWithoutBrandInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutBrandInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBrandInput | ProductUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBrandInput | ProductUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBrandInput | ProductUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutBrandNestedInput = {
    create?: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput> | ProductCreateWithoutBrandInput[] | ProductUncheckedCreateWithoutBrandInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutBrandInput | ProductCreateOrConnectWithoutBrandInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutBrandInput | ProductUpsertWithWhereUniqueWithoutBrandInput[]
    createMany?: ProductCreateManyBrandInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutBrandInput | ProductUpdateWithWhereUniqueWithoutBrandInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutBrandInput | ProductUpdateManyWithWhereWithoutBrandInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutAttributesInput = {
    create?: XOR<ProductCreateWithoutAttributesInput, ProductUncheckedCreateWithoutAttributesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutAttributesInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutAttributesNestedInput = {
    create?: XOR<ProductCreateWithoutAttributesInput, ProductUncheckedCreateWithoutAttributesInput>
    connectOrCreate?: ProductCreateOrConnectWithoutAttributesInput
    upsert?: ProductUpsertWithoutAttributesInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutAttributesInput, ProductUpdateWithoutAttributesInput>, ProductUncheckedUpdateWithoutAttributesInput>
  }

  export type ProductCreateNestedOneWithoutVariantsInput = {
    create?: XOR<ProductCreateWithoutVariantsInput, ProductUncheckedCreateWithoutVariantsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutVariantsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutVariantsNestedInput = {
    create?: XOR<ProductCreateWithoutVariantsInput, ProductUncheckedCreateWithoutVariantsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutVariantsInput
    upsert?: ProductUpsertWithoutVariantsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutVariantsInput, ProductUpdateWithoutVariantsInput>, ProductUncheckedUpdateWithoutVariantsInput>
  }

  export type ProductCreateNestedManyWithoutSellerInput = {
    create?: XOR<ProductCreateWithoutSellerInput, ProductUncheckedCreateWithoutSellerInput> | ProductCreateWithoutSellerInput[] | ProductUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSellerInput | ProductCreateOrConnectWithoutSellerInput[]
    createMany?: ProductCreateManySellerInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CompanyCreateNestedManyWithoutSellerInput = {
    create?: XOR<CompanyCreateWithoutSellerInput, CompanyUncheckedCreateWithoutSellerInput> | CompanyCreateWithoutSellerInput[] | CompanyUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutSellerInput | CompanyCreateOrConnectWithoutSellerInput[]
    createMany?: CompanyCreateManySellerInputEnvelope
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutSellerInput = {
    create?: XOR<ProductCreateWithoutSellerInput, ProductUncheckedCreateWithoutSellerInput> | ProductCreateWithoutSellerInput[] | ProductUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSellerInput | ProductCreateOrConnectWithoutSellerInput[]
    createMany?: ProductCreateManySellerInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type CompanyUncheckedCreateNestedManyWithoutSellerInput = {
    create?: XOR<CompanyCreateWithoutSellerInput, CompanyUncheckedCreateWithoutSellerInput> | CompanyCreateWithoutSellerInput[] | CompanyUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutSellerInput | CompanyCreateOrConnectWithoutSellerInput[]
    createMany?: CompanyCreateManySellerInputEnvelope
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutSellerNestedInput = {
    create?: XOR<ProductCreateWithoutSellerInput, ProductUncheckedCreateWithoutSellerInput> | ProductCreateWithoutSellerInput[] | ProductUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSellerInput | ProductCreateOrConnectWithoutSellerInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutSellerInput | ProductUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: ProductCreateManySellerInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutSellerInput | ProductUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutSellerInput | ProductUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type CompanyUpdateManyWithoutSellerNestedInput = {
    create?: XOR<CompanyCreateWithoutSellerInput, CompanyUncheckedCreateWithoutSellerInput> | CompanyCreateWithoutSellerInput[] | CompanyUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutSellerInput | CompanyCreateOrConnectWithoutSellerInput[]
    upsert?: CompanyUpsertWithWhereUniqueWithoutSellerInput | CompanyUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: CompanyCreateManySellerInputEnvelope
    set?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    disconnect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    delete?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    update?: CompanyUpdateWithWhereUniqueWithoutSellerInput | CompanyUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: CompanyUpdateManyWithWhereWithoutSellerInput | CompanyUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutSellerNestedInput = {
    create?: XOR<ProductCreateWithoutSellerInput, ProductUncheckedCreateWithoutSellerInput> | ProductCreateWithoutSellerInput[] | ProductUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSellerInput | ProductCreateOrConnectWithoutSellerInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutSellerInput | ProductUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: ProductCreateManySellerInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutSellerInput | ProductUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutSellerInput | ProductUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type CompanyUncheckedUpdateManyWithoutSellerNestedInput = {
    create?: XOR<CompanyCreateWithoutSellerInput, CompanyUncheckedCreateWithoutSellerInput> | CompanyCreateWithoutSellerInput[] | CompanyUncheckedCreateWithoutSellerInput[]
    connectOrCreate?: CompanyCreateOrConnectWithoutSellerInput | CompanyCreateOrConnectWithoutSellerInput[]
    upsert?: CompanyUpsertWithWhereUniqueWithoutSellerInput | CompanyUpsertWithWhereUniqueWithoutSellerInput[]
    createMany?: CompanyCreateManySellerInputEnvelope
    set?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    disconnect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    delete?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    connect?: CompanyWhereUniqueInput | CompanyWhereUniqueInput[]
    update?: CompanyUpdateWithWhereUniqueWithoutSellerInput | CompanyUpdateWithWhereUniqueWithoutSellerInput[]
    updateMany?: CompanyUpdateManyWithWhereWithoutSellerInput | CompanyUpdateManyWithWhereWithoutSellerInput[]
    deleteMany?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
  }

  export type ProductCreateNestedOneWithoutReviewsInput = {
    create?: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutReviewsInput
    connect?: ProductWhereUniqueInput
  }

  export type ProductUpdateOneRequiredWithoutReviewsNestedInput = {
    create?: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
    connectOrCreate?: ProductCreateOrConnectWithoutReviewsInput
    upsert?: ProductUpsertWithoutReviewsInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutReviewsInput, ProductUpdateWithoutReviewsInput>, ProductUncheckedUpdateWithoutReviewsInput>
  }

  export type OrderCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type CustomerRefreshTokenCreateNestedManyWithoutCustomerInput = {
    create?: XOR<CustomerRefreshTokenCreateWithoutCustomerInput, CustomerRefreshTokenUncheckedCreateWithoutCustomerInput> | CustomerRefreshTokenCreateWithoutCustomerInput[] | CustomerRefreshTokenUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerRefreshTokenCreateOrConnectWithoutCustomerInput | CustomerRefreshTokenCreateOrConnectWithoutCustomerInput[]
    createMany?: CustomerRefreshTokenCreateManyCustomerInputEnvelope
    connect?: CustomerRefreshTokenWhereUniqueInput | CustomerRefreshTokenWhereUniqueInput[]
  }

  export type CustomerAddressCreateNestedManyWithoutCustomerInput = {
    create?: XOR<CustomerAddressCreateWithoutCustomerInput, CustomerAddressUncheckedCreateWithoutCustomerInput> | CustomerAddressCreateWithoutCustomerInput[] | CustomerAddressUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerAddressCreateOrConnectWithoutCustomerInput | CustomerAddressCreateOrConnectWithoutCustomerInput[]
    createMany?: CustomerAddressCreateManyCustomerInputEnvelope
    connect?: CustomerAddressWhereUniqueInput | CustomerAddressWhereUniqueInput[]
  }

  export type WishlistCreateNestedManyWithoutUserInput = {
    create?: XOR<WishlistCreateWithoutUserInput, WishlistUncheckedCreateWithoutUserInput> | WishlistCreateWithoutUserInput[] | WishlistUncheckedCreateWithoutUserInput[]
    connectOrCreate?: WishlistCreateOrConnectWithoutUserInput | WishlistCreateOrConnectWithoutUserInput[]
    createMany?: WishlistCreateManyUserInputEnvelope
    connect?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
  }

  export type PendingOrderCreateNestedManyWithoutCustomerInput = {
    create?: XOR<PendingOrderCreateWithoutCustomerInput, PendingOrderUncheckedCreateWithoutCustomerInput> | PendingOrderCreateWithoutCustomerInput[] | PendingOrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PendingOrderCreateOrConnectWithoutCustomerInput | PendingOrderCreateOrConnectWithoutCustomerInput[]
    createMany?: PendingOrderCreateManyCustomerInputEnvelope
    connect?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type CustomerRefreshTokenUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<CustomerRefreshTokenCreateWithoutCustomerInput, CustomerRefreshTokenUncheckedCreateWithoutCustomerInput> | CustomerRefreshTokenCreateWithoutCustomerInput[] | CustomerRefreshTokenUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerRefreshTokenCreateOrConnectWithoutCustomerInput | CustomerRefreshTokenCreateOrConnectWithoutCustomerInput[]
    createMany?: CustomerRefreshTokenCreateManyCustomerInputEnvelope
    connect?: CustomerRefreshTokenWhereUniqueInput | CustomerRefreshTokenWhereUniqueInput[]
  }

  export type CustomerAddressUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<CustomerAddressCreateWithoutCustomerInput, CustomerAddressUncheckedCreateWithoutCustomerInput> | CustomerAddressCreateWithoutCustomerInput[] | CustomerAddressUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerAddressCreateOrConnectWithoutCustomerInput | CustomerAddressCreateOrConnectWithoutCustomerInput[]
    createMany?: CustomerAddressCreateManyCustomerInputEnvelope
    connect?: CustomerAddressWhereUniqueInput | CustomerAddressWhereUniqueInput[]
  }

  export type WishlistUncheckedCreateNestedManyWithoutUserInput = {
    create?: XOR<WishlistCreateWithoutUserInput, WishlistUncheckedCreateWithoutUserInput> | WishlistCreateWithoutUserInput[] | WishlistUncheckedCreateWithoutUserInput[]
    connectOrCreate?: WishlistCreateOrConnectWithoutUserInput | WishlistCreateOrConnectWithoutUserInput[]
    createMany?: WishlistCreateManyUserInputEnvelope
    connect?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
  }

  export type PendingOrderUncheckedCreateNestedManyWithoutCustomerInput = {
    create?: XOR<PendingOrderCreateWithoutCustomerInput, PendingOrderUncheckedCreateWithoutCustomerInput> | PendingOrderCreateWithoutCustomerInput[] | PendingOrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PendingOrderCreateOrConnectWithoutCustomerInput | PendingOrderCreateOrConnectWithoutCustomerInput[]
    createMany?: PendingOrderCreateManyCustomerInputEnvelope
    connect?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
  }

  export type OrderUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type CustomerRefreshTokenUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<CustomerRefreshTokenCreateWithoutCustomerInput, CustomerRefreshTokenUncheckedCreateWithoutCustomerInput> | CustomerRefreshTokenCreateWithoutCustomerInput[] | CustomerRefreshTokenUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerRefreshTokenCreateOrConnectWithoutCustomerInput | CustomerRefreshTokenCreateOrConnectWithoutCustomerInput[]
    upsert?: CustomerRefreshTokenUpsertWithWhereUniqueWithoutCustomerInput | CustomerRefreshTokenUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: CustomerRefreshTokenCreateManyCustomerInputEnvelope
    set?: CustomerRefreshTokenWhereUniqueInput | CustomerRefreshTokenWhereUniqueInput[]
    disconnect?: CustomerRefreshTokenWhereUniqueInput | CustomerRefreshTokenWhereUniqueInput[]
    delete?: CustomerRefreshTokenWhereUniqueInput | CustomerRefreshTokenWhereUniqueInput[]
    connect?: CustomerRefreshTokenWhereUniqueInput | CustomerRefreshTokenWhereUniqueInput[]
    update?: CustomerRefreshTokenUpdateWithWhereUniqueWithoutCustomerInput | CustomerRefreshTokenUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: CustomerRefreshTokenUpdateManyWithWhereWithoutCustomerInput | CustomerRefreshTokenUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: CustomerRefreshTokenScalarWhereInput | CustomerRefreshTokenScalarWhereInput[]
  }

  export type CustomerAddressUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<CustomerAddressCreateWithoutCustomerInput, CustomerAddressUncheckedCreateWithoutCustomerInput> | CustomerAddressCreateWithoutCustomerInput[] | CustomerAddressUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerAddressCreateOrConnectWithoutCustomerInput | CustomerAddressCreateOrConnectWithoutCustomerInput[]
    upsert?: CustomerAddressUpsertWithWhereUniqueWithoutCustomerInput | CustomerAddressUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: CustomerAddressCreateManyCustomerInputEnvelope
    set?: CustomerAddressWhereUniqueInput | CustomerAddressWhereUniqueInput[]
    disconnect?: CustomerAddressWhereUniqueInput | CustomerAddressWhereUniqueInput[]
    delete?: CustomerAddressWhereUniqueInput | CustomerAddressWhereUniqueInput[]
    connect?: CustomerAddressWhereUniqueInput | CustomerAddressWhereUniqueInput[]
    update?: CustomerAddressUpdateWithWhereUniqueWithoutCustomerInput | CustomerAddressUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: CustomerAddressUpdateManyWithWhereWithoutCustomerInput | CustomerAddressUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: CustomerAddressScalarWhereInput | CustomerAddressScalarWhereInput[]
  }

  export type WishlistUpdateManyWithoutUserNestedInput = {
    create?: XOR<WishlistCreateWithoutUserInput, WishlistUncheckedCreateWithoutUserInput> | WishlistCreateWithoutUserInput[] | WishlistUncheckedCreateWithoutUserInput[]
    connectOrCreate?: WishlistCreateOrConnectWithoutUserInput | WishlistCreateOrConnectWithoutUserInput[]
    upsert?: WishlistUpsertWithWhereUniqueWithoutUserInput | WishlistUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: WishlistCreateManyUserInputEnvelope
    set?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    disconnect?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    delete?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    connect?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    update?: WishlistUpdateWithWhereUniqueWithoutUserInput | WishlistUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: WishlistUpdateManyWithWhereWithoutUserInput | WishlistUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: WishlistScalarWhereInput | WishlistScalarWhereInput[]
  }

  export type PendingOrderUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<PendingOrderCreateWithoutCustomerInput, PendingOrderUncheckedCreateWithoutCustomerInput> | PendingOrderCreateWithoutCustomerInput[] | PendingOrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PendingOrderCreateOrConnectWithoutCustomerInput | PendingOrderCreateOrConnectWithoutCustomerInput[]
    upsert?: PendingOrderUpsertWithWhereUniqueWithoutCustomerInput | PendingOrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: PendingOrderCreateManyCustomerInputEnvelope
    set?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    disconnect?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    delete?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    connect?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    update?: PendingOrderUpdateWithWhereUniqueWithoutCustomerInput | PendingOrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: PendingOrderUpdateManyWithWhereWithoutCustomerInput | PendingOrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: PendingOrderScalarWhereInput | PendingOrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput> | OrderCreateWithoutCustomerInput[] | OrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCustomerInput | OrderCreateOrConnectWithoutCustomerInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput | OrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: OrderCreateManyCustomerInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCustomerInput | OrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCustomerInput | OrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type CustomerRefreshTokenUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<CustomerRefreshTokenCreateWithoutCustomerInput, CustomerRefreshTokenUncheckedCreateWithoutCustomerInput> | CustomerRefreshTokenCreateWithoutCustomerInput[] | CustomerRefreshTokenUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerRefreshTokenCreateOrConnectWithoutCustomerInput | CustomerRefreshTokenCreateOrConnectWithoutCustomerInput[]
    upsert?: CustomerRefreshTokenUpsertWithWhereUniqueWithoutCustomerInput | CustomerRefreshTokenUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: CustomerRefreshTokenCreateManyCustomerInputEnvelope
    set?: CustomerRefreshTokenWhereUniqueInput | CustomerRefreshTokenWhereUniqueInput[]
    disconnect?: CustomerRefreshTokenWhereUniqueInput | CustomerRefreshTokenWhereUniqueInput[]
    delete?: CustomerRefreshTokenWhereUniqueInput | CustomerRefreshTokenWhereUniqueInput[]
    connect?: CustomerRefreshTokenWhereUniqueInput | CustomerRefreshTokenWhereUniqueInput[]
    update?: CustomerRefreshTokenUpdateWithWhereUniqueWithoutCustomerInput | CustomerRefreshTokenUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: CustomerRefreshTokenUpdateManyWithWhereWithoutCustomerInput | CustomerRefreshTokenUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: CustomerRefreshTokenScalarWhereInput | CustomerRefreshTokenScalarWhereInput[]
  }

  export type CustomerAddressUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<CustomerAddressCreateWithoutCustomerInput, CustomerAddressUncheckedCreateWithoutCustomerInput> | CustomerAddressCreateWithoutCustomerInput[] | CustomerAddressUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: CustomerAddressCreateOrConnectWithoutCustomerInput | CustomerAddressCreateOrConnectWithoutCustomerInput[]
    upsert?: CustomerAddressUpsertWithWhereUniqueWithoutCustomerInput | CustomerAddressUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: CustomerAddressCreateManyCustomerInputEnvelope
    set?: CustomerAddressWhereUniqueInput | CustomerAddressWhereUniqueInput[]
    disconnect?: CustomerAddressWhereUniqueInput | CustomerAddressWhereUniqueInput[]
    delete?: CustomerAddressWhereUniqueInput | CustomerAddressWhereUniqueInput[]
    connect?: CustomerAddressWhereUniqueInput | CustomerAddressWhereUniqueInput[]
    update?: CustomerAddressUpdateWithWhereUniqueWithoutCustomerInput | CustomerAddressUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: CustomerAddressUpdateManyWithWhereWithoutCustomerInput | CustomerAddressUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: CustomerAddressScalarWhereInput | CustomerAddressScalarWhereInput[]
  }

  export type WishlistUncheckedUpdateManyWithoutUserNestedInput = {
    create?: XOR<WishlistCreateWithoutUserInput, WishlistUncheckedCreateWithoutUserInput> | WishlistCreateWithoutUserInput[] | WishlistUncheckedCreateWithoutUserInput[]
    connectOrCreate?: WishlistCreateOrConnectWithoutUserInput | WishlistCreateOrConnectWithoutUserInput[]
    upsert?: WishlistUpsertWithWhereUniqueWithoutUserInput | WishlistUpsertWithWhereUniqueWithoutUserInput[]
    createMany?: WishlistCreateManyUserInputEnvelope
    set?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    disconnect?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    delete?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    connect?: WishlistWhereUniqueInput | WishlistWhereUniqueInput[]
    update?: WishlistUpdateWithWhereUniqueWithoutUserInput | WishlistUpdateWithWhereUniqueWithoutUserInput[]
    updateMany?: WishlistUpdateManyWithWhereWithoutUserInput | WishlistUpdateManyWithWhereWithoutUserInput[]
    deleteMany?: WishlistScalarWhereInput | WishlistScalarWhereInput[]
  }

  export type PendingOrderUncheckedUpdateManyWithoutCustomerNestedInput = {
    create?: XOR<PendingOrderCreateWithoutCustomerInput, PendingOrderUncheckedCreateWithoutCustomerInput> | PendingOrderCreateWithoutCustomerInput[] | PendingOrderUncheckedCreateWithoutCustomerInput[]
    connectOrCreate?: PendingOrderCreateOrConnectWithoutCustomerInput | PendingOrderCreateOrConnectWithoutCustomerInput[]
    upsert?: PendingOrderUpsertWithWhereUniqueWithoutCustomerInput | PendingOrderUpsertWithWhereUniqueWithoutCustomerInput[]
    createMany?: PendingOrderCreateManyCustomerInputEnvelope
    set?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    disconnect?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    delete?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    connect?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    update?: PendingOrderUpdateWithWhereUniqueWithoutCustomerInput | PendingOrderUpdateWithWhereUniqueWithoutCustomerInput[]
    updateMany?: PendingOrderUpdateManyWithWhereWithoutCustomerInput | PendingOrderUpdateManyWithWhereWithoutCustomerInput[]
    deleteMany?: PendingOrderScalarWhereInput | PendingOrderScalarWhereInput[]
  }

  export type CustomerCreateNestedOneWithoutRefresh_tokensInput = {
    create?: XOR<CustomerCreateWithoutRefresh_tokensInput, CustomerUncheckedCreateWithoutRefresh_tokensInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutRefresh_tokensInput
    connect?: CustomerWhereUniqueInput
  }

  export type CustomerUpdateOneRequiredWithoutRefresh_tokensNestedInput = {
    create?: XOR<CustomerCreateWithoutRefresh_tokensInput, CustomerUncheckedCreateWithoutRefresh_tokensInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutRefresh_tokensInput
    upsert?: CustomerUpsertWithoutRefresh_tokensInput
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutRefresh_tokensInput, CustomerUpdateWithoutRefresh_tokensInput>, CustomerUncheckedUpdateWithoutRefresh_tokensInput>
  }

  export type OrderItemCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type CustomerCreateNestedOneWithoutOrdersInput = {
    create?: XOR<CustomerCreateWithoutOrdersInput, CustomerUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutOrdersInput
    connect?: CustomerWhereUniqueInput
  }

  export type PaymentTransactionCreateNestedManyWithoutOrderInput = {
    create?: XOR<PaymentTransactionCreateWithoutOrderInput, PaymentTransactionUncheckedCreateWithoutOrderInput> | PaymentTransactionCreateWithoutOrderInput[] | PaymentTransactionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: PaymentTransactionCreateOrConnectWithoutOrderInput | PaymentTransactionCreateOrConnectWithoutOrderInput[]
    createMany?: PaymentTransactionCreateManyOrderInputEnvelope
    connect?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
  }

  export type CouponCreateNestedOneWithoutOrderInput = {
    create?: XOR<CouponCreateWithoutOrderInput, CouponUncheckedCreateWithoutOrderInput>
    connectOrCreate?: CouponCreateOrConnectWithoutOrderInput
    connect?: CouponWhereUniqueInput
  }

  export type OrderItemUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
  }

  export type PaymentTransactionUncheckedCreateNestedManyWithoutOrderInput = {
    create?: XOR<PaymentTransactionCreateWithoutOrderInput, PaymentTransactionUncheckedCreateWithoutOrderInput> | PaymentTransactionCreateWithoutOrderInput[] | PaymentTransactionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: PaymentTransactionCreateOrConnectWithoutOrderInput | PaymentTransactionCreateOrConnectWithoutOrderInput[]
    createMany?: PaymentTransactionCreateManyOrderInputEnvelope
    connect?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
  }

  export type EnumOrderStatusFieldUpdateOperationsInput = {
    set?: $Enums.OrderStatus
  }

  export type EnumPaymentStatusFieldUpdateOperationsInput = {
    set?: $Enums.PaymentStatus
  }

  export type OrderItemUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type CustomerUpdateOneWithoutOrdersNestedInput = {
    create?: XOR<CustomerCreateWithoutOrdersInput, CustomerUncheckedCreateWithoutOrdersInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutOrdersInput
    upsert?: CustomerUpsertWithoutOrdersInput
    disconnect?: CustomerWhereInput | boolean
    delete?: CustomerWhereInput | boolean
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutOrdersInput, CustomerUpdateWithoutOrdersInput>, CustomerUncheckedUpdateWithoutOrdersInput>
  }

  export type PaymentTransactionUpdateManyWithoutOrderNestedInput = {
    create?: XOR<PaymentTransactionCreateWithoutOrderInput, PaymentTransactionUncheckedCreateWithoutOrderInput> | PaymentTransactionCreateWithoutOrderInput[] | PaymentTransactionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: PaymentTransactionCreateOrConnectWithoutOrderInput | PaymentTransactionCreateOrConnectWithoutOrderInput[]
    upsert?: PaymentTransactionUpsertWithWhereUniqueWithoutOrderInput | PaymentTransactionUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: PaymentTransactionCreateManyOrderInputEnvelope
    set?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    disconnect?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    delete?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    connect?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    update?: PaymentTransactionUpdateWithWhereUniqueWithoutOrderInput | PaymentTransactionUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: PaymentTransactionUpdateManyWithWhereWithoutOrderInput | PaymentTransactionUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: PaymentTransactionScalarWhereInput | PaymentTransactionScalarWhereInput[]
  }

  export type CouponUpdateOneWithoutOrderNestedInput = {
    create?: XOR<CouponCreateWithoutOrderInput, CouponUncheckedCreateWithoutOrderInput>
    connectOrCreate?: CouponCreateOrConnectWithoutOrderInput
    upsert?: CouponUpsertWithoutOrderInput
    disconnect?: CouponWhereInput | boolean
    delete?: CouponWhereInput | boolean
    connect?: CouponWhereUniqueInput
    update?: XOR<XOR<CouponUpdateToOneWithWhereWithoutOrderInput, CouponUpdateWithoutOrderInput>, CouponUncheckedUpdateWithoutOrderInput>
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput> | OrderItemCreateWithoutOrderInput[] | OrderItemUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: OrderItemCreateOrConnectWithoutOrderInput | OrderItemCreateOrConnectWithoutOrderInput[]
    upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput | OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: OrderItemCreateManyOrderInputEnvelope
    set?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    disconnect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    delete?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    connect?: OrderItemWhereUniqueInput | OrderItemWhereUniqueInput[]
    update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput | OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: OrderItemUpdateManyWithWhereWithoutOrderInput | OrderItemUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
  }

  export type PaymentTransactionUncheckedUpdateManyWithoutOrderNestedInput = {
    create?: XOR<PaymentTransactionCreateWithoutOrderInput, PaymentTransactionUncheckedCreateWithoutOrderInput> | PaymentTransactionCreateWithoutOrderInput[] | PaymentTransactionUncheckedCreateWithoutOrderInput[]
    connectOrCreate?: PaymentTransactionCreateOrConnectWithoutOrderInput | PaymentTransactionCreateOrConnectWithoutOrderInput[]
    upsert?: PaymentTransactionUpsertWithWhereUniqueWithoutOrderInput | PaymentTransactionUpsertWithWhereUniqueWithoutOrderInput[]
    createMany?: PaymentTransactionCreateManyOrderInputEnvelope
    set?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    disconnect?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    delete?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    connect?: PaymentTransactionWhereUniqueInput | PaymentTransactionWhereUniqueInput[]
    update?: PaymentTransactionUpdateWithWhereUniqueWithoutOrderInput | PaymentTransactionUpdateWithWhereUniqueWithoutOrderInput[]
    updateMany?: PaymentTransactionUpdateManyWithWhereWithoutOrderInput | PaymentTransactionUpdateManyWithWhereWithoutOrderInput[]
    deleteMany?: PaymentTransactionScalarWhereInput | PaymentTransactionScalarWhereInput[]
  }

  export type OrderCreateNestedOneWithoutOrderItemsInput = {
    create?: XOR<OrderCreateWithoutOrderItemsInput, OrderUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderItemsInput
    connect?: OrderWhereUniqueInput
  }

  export type OrderUpdateOneRequiredWithoutOrderItemsNestedInput = {
    create?: XOR<OrderCreateWithoutOrderItemsInput, OrderUncheckedCreateWithoutOrderItemsInput>
    connectOrCreate?: OrderCreateOrConnectWithoutOrderItemsInput
    upsert?: OrderUpsertWithoutOrderItemsInput
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutOrderItemsInput, OrderUpdateWithoutOrderItemsInput>, OrderUncheckedUpdateWithoutOrderItemsInput>
  }

  export type EnumMovementTypeFieldUpdateOperationsInput = {
    set?: $Enums.MovementType
  }

  export type UserCreateNestedOneWithoutUserSettingsInput = {
    create?: XOR<UserCreateWithoutUserSettingsInput, UserUncheckedCreateWithoutUserSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserSettingsInput
    connect?: UserWhereUniqueInput
  }

  export type UserUpdateOneRequiredWithoutUserSettingsNestedInput = {
    create?: XOR<UserCreateWithoutUserSettingsInput, UserUncheckedCreateWithoutUserSettingsInput>
    connectOrCreate?: UserCreateOrConnectWithoutUserSettingsInput
    upsert?: UserUpsertWithoutUserSettingsInput
    connect?: UserWhereUniqueInput
    update?: XOR<XOR<UserUpdateToOneWithWhereWithoutUserSettingsInput, UserUpdateWithoutUserSettingsInput>, UserUncheckedUpdateWithoutUserSettingsInput>
  }

  export type CustomerCreateNestedOneWithoutAddressesInput = {
    create?: XOR<CustomerCreateWithoutAddressesInput, CustomerUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutAddressesInput
    connect?: CustomerWhereUniqueInput
  }

  export type CustomerUpdateOneWithoutAddressesNestedInput = {
    create?: XOR<CustomerCreateWithoutAddressesInput, CustomerUncheckedCreateWithoutAddressesInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutAddressesInput
    upsert?: CustomerUpsertWithoutAddressesInput
    disconnect?: CustomerWhereInput | boolean
    delete?: CustomerWhereInput | boolean
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutAddressesInput, CustomerUpdateWithoutAddressesInput>, CustomerUncheckedUpdateWithoutAddressesInput>
  }

  export type CustomerCreateNestedOneWithoutPendingOrderInput = {
    create?: XOR<CustomerCreateWithoutPendingOrderInput, CustomerUncheckedCreateWithoutPendingOrderInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutPendingOrderInput
    connect?: CustomerWhereUniqueInput
  }

  export type CouponCreateNestedOneWithoutPendingOrderInput = {
    create?: XOR<CouponCreateWithoutPendingOrderInput, CouponUncheckedCreateWithoutPendingOrderInput>
    connectOrCreate?: CouponCreateOrConnectWithoutPendingOrderInput
    connect?: CouponWhereUniqueInput
  }

  export type CustomerUpdateOneWithoutPendingOrderNestedInput = {
    create?: XOR<CustomerCreateWithoutPendingOrderInput, CustomerUncheckedCreateWithoutPendingOrderInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutPendingOrderInput
    upsert?: CustomerUpsertWithoutPendingOrderInput
    disconnect?: CustomerWhereInput | boolean
    delete?: CustomerWhereInput | boolean
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutPendingOrderInput, CustomerUpdateWithoutPendingOrderInput>, CustomerUncheckedUpdateWithoutPendingOrderInput>
  }

  export type CouponUpdateOneWithoutPendingOrderNestedInput = {
    create?: XOR<CouponCreateWithoutPendingOrderInput, CouponUncheckedCreateWithoutPendingOrderInput>
    connectOrCreate?: CouponCreateOrConnectWithoutPendingOrderInput
    upsert?: CouponUpsertWithoutPendingOrderInput
    disconnect?: CouponWhereInput | boolean
    delete?: CouponWhereInput | boolean
    connect?: CouponWhereUniqueInput
    update?: XOR<XOR<CouponUpdateToOneWithWhereWithoutPendingOrderInput, CouponUpdateWithoutPendingOrderInput>, CouponUncheckedUpdateWithoutPendingOrderInput>
  }

  export type OrderCreateNestedOneWithoutPaymentTransactionInput = {
    create?: XOR<OrderCreateWithoutPaymentTransactionInput, OrderUncheckedCreateWithoutPaymentTransactionInput>
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentTransactionInput
    connect?: OrderWhereUniqueInput
  }

  export type OrderUpdateOneWithoutPaymentTransactionNestedInput = {
    create?: XOR<OrderCreateWithoutPaymentTransactionInput, OrderUncheckedCreateWithoutPaymentTransactionInput>
    connectOrCreate?: OrderCreateOrConnectWithoutPaymentTransactionInput
    upsert?: OrderUpsertWithoutPaymentTransactionInput
    disconnect?: OrderWhereInput | boolean
    delete?: OrderWhereInput | boolean
    connect?: OrderWhereUniqueInput
    update?: XOR<XOR<OrderUpdateToOneWithWhereWithoutPaymentTransactionInput, OrderUpdateWithoutPaymentTransactionInput>, OrderUncheckedUpdateWithoutPaymentTransactionInput>
  }

  export type CustomerCreateNestedOneWithoutWishlistInput = {
    create?: XOR<CustomerCreateWithoutWishlistInput, CustomerUncheckedCreateWithoutWishlistInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutWishlistInput
    connect?: CustomerWhereUniqueInput
  }

  export type ProductCreateNestedOneWithoutWishlistInput = {
    create?: XOR<ProductCreateWithoutWishlistInput, ProductUncheckedCreateWithoutWishlistInput>
    connectOrCreate?: ProductCreateOrConnectWithoutWishlistInput
    connect?: ProductWhereUniqueInput
  }

  export type CustomerUpdateOneRequiredWithoutWishlistNestedInput = {
    create?: XOR<CustomerCreateWithoutWishlistInput, CustomerUncheckedCreateWithoutWishlistInput>
    connectOrCreate?: CustomerCreateOrConnectWithoutWishlistInput
    upsert?: CustomerUpsertWithoutWishlistInput
    connect?: CustomerWhereUniqueInput
    update?: XOR<XOR<CustomerUpdateToOneWithWhereWithoutWishlistInput, CustomerUpdateWithoutWishlistInput>, CustomerUncheckedUpdateWithoutWishlistInput>
  }

  export type ProductUpdateOneRequiredWithoutWishlistNestedInput = {
    create?: XOR<ProductCreateWithoutWishlistInput, ProductUncheckedCreateWithoutWishlistInput>
    connectOrCreate?: ProductCreateOrConnectWithoutWishlistInput
    upsert?: ProductUpsertWithoutWishlistInput
    connect?: ProductWhereUniqueInput
    update?: XOR<XOR<ProductUpdateToOneWithWhereWithoutWishlistInput, ProductUpdateWithoutWishlistInput>, ProductUncheckedUpdateWithoutWishlistInput>
  }

  export type ProductCreateNestedManyWithoutSpecialOfferInput = {
    create?: XOR<ProductCreateWithoutSpecialOfferInput, ProductUncheckedCreateWithoutSpecialOfferInput> | ProductCreateWithoutSpecialOfferInput[] | ProductUncheckedCreateWithoutSpecialOfferInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSpecialOfferInput | ProductCreateOrConnectWithoutSpecialOfferInput[]
    createMany?: ProductCreateManySpecialOfferInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUncheckedCreateNestedManyWithoutSpecialOfferInput = {
    create?: XOR<ProductCreateWithoutSpecialOfferInput, ProductUncheckedCreateWithoutSpecialOfferInput> | ProductCreateWithoutSpecialOfferInput[] | ProductUncheckedCreateWithoutSpecialOfferInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSpecialOfferInput | ProductCreateOrConnectWithoutSpecialOfferInput[]
    createMany?: ProductCreateManySpecialOfferInputEnvelope
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
  }

  export type ProductUpdateManyWithoutSpecialOfferNestedInput = {
    create?: XOR<ProductCreateWithoutSpecialOfferInput, ProductUncheckedCreateWithoutSpecialOfferInput> | ProductCreateWithoutSpecialOfferInput[] | ProductUncheckedCreateWithoutSpecialOfferInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSpecialOfferInput | ProductCreateOrConnectWithoutSpecialOfferInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutSpecialOfferInput | ProductUpsertWithWhereUniqueWithoutSpecialOfferInput[]
    createMany?: ProductCreateManySpecialOfferInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutSpecialOfferInput | ProductUpdateWithWhereUniqueWithoutSpecialOfferInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutSpecialOfferInput | ProductUpdateManyWithWhereWithoutSpecialOfferInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type ProductUncheckedUpdateManyWithoutSpecialOfferNestedInput = {
    create?: XOR<ProductCreateWithoutSpecialOfferInput, ProductUncheckedCreateWithoutSpecialOfferInput> | ProductCreateWithoutSpecialOfferInput[] | ProductUncheckedCreateWithoutSpecialOfferInput[]
    connectOrCreate?: ProductCreateOrConnectWithoutSpecialOfferInput | ProductCreateOrConnectWithoutSpecialOfferInput[]
    upsert?: ProductUpsertWithWhereUniqueWithoutSpecialOfferInput | ProductUpsertWithWhereUniqueWithoutSpecialOfferInput[]
    createMany?: ProductCreateManySpecialOfferInputEnvelope
    set?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    disconnect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    delete?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    connect?: ProductWhereUniqueInput | ProductWhereUniqueInput[]
    update?: ProductUpdateWithWhereUniqueWithoutSpecialOfferInput | ProductUpdateWithWhereUniqueWithoutSpecialOfferInput[]
    updateMany?: ProductUpdateManyWithWhereWithoutSpecialOfferInput | ProductUpdateManyWithWhereWithoutSpecialOfferInput[]
    deleteMany?: ProductScalarWhereInput | ProductScalarWhereInput[]
  }

  export type OrderCreateNestedManyWithoutCouponInput = {
    create?: XOR<OrderCreateWithoutCouponInput, OrderUncheckedCreateWithoutCouponInput> | OrderCreateWithoutCouponInput[] | OrderUncheckedCreateWithoutCouponInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCouponInput | OrderCreateOrConnectWithoutCouponInput[]
    createMany?: OrderCreateManyCouponInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type PendingOrderCreateNestedManyWithoutCouponInput = {
    create?: XOR<PendingOrderCreateWithoutCouponInput, PendingOrderUncheckedCreateWithoutCouponInput> | PendingOrderCreateWithoutCouponInput[] | PendingOrderUncheckedCreateWithoutCouponInput[]
    connectOrCreate?: PendingOrderCreateOrConnectWithoutCouponInput | PendingOrderCreateOrConnectWithoutCouponInput[]
    createMany?: PendingOrderCreateManyCouponInputEnvelope
    connect?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
  }

  export type OrderUncheckedCreateNestedManyWithoutCouponInput = {
    create?: XOR<OrderCreateWithoutCouponInput, OrderUncheckedCreateWithoutCouponInput> | OrderCreateWithoutCouponInput[] | OrderUncheckedCreateWithoutCouponInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCouponInput | OrderCreateOrConnectWithoutCouponInput[]
    createMany?: OrderCreateManyCouponInputEnvelope
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
  }

  export type PendingOrderUncheckedCreateNestedManyWithoutCouponInput = {
    create?: XOR<PendingOrderCreateWithoutCouponInput, PendingOrderUncheckedCreateWithoutCouponInput> | PendingOrderCreateWithoutCouponInput[] | PendingOrderUncheckedCreateWithoutCouponInput[]
    connectOrCreate?: PendingOrderCreateOrConnectWithoutCouponInput | PendingOrderCreateOrConnectWithoutCouponInput[]
    createMany?: PendingOrderCreateManyCouponInputEnvelope
    connect?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
  }

  export type OrderUpdateManyWithoutCouponNestedInput = {
    create?: XOR<OrderCreateWithoutCouponInput, OrderUncheckedCreateWithoutCouponInput> | OrderCreateWithoutCouponInput[] | OrderUncheckedCreateWithoutCouponInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCouponInput | OrderCreateOrConnectWithoutCouponInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCouponInput | OrderUpsertWithWhereUniqueWithoutCouponInput[]
    createMany?: OrderCreateManyCouponInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCouponInput | OrderUpdateWithWhereUniqueWithoutCouponInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCouponInput | OrderUpdateManyWithWhereWithoutCouponInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type PendingOrderUpdateManyWithoutCouponNestedInput = {
    create?: XOR<PendingOrderCreateWithoutCouponInput, PendingOrderUncheckedCreateWithoutCouponInput> | PendingOrderCreateWithoutCouponInput[] | PendingOrderUncheckedCreateWithoutCouponInput[]
    connectOrCreate?: PendingOrderCreateOrConnectWithoutCouponInput | PendingOrderCreateOrConnectWithoutCouponInput[]
    upsert?: PendingOrderUpsertWithWhereUniqueWithoutCouponInput | PendingOrderUpsertWithWhereUniqueWithoutCouponInput[]
    createMany?: PendingOrderCreateManyCouponInputEnvelope
    set?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    disconnect?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    delete?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    connect?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    update?: PendingOrderUpdateWithWhereUniqueWithoutCouponInput | PendingOrderUpdateWithWhereUniqueWithoutCouponInput[]
    updateMany?: PendingOrderUpdateManyWithWhereWithoutCouponInput | PendingOrderUpdateManyWithWhereWithoutCouponInput[]
    deleteMany?: PendingOrderScalarWhereInput | PendingOrderScalarWhereInput[]
  }

  export type OrderUncheckedUpdateManyWithoutCouponNestedInput = {
    create?: XOR<OrderCreateWithoutCouponInput, OrderUncheckedCreateWithoutCouponInput> | OrderCreateWithoutCouponInput[] | OrderUncheckedCreateWithoutCouponInput[]
    connectOrCreate?: OrderCreateOrConnectWithoutCouponInput | OrderCreateOrConnectWithoutCouponInput[]
    upsert?: OrderUpsertWithWhereUniqueWithoutCouponInput | OrderUpsertWithWhereUniqueWithoutCouponInput[]
    createMany?: OrderCreateManyCouponInputEnvelope
    set?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    disconnect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    delete?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    connect?: OrderWhereUniqueInput | OrderWhereUniqueInput[]
    update?: OrderUpdateWithWhereUniqueWithoutCouponInput | OrderUpdateWithWhereUniqueWithoutCouponInput[]
    updateMany?: OrderUpdateManyWithWhereWithoutCouponInput | OrderUpdateManyWithWhereWithoutCouponInput[]
    deleteMany?: OrderScalarWhereInput | OrderScalarWhereInput[]
  }

  export type PendingOrderUncheckedUpdateManyWithoutCouponNestedInput = {
    create?: XOR<PendingOrderCreateWithoutCouponInput, PendingOrderUncheckedCreateWithoutCouponInput> | PendingOrderCreateWithoutCouponInput[] | PendingOrderUncheckedCreateWithoutCouponInput[]
    connectOrCreate?: PendingOrderCreateOrConnectWithoutCouponInput | PendingOrderCreateOrConnectWithoutCouponInput[]
    upsert?: PendingOrderUpsertWithWhereUniqueWithoutCouponInput | PendingOrderUpsertWithWhereUniqueWithoutCouponInput[]
    createMany?: PendingOrderCreateManyCouponInputEnvelope
    set?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    disconnect?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    delete?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    connect?: PendingOrderWhereUniqueInput | PendingOrderWhereUniqueInput[]
    update?: PendingOrderUpdateWithWhereUniqueWithoutCouponInput | PendingOrderUpdateWithWhereUniqueWithoutCouponInput[]
    updateMany?: PendingOrderUpdateManyWithWhereWithoutCouponInput | PendingOrderUpdateManyWithWhereWithoutCouponInput[]
    deleteMany?: PendingOrderScalarWhereInput | PendingOrderScalarWhereInput[]
  }

  export type PageSectionCreateNestedManyWithoutPageInput = {
    create?: XOR<PageSectionCreateWithoutPageInput, PageSectionUncheckedCreateWithoutPageInput> | PageSectionCreateWithoutPageInput[] | PageSectionUncheckedCreateWithoutPageInput[]
    connectOrCreate?: PageSectionCreateOrConnectWithoutPageInput | PageSectionCreateOrConnectWithoutPageInput[]
    createMany?: PageSectionCreateManyPageInputEnvelope
    connect?: PageSectionWhereUniqueInput | PageSectionWhereUniqueInput[]
  }

  export type PageSectionUncheckedCreateNestedManyWithoutPageInput = {
    create?: XOR<PageSectionCreateWithoutPageInput, PageSectionUncheckedCreateWithoutPageInput> | PageSectionCreateWithoutPageInput[] | PageSectionUncheckedCreateWithoutPageInput[]
    connectOrCreate?: PageSectionCreateOrConnectWithoutPageInput | PageSectionCreateOrConnectWithoutPageInput[]
    createMany?: PageSectionCreateManyPageInputEnvelope
    connect?: PageSectionWhereUniqueInput | PageSectionWhereUniqueInput[]
  }

  export type PageSectionUpdateManyWithoutPageNestedInput = {
    create?: XOR<PageSectionCreateWithoutPageInput, PageSectionUncheckedCreateWithoutPageInput> | PageSectionCreateWithoutPageInput[] | PageSectionUncheckedCreateWithoutPageInput[]
    connectOrCreate?: PageSectionCreateOrConnectWithoutPageInput | PageSectionCreateOrConnectWithoutPageInput[]
    upsert?: PageSectionUpsertWithWhereUniqueWithoutPageInput | PageSectionUpsertWithWhereUniqueWithoutPageInput[]
    createMany?: PageSectionCreateManyPageInputEnvelope
    set?: PageSectionWhereUniqueInput | PageSectionWhereUniqueInput[]
    disconnect?: PageSectionWhereUniqueInput | PageSectionWhereUniqueInput[]
    delete?: PageSectionWhereUniqueInput | PageSectionWhereUniqueInput[]
    connect?: PageSectionWhereUniqueInput | PageSectionWhereUniqueInput[]
    update?: PageSectionUpdateWithWhereUniqueWithoutPageInput | PageSectionUpdateWithWhereUniqueWithoutPageInput[]
    updateMany?: PageSectionUpdateManyWithWhereWithoutPageInput | PageSectionUpdateManyWithWhereWithoutPageInput[]
    deleteMany?: PageSectionScalarWhereInput | PageSectionScalarWhereInput[]
  }

  export type PageSectionUncheckedUpdateManyWithoutPageNestedInput = {
    create?: XOR<PageSectionCreateWithoutPageInput, PageSectionUncheckedCreateWithoutPageInput> | PageSectionCreateWithoutPageInput[] | PageSectionUncheckedCreateWithoutPageInput[]
    connectOrCreate?: PageSectionCreateOrConnectWithoutPageInput | PageSectionCreateOrConnectWithoutPageInput[]
    upsert?: PageSectionUpsertWithWhereUniqueWithoutPageInput | PageSectionUpsertWithWhereUniqueWithoutPageInput[]
    createMany?: PageSectionCreateManyPageInputEnvelope
    set?: PageSectionWhereUniqueInput | PageSectionWhereUniqueInput[]
    disconnect?: PageSectionWhereUniqueInput | PageSectionWhereUniqueInput[]
    delete?: PageSectionWhereUniqueInput | PageSectionWhereUniqueInput[]
    connect?: PageSectionWhereUniqueInput | PageSectionWhereUniqueInput[]
    update?: PageSectionUpdateWithWhereUniqueWithoutPageInput | PageSectionUpdateWithWhereUniqueWithoutPageInput[]
    updateMany?: PageSectionUpdateManyWithWhereWithoutPageInput | PageSectionUpdateManyWithWhereWithoutPageInput[]
    deleteMany?: PageSectionScalarWhereInput | PageSectionScalarWhereInput[]
  }

  export type PageCreateNestedOneWithoutSectionsInput = {
    create?: XOR<PageCreateWithoutSectionsInput, PageUncheckedCreateWithoutSectionsInput>
    connectOrCreate?: PageCreateOrConnectWithoutSectionsInput
    connect?: PageWhereUniqueInput
  }

  export type PageUpdateOneRequiredWithoutSectionsNestedInput = {
    create?: XOR<PageCreateWithoutSectionsInput, PageUncheckedCreateWithoutSectionsInput>
    connectOrCreate?: PageCreateOrConnectWithoutSectionsInput
    upsert?: PageUpsertWithoutSectionsInput
    connect?: PageWhereUniqueInput
    update?: XOR<XOR<PageUpdateToOneWithWhereWithoutSectionsInput, PageUpdateWithoutSectionsInput>, PageUncheckedUpdateWithoutSectionsInput>
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }
  export type NestedJsonFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedBoolFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolFilter<$PrismaModel> | boolean
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedBoolWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel>
    not?: NestedBoolWithAggregatesFilter<$PrismaModel> | boolean
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedBoolFilter<$PrismaModel>
    _max?: NestedBoolFilter<$PrismaModel>
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedDecimalNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel> | null
    in?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[] | null
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalNullableWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedDecimalNullableFilter<$PrismaModel>
    _sum?: NestedDecimalNullableFilter<$PrismaModel>
    _min?: NestedDecimalNullableFilter<$PrismaModel>
    _max?: NestedDecimalNullableFilter<$PrismaModel>
  }

  export type NestedBoolNullableFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableFilter<$PrismaModel> | boolean | null
  }

  export type NestedBoolNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: boolean | BooleanFieldRefInput<$PrismaModel> | null
    not?: NestedBoolNullableWithAggregatesFilter<$PrismaModel> | boolean | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedBoolNullableFilter<$PrismaModel>
    _max?: NestedBoolNullableFilter<$PrismaModel>
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedDecimalFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
  }

  export type NestedDecimalWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    in?: Decimal[] | DecimalJsLike[] | number[] | string[]
    notIn?: Decimal[] | DecimalJsLike[] | number[] | string[]
    lt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    lte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gt?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    gte?: Decimal | DecimalJsLike | number | string | DecimalFieldRefInput<$PrismaModel>
    not?: NestedDecimalWithAggregatesFilter<$PrismaModel> | Decimal | DecimalJsLike | number | string
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedDecimalFilter<$PrismaModel>
    _sum?: NestedDecimalFilter<$PrismaModel>
    _min?: NestedDecimalFilter<$PrismaModel>
    _max?: NestedDecimalFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableFilter<$PrismaModel> | Date | string | null
  }

  export type NestedFloatWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedFloatFilter<$PrismaModel>
    _min?: NestedFloatFilter<$PrismaModel>
    _max?: NestedFloatFilter<$PrismaModel>
  }

  export type NestedDateTimeNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel> | null
    in?: Date[] | string[] | null
    notIn?: Date[] | string[] | null
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeNullableWithAggregatesFilter<$PrismaModel> | Date | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedDateTimeNullableFilter<$PrismaModel>
    _max?: NestedDateTimeNullableFilter<$PrismaModel>
  }
  export type NestedJsonNullableFilter<$PrismaModel = never> = 
    | PatchUndefined<
        Either<Required<NestedJsonNullableFilterBase<$PrismaModel>>, Exclude<keyof Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>,
        Required<NestedJsonNullableFilterBase<$PrismaModel>>
      >
    | OptionalFlat<Omit<Required<NestedJsonNullableFilterBase<$PrismaModel>>, 'path'>>

  export type NestedJsonNullableFilterBase<$PrismaModel = never> = {
    equals?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
    path?: string
    string_contains?: string | StringFieldRefInput<$PrismaModel>
    string_starts_with?: string | StringFieldRefInput<$PrismaModel>
    string_ends_with?: string | StringFieldRefInput<$PrismaModel>
    array_contains?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_starts_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    array_ends_with?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | null
    lt?: InputJsonValue
    lte?: InputJsonValue
    gt?: InputJsonValue
    gte?: InputJsonValue
    not?: InputJsonValue | JsonFieldRefInput<$PrismaModel> | JsonNullValueFilter
  }

  export type NestedEnumOrderStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[]
    notIn?: $Enums.OrderStatus[]
    not?: NestedEnumOrderStatusFilter<$PrismaModel> | $Enums.OrderStatus
  }

  export type NestedEnumPaymentStatusFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[]
    notIn?: $Enums.PaymentStatus[]
    not?: NestedEnumPaymentStatusFilter<$PrismaModel> | $Enums.PaymentStatus
  }

  export type NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.OrderStatus | EnumOrderStatusFieldRefInput<$PrismaModel>
    in?: $Enums.OrderStatus[]
    notIn?: $Enums.OrderStatus[]
    not?: NestedEnumOrderStatusWithAggregatesFilter<$PrismaModel> | $Enums.OrderStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumOrderStatusFilter<$PrismaModel>
    _max?: NestedEnumOrderStatusFilter<$PrismaModel>
  }

  export type NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.PaymentStatus | EnumPaymentStatusFieldRefInput<$PrismaModel>
    in?: $Enums.PaymentStatus[]
    notIn?: $Enums.PaymentStatus[]
    not?: NestedEnumPaymentStatusWithAggregatesFilter<$PrismaModel> | $Enums.PaymentStatus
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumPaymentStatusFilter<$PrismaModel>
    _max?: NestedEnumPaymentStatusFilter<$PrismaModel>
  }

  export type NestedEnumMovementTypeFilter<$PrismaModel = never> = {
    equals?: $Enums.MovementType | EnumMovementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MovementType[]
    notIn?: $Enums.MovementType[]
    not?: NestedEnumMovementTypeFilter<$PrismaModel> | $Enums.MovementType
  }

  export type NestedEnumMovementTypeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: $Enums.MovementType | EnumMovementTypeFieldRefInput<$PrismaModel>
    in?: $Enums.MovementType[]
    notIn?: $Enums.MovementType[]
    not?: NestedEnumMovementTypeWithAggregatesFilter<$PrismaModel> | $Enums.MovementType
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedEnumMovementTypeFilter<$PrismaModel>
    _max?: NestedEnumMovementTypeFilter<$PrismaModel>
  }

  export type SellerCreateWithoutCompaniesInput = {
    id?: string
    name: string
    slug: string
    email: string
    phone?: string | null
    logo?: string | null
    rating: number
    reviewCount: number
    verified?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    products?: ProductCreateNestedManyWithoutSellerInput
  }

  export type SellerUncheckedCreateWithoutCompaniesInput = {
    id?: string
    name: string
    slug: string
    email: string
    phone?: string | null
    logo?: string | null
    rating: number
    reviewCount: number
    verified?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    products?: ProductUncheckedCreateNestedManyWithoutSellerInput
  }

  export type SellerCreateOrConnectWithoutCompaniesInput = {
    where: SellerWhereUniqueInput
    create: XOR<SellerCreateWithoutCompaniesInput, SellerUncheckedCreateWithoutCompaniesInput>
  }

  export type CompanyAdditionalInfoCreateWithoutCompanyInput = {
    id?: string
    short_description?: string | null
    facebook_link?: string | null
    twitter_link?: string | null
    instagram_link?: string | null
    linkedin_link?: string | null
    youtube_link?: string | null
    whatsapp_number?: string | null
    google_map_link?: string | null
    vision?: string | null
    mission?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput = {
    id?: string
    short_description?: string | null
    facebook_link?: string | null
    twitter_link?: string | null
    instagram_link?: string | null
    linkedin_link?: string | null
    youtube_link?: string | null
    whatsapp_number?: string | null
    google_map_link?: string | null
    vision?: string | null
    mission?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CompanyAdditionalInfoCreateOrConnectWithoutCompanyInput = {
    where: CompanyAdditionalInfoWhereUniqueInput
    create: XOR<CompanyAdditionalInfoCreateWithoutCompanyInput, CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput>
  }

  export type CompanyAdditionalInfoCreateManyCompanyInputEnvelope = {
    data: CompanyAdditionalInfoCreateManyCompanyInput | CompanyAdditionalInfoCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type SellerUpsertWithoutCompaniesInput = {
    update: XOR<SellerUpdateWithoutCompaniesInput, SellerUncheckedUpdateWithoutCompaniesInput>
    create: XOR<SellerCreateWithoutCompaniesInput, SellerUncheckedCreateWithoutCompaniesInput>
    where?: SellerWhereInput
  }

  export type SellerUpdateToOneWithWhereWithoutCompaniesInput = {
    where?: SellerWhereInput
    data: XOR<SellerUpdateWithoutCompaniesInput, SellerUncheckedUpdateWithoutCompaniesInput>
  }

  export type SellerUpdateWithoutCompaniesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    verified?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    products?: ProductUpdateManyWithoutSellerNestedInput
  }

  export type SellerUncheckedUpdateWithoutCompaniesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    verified?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    products?: ProductUncheckedUpdateManyWithoutSellerNestedInput
  }

  export type CompanyAdditionalInfoUpsertWithWhereUniqueWithoutCompanyInput = {
    where: CompanyAdditionalInfoWhereUniqueInput
    update: XOR<CompanyAdditionalInfoUpdateWithoutCompanyInput, CompanyAdditionalInfoUncheckedUpdateWithoutCompanyInput>
    create: XOR<CompanyAdditionalInfoCreateWithoutCompanyInput, CompanyAdditionalInfoUncheckedCreateWithoutCompanyInput>
  }

  export type CompanyAdditionalInfoUpdateWithWhereUniqueWithoutCompanyInput = {
    where: CompanyAdditionalInfoWhereUniqueInput
    data: XOR<CompanyAdditionalInfoUpdateWithoutCompanyInput, CompanyAdditionalInfoUncheckedUpdateWithoutCompanyInput>
  }

  export type CompanyAdditionalInfoUpdateManyWithWhereWithoutCompanyInput = {
    where: CompanyAdditionalInfoScalarWhereInput
    data: XOR<CompanyAdditionalInfoUpdateManyMutationInput, CompanyAdditionalInfoUncheckedUpdateManyWithoutCompanyInput>
  }

  export type CompanyAdditionalInfoScalarWhereInput = {
    AND?: CompanyAdditionalInfoScalarWhereInput | CompanyAdditionalInfoScalarWhereInput[]
    OR?: CompanyAdditionalInfoScalarWhereInput[]
    NOT?: CompanyAdditionalInfoScalarWhereInput | CompanyAdditionalInfoScalarWhereInput[]
    id?: StringFilter<"CompanyAdditionalInfo"> | string
    company_id?: StringFilter<"CompanyAdditionalInfo"> | string
    short_description?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    facebook_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    twitter_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    instagram_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    linkedin_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    youtube_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    whatsapp_number?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    google_map_link?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    vision?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    mission?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    created_at?: DateTimeFilter<"CompanyAdditionalInfo"> | Date | string
    created_by?: StringFilter<"CompanyAdditionalInfo"> | string
    created_ip?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    updated_at?: DateTimeFilter<"CompanyAdditionalInfo"> | Date | string
    updated_by?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
    updated_ip?: StringNullableFilter<"CompanyAdditionalInfo"> | string | null
  }

  export type CompanyCreateWithoutCompanyAdditionalInfoInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    is_seller?: boolean
    is_verified?: boolean
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    seller?: SellerCreateNestedOneWithoutCompaniesInput
  }

  export type CompanyUncheckedCreateWithoutCompanyAdditionalInfoInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    is_seller?: boolean
    is_verified?: boolean
    seller_id?: string | null
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CompanyCreateOrConnectWithoutCompanyAdditionalInfoInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutCompanyAdditionalInfoInput, CompanyUncheckedCreateWithoutCompanyAdditionalInfoInput>
  }

  export type CompanyUpsertWithoutCompanyAdditionalInfoInput = {
    update: XOR<CompanyUpdateWithoutCompanyAdditionalInfoInput, CompanyUncheckedUpdateWithoutCompanyAdditionalInfoInput>
    create: XOR<CompanyCreateWithoutCompanyAdditionalInfoInput, CompanyUncheckedCreateWithoutCompanyAdditionalInfoInput>
    where?: CompanyWhereInput
  }

  export type CompanyUpdateToOneWithWhereWithoutCompanyAdditionalInfoInput = {
    where?: CompanyWhereInput
    data: XOR<CompanyUpdateWithoutCompanyAdditionalInfoInput, CompanyUncheckedUpdateWithoutCompanyAdditionalInfoInput>
  }

  export type CompanyUpdateWithoutCompanyAdditionalInfoInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    is_seller?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    seller?: SellerUpdateOneWithoutCompaniesNestedInput
  }

  export type CompanyUncheckedUpdateWithoutCompanyAdditionalInfoInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    is_seller?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    seller_id?: NullableStringFieldUpdateOperationsInput | string | null
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserGroupCreateWithoutUserInput = {
    id?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    security_group: SecurityGroupCreateNestedOneWithoutUserGroupsInput
  }

  export type UserGroupUncheckedCreateWithoutUserInput = {
    id?: string
    group_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserGroupCreateOrConnectWithoutUserInput = {
    where: UserGroupWhereUniqueInput
    create: XOR<UserGroupCreateWithoutUserInput, UserGroupUncheckedCreateWithoutUserInput>
  }

  export type UserGroupCreateManyUserInputEnvelope = {
    data: UserGroupCreateManyUserInput | UserGroupCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserSettingsCreateWithoutUserInput = {
    id?: string
    settings: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserSettingsUncheckedCreateWithoutUserInput = {
    id?: string
    settings: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserSettingsCreateOrConnectWithoutUserInput = {
    where: UserSettingsWhereUniqueInput
    create: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
  }

  export type UserSettingsCreateManyUserInputEnvelope = {
    data: UserSettingsCreateManyUserInput | UserSettingsCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type RefreshTokenCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type RefreshTokenUncheckedCreateWithoutUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type RefreshTokenCreateOrConnectWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenCreateManyUserInputEnvelope = {
    data: RefreshTokenCreateManyUserInput | RefreshTokenCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type UserGroupUpsertWithWhereUniqueWithoutUserInput = {
    where: UserGroupWhereUniqueInput
    update: XOR<UserGroupUpdateWithoutUserInput, UserGroupUncheckedUpdateWithoutUserInput>
    create: XOR<UserGroupCreateWithoutUserInput, UserGroupUncheckedCreateWithoutUserInput>
  }

  export type UserGroupUpdateWithWhereUniqueWithoutUserInput = {
    where: UserGroupWhereUniqueInput
    data: XOR<UserGroupUpdateWithoutUserInput, UserGroupUncheckedUpdateWithoutUserInput>
  }

  export type UserGroupUpdateManyWithWhereWithoutUserInput = {
    where: UserGroupScalarWhereInput
    data: XOR<UserGroupUpdateManyMutationInput, UserGroupUncheckedUpdateManyWithoutUserInput>
  }

  export type UserGroupScalarWhereInput = {
    AND?: UserGroupScalarWhereInput | UserGroupScalarWhereInput[]
    OR?: UserGroupScalarWhereInput[]
    NOT?: UserGroupScalarWhereInput | UserGroupScalarWhereInput[]
    id?: StringFilter<"UserGroup"> | string
    user_id?: StringFilter<"UserGroup"> | string
    group_id?: StringFilter<"UserGroup"> | string
    created_at?: DateTimeFilter<"UserGroup"> | Date | string
    created_by?: StringFilter<"UserGroup"> | string
    created_ip?: StringNullableFilter<"UserGroup"> | string | null
    updated_at?: DateTimeFilter<"UserGroup"> | Date | string
    updated_by?: StringNullableFilter<"UserGroup"> | string | null
    updated_ip?: StringNullableFilter<"UserGroup"> | string | null
    company_id?: StringFilter<"UserGroup"> | string
  }

  export type UserSettingsUpsertWithWhereUniqueWithoutUserInput = {
    where: UserSettingsWhereUniqueInput
    update: XOR<UserSettingsUpdateWithoutUserInput, UserSettingsUncheckedUpdateWithoutUserInput>
    create: XOR<UserSettingsCreateWithoutUserInput, UserSettingsUncheckedCreateWithoutUserInput>
  }

  export type UserSettingsUpdateWithWhereUniqueWithoutUserInput = {
    where: UserSettingsWhereUniqueInput
    data: XOR<UserSettingsUpdateWithoutUserInput, UserSettingsUncheckedUpdateWithoutUserInput>
  }

  export type UserSettingsUpdateManyWithWhereWithoutUserInput = {
    where: UserSettingsScalarWhereInput
    data: XOR<UserSettingsUpdateManyMutationInput, UserSettingsUncheckedUpdateManyWithoutUserInput>
  }

  export type UserSettingsScalarWhereInput = {
    AND?: UserSettingsScalarWhereInput | UserSettingsScalarWhereInput[]
    OR?: UserSettingsScalarWhereInput[]
    NOT?: UserSettingsScalarWhereInput | UserSettingsScalarWhereInput[]
    id?: StringFilter<"UserSettings"> | string
    user_id?: StringFilter<"UserSettings"> | string
    settings?: JsonFilter<"UserSettings">
    created_at?: DateTimeFilter<"UserSettings"> | Date | string
    created_by?: StringFilter<"UserSettings"> | string
    created_ip?: StringNullableFilter<"UserSettings"> | string | null
    updated_at?: DateTimeFilter<"UserSettings"> | Date | string
    updated_by?: StringNullableFilter<"UserSettings"> | string | null
    updated_ip?: StringNullableFilter<"UserSettings"> | string | null
    company_id?: StringFilter<"UserSettings"> | string
  }

  export type RefreshTokenUpsertWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    update: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
    create: XOR<RefreshTokenCreateWithoutUserInput, RefreshTokenUncheckedCreateWithoutUserInput>
  }

  export type RefreshTokenUpdateWithWhereUniqueWithoutUserInput = {
    where: RefreshTokenWhereUniqueInput
    data: XOR<RefreshTokenUpdateWithoutUserInput, RefreshTokenUncheckedUpdateWithoutUserInput>
  }

  export type RefreshTokenUpdateManyWithWhereWithoutUserInput = {
    where: RefreshTokenScalarWhereInput
    data: XOR<RefreshTokenUpdateManyMutationInput, RefreshTokenUncheckedUpdateManyWithoutUserInput>
  }

  export type RefreshTokenScalarWhereInput = {
    AND?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    OR?: RefreshTokenScalarWhereInput[]
    NOT?: RefreshTokenScalarWhereInput | RefreshTokenScalarWhereInput[]
    id?: StringFilter<"RefreshToken"> | string
    token?: StringFilter<"RefreshToken"> | string
    userId?: StringFilter<"RefreshToken"> | string
    expiresAt?: DateTimeFilter<"RefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"RefreshToken"> | Date | string
    isRevoked?: BoolFilter<"RefreshToken"> | boolean
  }

  export type UserCreateWithoutRefreshTokenInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupCreateNestedManyWithoutUserInput
    UserSettings?: UserSettingsCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutRefreshTokenInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupUncheckedCreateNestedManyWithoutUserInput
    UserSettings?: UserSettingsUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutRefreshTokenInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutRefreshTokenInput, UserUncheckedCreateWithoutRefreshTokenInput>
  }

  export type UserUpsertWithoutRefreshTokenInput = {
    update: XOR<UserUpdateWithoutRefreshTokenInput, UserUncheckedUpdateWithoutRefreshTokenInput>
    create: XOR<UserCreateWithoutRefreshTokenInput, UserUncheckedCreateWithoutRefreshTokenInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutRefreshTokenInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutRefreshTokenInput, UserUncheckedUpdateWithoutRefreshTokenInput>
  }

  export type UserUpdateWithoutRefreshTokenInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUpdateManyWithoutUserNestedInput
    UserSettings?: UserSettingsUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutRefreshTokenInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUncheckedUpdateManyWithoutUserNestedInput
    UserSettings?: UserSettingsUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput = {
    id?: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput = {
    id?: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityRuleWiseMenuPermissionCreateOrConnectWithoutSecurity_ruleInput = {
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
    create: XOR<SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput>
  }

  export type SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInputEnvelope = {
    data: SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInput | SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInput[]
    skipDuplicates?: boolean
  }

  export type SecurityGroupRuleCreateWithoutSecurity_ruleInput = {
    id?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    security_group: SecurityGroupCreateNestedOneWithoutSecurityGroupRulesInput
  }

  export type SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput = {
    id?: string
    group_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupRuleCreateOrConnectWithoutSecurity_ruleInput = {
    where: SecurityGroupRuleWhereUniqueInput
    create: XOR<SecurityGroupRuleCreateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput>
  }

  export type SecurityGroupRuleCreateManySecurity_ruleInputEnvelope = {
    data: SecurityGroupRuleCreateManySecurity_ruleInput | SecurityGroupRuleCreateManySecurity_ruleInput[]
    skipDuplicates?: boolean
  }

  export type SecurityRuleWiseMenuPermissionUpsertWithWhereUniqueWithoutSecurity_ruleInput = {
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
    update: XOR<SecurityRuleWiseMenuPermissionUpdateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedUpdateWithoutSecurity_ruleInput>
    create: XOR<SecurityRuleWiseMenuPermissionCreateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedCreateWithoutSecurity_ruleInput>
  }

  export type SecurityRuleWiseMenuPermissionUpdateWithWhereUniqueWithoutSecurity_ruleInput = {
    where: SecurityRuleWiseMenuPermissionWhereUniqueInput
    data: XOR<SecurityRuleWiseMenuPermissionUpdateWithoutSecurity_ruleInput, SecurityRuleWiseMenuPermissionUncheckedUpdateWithoutSecurity_ruleInput>
  }

  export type SecurityRuleWiseMenuPermissionUpdateManyWithWhereWithoutSecurity_ruleInput = {
    where: SecurityRuleWiseMenuPermissionScalarWhereInput
    data: XOR<SecurityRuleWiseMenuPermissionUpdateManyMutationInput, SecurityRuleWiseMenuPermissionUncheckedUpdateManyWithoutSecurity_ruleInput>
  }

  export type SecurityRuleWiseMenuPermissionScalarWhereInput = {
    AND?: SecurityRuleWiseMenuPermissionScalarWhereInput | SecurityRuleWiseMenuPermissionScalarWhereInput[]
    OR?: SecurityRuleWiseMenuPermissionScalarWhereInput[]
    NOT?: SecurityRuleWiseMenuPermissionScalarWhereInput | SecurityRuleWiseMenuPermissionScalarWhereInput[]
    id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    menu_id?: IntFilter<"SecurityRuleWiseMenuPermission"> | number
    can_view?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_create?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_update?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_delete?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    can_report?: BoolFilter<"SecurityRuleWiseMenuPermission"> | boolean
    rule_id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    created_at?: DateTimeFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    created_by?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
    created_ip?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_at?: DateTimeFilter<"SecurityRuleWiseMenuPermission"> | Date | string
    updated_by?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    updated_ip?: StringNullableFilter<"SecurityRuleWiseMenuPermission"> | string | null
    company_id?: StringFilter<"SecurityRuleWiseMenuPermission"> | string
  }

  export type SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_ruleInput = {
    where: SecurityGroupRuleWhereUniqueInput
    update: XOR<SecurityGroupRuleUpdateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedUpdateWithoutSecurity_ruleInput>
    create: XOR<SecurityGroupRuleCreateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_ruleInput>
  }

  export type SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_ruleInput = {
    where: SecurityGroupRuleWhereUniqueInput
    data: XOR<SecurityGroupRuleUpdateWithoutSecurity_ruleInput, SecurityGroupRuleUncheckedUpdateWithoutSecurity_ruleInput>
  }

  export type SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_ruleInput = {
    where: SecurityGroupRuleScalarWhereInput
    data: XOR<SecurityGroupRuleUpdateManyMutationInput, SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_ruleInput>
  }

  export type SecurityGroupRuleScalarWhereInput = {
    AND?: SecurityGroupRuleScalarWhereInput | SecurityGroupRuleScalarWhereInput[]
    OR?: SecurityGroupRuleScalarWhereInput[]
    NOT?: SecurityGroupRuleScalarWhereInput | SecurityGroupRuleScalarWhereInput[]
    id?: StringFilter<"SecurityGroupRule"> | string
    group_id?: StringFilter<"SecurityGroupRule"> | string
    rule_id?: StringFilter<"SecurityGroupRule"> | string
    created_at?: DateTimeFilter<"SecurityGroupRule"> | Date | string
    created_by?: StringFilter<"SecurityGroupRule"> | string
    created_ip?: StringNullableFilter<"SecurityGroupRule"> | string | null
    updated_at?: DateTimeFilter<"SecurityGroupRule"> | Date | string
    updated_by?: StringNullableFilter<"SecurityGroupRule"> | string | null
    updated_ip?: StringNullableFilter<"SecurityGroupRule"> | string | null
    company_id?: StringFilter<"SecurityGroupRule"> | string
  }

  export type SecurityRuleCreateWithoutSecurityRuleWiseMenuPermissionsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityGroupRules?: SecurityGroupRuleCreateNestedManyWithoutSecurity_ruleInput
  }

  export type SecurityRuleUncheckedCreateWithoutSecurityRuleWiseMenuPermissionsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityGroupRules?: SecurityGroupRuleUncheckedCreateNestedManyWithoutSecurity_ruleInput
  }

  export type SecurityRuleCreateOrConnectWithoutSecurityRuleWiseMenuPermissionsInput = {
    where: SecurityRuleWhereUniqueInput
    create: XOR<SecurityRuleCreateWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUncheckedCreateWithoutSecurityRuleWiseMenuPermissionsInput>
  }

  export type SecurityRuleUpsertWithoutSecurityRuleWiseMenuPermissionsInput = {
    update: XOR<SecurityRuleUpdateWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUncheckedUpdateWithoutSecurityRuleWiseMenuPermissionsInput>
    create: XOR<SecurityRuleCreateWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUncheckedCreateWithoutSecurityRuleWiseMenuPermissionsInput>
    where?: SecurityRuleWhereInput
  }

  export type SecurityRuleUpdateToOneWithWhereWithoutSecurityRuleWiseMenuPermissionsInput = {
    where?: SecurityRuleWhereInput
    data: XOR<SecurityRuleUpdateWithoutSecurityRuleWiseMenuPermissionsInput, SecurityRuleUncheckedUpdateWithoutSecurityRuleWiseMenuPermissionsInput>
  }

  export type SecurityRuleUpdateWithoutSecurityRuleWiseMenuPermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityGroupRules?: SecurityGroupRuleUpdateManyWithoutSecurity_ruleNestedInput
  }

  export type SecurityRuleUncheckedUpdateWithoutSecurityRuleWiseMenuPermissionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityGroupRules?: SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_ruleNestedInput
  }

  export type SecurityGroupRuleCreateWithoutSecurity_groupInput = {
    id?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    security_rule: SecurityRuleCreateNestedOneWithoutSecurityGroupRulesInput
  }

  export type SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput = {
    id?: string
    rule_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupRuleCreateOrConnectWithoutSecurity_groupInput = {
    where: SecurityGroupRuleWhereUniqueInput
    create: XOR<SecurityGroupRuleCreateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput>
  }

  export type SecurityGroupRuleCreateManySecurity_groupInputEnvelope = {
    data: SecurityGroupRuleCreateManySecurity_groupInput | SecurityGroupRuleCreateManySecurity_groupInput[]
    skipDuplicates?: boolean
  }

  export type UserGroupCreateWithoutSecurity_groupInput = {
    id?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    user: UserCreateNestedOneWithoutUserGroupsInput
  }

  export type UserGroupUncheckedCreateWithoutSecurity_groupInput = {
    id?: string
    user_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserGroupCreateOrConnectWithoutSecurity_groupInput = {
    where: UserGroupWhereUniqueInput
    create: XOR<UserGroupCreateWithoutSecurity_groupInput, UserGroupUncheckedCreateWithoutSecurity_groupInput>
  }

  export type UserGroupCreateManySecurity_groupInputEnvelope = {
    data: UserGroupCreateManySecurity_groupInput | UserGroupCreateManySecurity_groupInput[]
    skipDuplicates?: boolean
  }

  export type SecurityGroupRuleUpsertWithWhereUniqueWithoutSecurity_groupInput = {
    where: SecurityGroupRuleWhereUniqueInput
    update: XOR<SecurityGroupRuleUpdateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedUpdateWithoutSecurity_groupInput>
    create: XOR<SecurityGroupRuleCreateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedCreateWithoutSecurity_groupInput>
  }

  export type SecurityGroupRuleUpdateWithWhereUniqueWithoutSecurity_groupInput = {
    where: SecurityGroupRuleWhereUniqueInput
    data: XOR<SecurityGroupRuleUpdateWithoutSecurity_groupInput, SecurityGroupRuleUncheckedUpdateWithoutSecurity_groupInput>
  }

  export type SecurityGroupRuleUpdateManyWithWhereWithoutSecurity_groupInput = {
    where: SecurityGroupRuleScalarWhereInput
    data: XOR<SecurityGroupRuleUpdateManyMutationInput, SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_groupInput>
  }

  export type UserGroupUpsertWithWhereUniqueWithoutSecurity_groupInput = {
    where: UserGroupWhereUniqueInput
    update: XOR<UserGroupUpdateWithoutSecurity_groupInput, UserGroupUncheckedUpdateWithoutSecurity_groupInput>
    create: XOR<UserGroupCreateWithoutSecurity_groupInput, UserGroupUncheckedCreateWithoutSecurity_groupInput>
  }

  export type UserGroupUpdateWithWhereUniqueWithoutSecurity_groupInput = {
    where: UserGroupWhereUniqueInput
    data: XOR<UserGroupUpdateWithoutSecurity_groupInput, UserGroupUncheckedUpdateWithoutSecurity_groupInput>
  }

  export type UserGroupUpdateManyWithWhereWithoutSecurity_groupInput = {
    where: UserGroupScalarWhereInput
    data: XOR<UserGroupUpdateManyMutationInput, UserGroupUncheckedUpdateManyWithoutSecurity_groupInput>
  }

  export type SecurityGroupCreateWithoutSecurityGroupRulesInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupCreateNestedManyWithoutSecurity_groupInput
  }

  export type SecurityGroupUncheckedCreateWithoutSecurityGroupRulesInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupUncheckedCreateNestedManyWithoutSecurity_groupInput
  }

  export type SecurityGroupCreateOrConnectWithoutSecurityGroupRulesInput = {
    where: SecurityGroupWhereUniqueInput
    create: XOR<SecurityGroupCreateWithoutSecurityGroupRulesInput, SecurityGroupUncheckedCreateWithoutSecurityGroupRulesInput>
  }

  export type SecurityRuleCreateWithoutSecurityGroupRulesInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionCreateNestedManyWithoutSecurity_ruleInput
  }

  export type SecurityRuleUncheckedCreateWithoutSecurityGroupRulesInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionUncheckedCreateNestedManyWithoutSecurity_ruleInput
  }

  export type SecurityRuleCreateOrConnectWithoutSecurityGroupRulesInput = {
    where: SecurityRuleWhereUniqueInput
    create: XOR<SecurityRuleCreateWithoutSecurityGroupRulesInput, SecurityRuleUncheckedCreateWithoutSecurityGroupRulesInput>
  }

  export type SecurityGroupUpsertWithoutSecurityGroupRulesInput = {
    update: XOR<SecurityGroupUpdateWithoutSecurityGroupRulesInput, SecurityGroupUncheckedUpdateWithoutSecurityGroupRulesInput>
    create: XOR<SecurityGroupCreateWithoutSecurityGroupRulesInput, SecurityGroupUncheckedCreateWithoutSecurityGroupRulesInput>
    where?: SecurityGroupWhereInput
  }

  export type SecurityGroupUpdateToOneWithWhereWithoutSecurityGroupRulesInput = {
    where?: SecurityGroupWhereInput
    data: XOR<SecurityGroupUpdateWithoutSecurityGroupRulesInput, SecurityGroupUncheckedUpdateWithoutSecurityGroupRulesInput>
  }

  export type SecurityGroupUpdateWithoutSecurityGroupRulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUpdateManyWithoutSecurity_groupNestedInput
  }

  export type SecurityGroupUncheckedUpdateWithoutSecurityGroupRulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUncheckedUpdateManyWithoutSecurity_groupNestedInput
  }

  export type SecurityRuleUpsertWithoutSecurityGroupRulesInput = {
    update: XOR<SecurityRuleUpdateWithoutSecurityGroupRulesInput, SecurityRuleUncheckedUpdateWithoutSecurityGroupRulesInput>
    create: XOR<SecurityRuleCreateWithoutSecurityGroupRulesInput, SecurityRuleUncheckedCreateWithoutSecurityGroupRulesInput>
    where?: SecurityRuleWhereInput
  }

  export type SecurityRuleUpdateToOneWithWhereWithoutSecurityGroupRulesInput = {
    where?: SecurityRuleWhereInput
    data: XOR<SecurityRuleUpdateWithoutSecurityGroupRulesInput, SecurityRuleUncheckedUpdateWithoutSecurityGroupRulesInput>
  }

  export type SecurityRuleUpdateWithoutSecurityGroupRulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionUpdateManyWithoutSecurity_ruleNestedInput
  }

  export type SecurityRuleUncheckedUpdateWithoutSecurityGroupRulesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityRuleWiseMenuPermissions?: SecurityRuleWiseMenuPermissionUncheckedUpdateManyWithoutSecurity_ruleNestedInput
  }

  export type UserCreateWithoutUserGroupsInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserSettings?: UserSettingsCreateNestedManyWithoutUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserGroupsInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserSettings?: UserSettingsUncheckedCreateNestedManyWithoutUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserGroupsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserGroupsInput, UserUncheckedCreateWithoutUserGroupsInput>
  }

  export type SecurityGroupCreateWithoutUserGroupsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityGroupRules?: SecurityGroupRuleCreateNestedManyWithoutSecurity_groupInput
  }

  export type SecurityGroupUncheckedCreateWithoutUserGroupsInput = {
    id?: string
    name: string
    description?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    SecurityGroupRules?: SecurityGroupRuleUncheckedCreateNestedManyWithoutSecurity_groupInput
  }

  export type SecurityGroupCreateOrConnectWithoutUserGroupsInput = {
    where: SecurityGroupWhereUniqueInput
    create: XOR<SecurityGroupCreateWithoutUserGroupsInput, SecurityGroupUncheckedCreateWithoutUserGroupsInput>
  }

  export type UserUpsertWithoutUserGroupsInput = {
    update: XOR<UserUpdateWithoutUserGroupsInput, UserUncheckedUpdateWithoutUserGroupsInput>
    create: XOR<UserCreateWithoutUserGroupsInput, UserUncheckedCreateWithoutUserGroupsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserGroupsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserGroupsInput, UserUncheckedUpdateWithoutUserGroupsInput>
  }

  export type UserUpdateWithoutUserGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserSettings?: UserSettingsUpdateManyWithoutUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserSettings?: UserSettingsUncheckedUpdateManyWithoutUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type SecurityGroupUpsertWithoutUserGroupsInput = {
    update: XOR<SecurityGroupUpdateWithoutUserGroupsInput, SecurityGroupUncheckedUpdateWithoutUserGroupsInput>
    create: XOR<SecurityGroupCreateWithoutUserGroupsInput, SecurityGroupUncheckedCreateWithoutUserGroupsInput>
    where?: SecurityGroupWhereInput
  }

  export type SecurityGroupUpdateToOneWithWhereWithoutUserGroupsInput = {
    where?: SecurityGroupWhereInput
    data: XOR<SecurityGroupUpdateWithoutUserGroupsInput, SecurityGroupUncheckedUpdateWithoutUserGroupsInput>
  }

  export type SecurityGroupUpdateWithoutUserGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityGroupRules?: SecurityGroupRuleUpdateManyWithoutSecurity_groupNestedInput
  }

  export type SecurityGroupUncheckedUpdateWithoutUserGroupsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    SecurityGroupRules?: SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_groupNestedInput
  }

  export type CategoryCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    image?: string | null
    icon?: string | null
    featured?: boolean
    productCount?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    subcategories?: SubcategoryCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    image?: string | null
    icon?: string | null
    featured?: boolean
    productCount?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    subcategories?: SubcategoryUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutProductsInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
  }

  export type SubcategoryCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    productCount?: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutSubcategoriesInput
  }

  export type SubcategoryUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    productCount?: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
  }

  export type SubcategoryCreateOrConnectWithoutProductsInput = {
    where: SubcategoryWhereUniqueInput
    create: XOR<SubcategoryCreateWithoutProductsInput, SubcategoryUncheckedCreateWithoutProductsInput>
  }

  export type BrandCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type BrandUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type BrandCreateOrConnectWithoutProductsInput = {
    where: BrandWhereUniqueInput
    create: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
  }

  export type SellerCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    email: string
    phone?: string | null
    logo?: string | null
    rating: number
    reviewCount: number
    verified?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    companies?: CompanyCreateNestedManyWithoutSellerInput
  }

  export type SellerUncheckedCreateWithoutProductsInput = {
    id?: string
    name: string
    slug: string
    email: string
    phone?: string | null
    logo?: string | null
    rating: number
    reviewCount: number
    verified?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    companies?: CompanyUncheckedCreateNestedManyWithoutSellerInput
  }

  export type SellerCreateOrConnectWithoutProductsInput = {
    where: SellerWhereUniqueInput
    create: XOR<SellerCreateWithoutProductsInput, SellerUncheckedCreateWithoutProductsInput>
  }

  export type ProductAttributeCreateWithoutProductInput = {
    id?: string
    name: string
    type: string
    value: string
    unit?: string | null
    displayValue?: string | null
    options?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductAttributeUncheckedCreateWithoutProductInput = {
    id?: string
    name: string
    type: string
    value: string
    unit?: string | null
    displayValue?: string | null
    options?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductAttributeCreateOrConnectWithoutProductInput = {
    where: ProductAttributeWhereUniqueInput
    create: XOR<ProductAttributeCreateWithoutProductInput, ProductAttributeUncheckedCreateWithoutProductInput>
  }

  export type ProductAttributeCreateManyProductInputEnvelope = {
    data: ProductAttributeCreateManyProductInput | ProductAttributeCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ProductVariantCreateWithoutProductInput = {
    id?: string
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    images: JsonNullValueInput | InputJsonValue
    sequence_no?: number
  }

  export type ProductVariantUncheckedCreateWithoutProductInput = {
    id?: string
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    images: JsonNullValueInput | InputJsonValue
    sequence_no?: number
  }

  export type ProductVariantCreateOrConnectWithoutProductInput = {
    where: ProductVariantWhereUniqueInput
    create: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput>
  }

  export type ProductVariantCreateManyProductInputEnvelope = {
    data: ProductVariantCreateManyProductInput | ProductVariantCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type ReviewCreateWithoutProductInput = {
    id?: string
    userId: string
    userName: string
    userAvatar?: string | null
    rating: number
    title?: string | null
    comment: string
    helpful?: number
    createdAt?: Date | string
    variantId?: string | null
  }

  export type ReviewUncheckedCreateWithoutProductInput = {
    id?: string
    userId: string
    userName: string
    userAvatar?: string | null
    rating: number
    title?: string | null
    comment: string
    helpful?: number
    createdAt?: Date | string
    variantId?: string | null
  }

  export type ReviewCreateOrConnectWithoutProductInput = {
    where: ReviewWhereUniqueInput
    create: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput>
  }

  export type ReviewCreateManyProductInputEnvelope = {
    data: ReviewCreateManyProductInput | ReviewCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type WishlistCreateWithoutProductInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    user: CustomerCreateNestedOneWithoutWishlistInput
  }

  export type WishlistUncheckedCreateWithoutProductInput = {
    id?: string
    userId: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type WishlistCreateOrConnectWithoutProductInput = {
    where: WishlistWhereUniqueInput
    create: XOR<WishlistCreateWithoutProductInput, WishlistUncheckedCreateWithoutProductInput>
  }

  export type WishlistCreateManyProductInputEnvelope = {
    data: WishlistCreateManyProductInput | WishlistCreateManyProductInput[]
    skipDuplicates?: boolean
  }

  export type SpecialOfferCreateWithoutProductsInput = {
    id?: string
    title: string
    subtitle?: string | null
    discount: Decimal | DecimalJsLike | number | string
    start_date: Date | string
    end_date: Date | string
    is_active?: boolean
    image?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SpecialOfferUncheckedCreateWithoutProductsInput = {
    id?: string
    title: string
    subtitle?: string | null
    discount: Decimal | DecimalJsLike | number | string
    start_date: Date | string
    end_date: Date | string
    is_active?: boolean
    image?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SpecialOfferCreateOrConnectWithoutProductsInput = {
    where: SpecialOfferWhereUniqueInput
    create: XOR<SpecialOfferCreateWithoutProductsInput, SpecialOfferUncheckedCreateWithoutProductsInput>
  }

  export type CategoryUpsertWithoutProductsInput = {
    update: XOR<CategoryUpdateWithoutProductsInput, CategoryUncheckedUpdateWithoutProductsInput>
    create: XOR<CategoryCreateWithoutProductsInput, CategoryUncheckedCreateWithoutProductsInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutProductsInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutProductsInput, CategoryUncheckedUpdateWithoutProductsInput>
  }

  export type CategoryUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    featured?: BoolFieldUpdateOperationsInput | boolean
    productCount?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    subcategories?: SubcategoryUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    featured?: BoolFieldUpdateOperationsInput | boolean
    productCount?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    subcategories?: SubcategoryUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type SubcategoryUpsertWithoutProductsInput = {
    update: XOR<SubcategoryUpdateWithoutProductsInput, SubcategoryUncheckedUpdateWithoutProductsInput>
    create: XOR<SubcategoryCreateWithoutProductsInput, SubcategoryUncheckedCreateWithoutProductsInput>
    where?: SubcategoryWhereInput
  }

  export type SubcategoryUpdateToOneWithWhereWithoutProductsInput = {
    where?: SubcategoryWhereInput
    data: XOR<SubcategoryUpdateWithoutProductsInput, SubcategoryUncheckedUpdateWithoutProductsInput>
  }

  export type SubcategoryUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    productCount?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutSubcategoriesNestedInput
  }

  export type SubcategoryUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    productCount?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
  }

  export type BrandUpsertWithoutProductsInput = {
    update: XOR<BrandUpdateWithoutProductsInput, BrandUncheckedUpdateWithoutProductsInput>
    create: XOR<BrandCreateWithoutProductsInput, BrandUncheckedCreateWithoutProductsInput>
    where?: BrandWhereInput
  }

  export type BrandUpdateToOneWithWhereWithoutProductsInput = {
    where?: BrandWhereInput
    data: XOR<BrandUpdateWithoutProductsInput, BrandUncheckedUpdateWithoutProductsInput>
  }

  export type BrandUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type BrandUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SellerUpsertWithoutProductsInput = {
    update: XOR<SellerUpdateWithoutProductsInput, SellerUncheckedUpdateWithoutProductsInput>
    create: XOR<SellerCreateWithoutProductsInput, SellerUncheckedCreateWithoutProductsInput>
    where?: SellerWhereInput
  }

  export type SellerUpdateToOneWithWhereWithoutProductsInput = {
    where?: SellerWhereInput
    data: XOR<SellerUpdateWithoutProductsInput, SellerUncheckedUpdateWithoutProductsInput>
  }

  export type SellerUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    verified?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    companies?: CompanyUpdateManyWithoutSellerNestedInput
  }

  export type SellerUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    logo?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    verified?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    companies?: CompanyUncheckedUpdateManyWithoutSellerNestedInput
  }

  export type ProductAttributeUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductAttributeWhereUniqueInput
    update: XOR<ProductAttributeUpdateWithoutProductInput, ProductAttributeUncheckedUpdateWithoutProductInput>
    create: XOR<ProductAttributeCreateWithoutProductInput, ProductAttributeUncheckedCreateWithoutProductInput>
  }

  export type ProductAttributeUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductAttributeWhereUniqueInput
    data: XOR<ProductAttributeUpdateWithoutProductInput, ProductAttributeUncheckedUpdateWithoutProductInput>
  }

  export type ProductAttributeUpdateManyWithWhereWithoutProductInput = {
    where: ProductAttributeScalarWhereInput
    data: XOR<ProductAttributeUpdateManyMutationInput, ProductAttributeUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductAttributeScalarWhereInput = {
    AND?: ProductAttributeScalarWhereInput | ProductAttributeScalarWhereInput[]
    OR?: ProductAttributeScalarWhereInput[]
    NOT?: ProductAttributeScalarWhereInput | ProductAttributeScalarWhereInput[]
    id?: StringFilter<"ProductAttribute"> | string
    name?: StringFilter<"ProductAttribute"> | string
    type?: StringFilter<"ProductAttribute"> | string
    value?: StringFilter<"ProductAttribute"> | string
    unit?: StringNullableFilter<"ProductAttribute"> | string | null
    displayValue?: StringNullableFilter<"ProductAttribute"> | string | null
    options?: JsonNullableFilter<"ProductAttribute">
    productId?: StringFilter<"ProductAttribute"> | string
  }

  export type ProductVariantUpsertWithWhereUniqueWithoutProductInput = {
    where: ProductVariantWhereUniqueInput
    update: XOR<ProductVariantUpdateWithoutProductInput, ProductVariantUncheckedUpdateWithoutProductInput>
    create: XOR<ProductVariantCreateWithoutProductInput, ProductVariantUncheckedCreateWithoutProductInput>
  }

  export type ProductVariantUpdateWithWhereUniqueWithoutProductInput = {
    where: ProductVariantWhereUniqueInput
    data: XOR<ProductVariantUpdateWithoutProductInput, ProductVariantUncheckedUpdateWithoutProductInput>
  }

  export type ProductVariantUpdateManyWithWhereWithoutProductInput = {
    where: ProductVariantScalarWhereInput
    data: XOR<ProductVariantUpdateManyMutationInput, ProductVariantUncheckedUpdateManyWithoutProductInput>
  }

  export type ProductVariantScalarWhereInput = {
    AND?: ProductVariantScalarWhereInput | ProductVariantScalarWhereInput[]
    OR?: ProductVariantScalarWhereInput[]
    NOT?: ProductVariantScalarWhereInput | ProductVariantScalarWhereInput[]
    id?: StringFilter<"ProductVariant"> | string
    sku?: StringFilter<"ProductVariant"> | string
    price?: DecimalFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string
    stock?: DecimalFilter<"ProductVariant"> | Decimal | DecimalJsLike | number | string
    attributes?: JsonFilter<"ProductVariant">
    images?: JsonFilter<"ProductVariant">
    sequence_no?: IntFilter<"ProductVariant"> | number
    productId?: StringFilter<"ProductVariant"> | string
  }

  export type ReviewUpsertWithWhereUniqueWithoutProductInput = {
    where: ReviewWhereUniqueInput
    update: XOR<ReviewUpdateWithoutProductInput, ReviewUncheckedUpdateWithoutProductInput>
    create: XOR<ReviewCreateWithoutProductInput, ReviewUncheckedCreateWithoutProductInput>
  }

  export type ReviewUpdateWithWhereUniqueWithoutProductInput = {
    where: ReviewWhereUniqueInput
    data: XOR<ReviewUpdateWithoutProductInput, ReviewUncheckedUpdateWithoutProductInput>
  }

  export type ReviewUpdateManyWithWhereWithoutProductInput = {
    where: ReviewScalarWhereInput
    data: XOR<ReviewUpdateManyMutationInput, ReviewUncheckedUpdateManyWithoutProductInput>
  }

  export type ReviewScalarWhereInput = {
    AND?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    OR?: ReviewScalarWhereInput[]
    NOT?: ReviewScalarWhereInput | ReviewScalarWhereInput[]
    id?: StringFilter<"Review"> | string
    userId?: StringFilter<"Review"> | string
    userName?: StringFilter<"Review"> | string
    userAvatar?: StringNullableFilter<"Review"> | string | null
    rating?: FloatFilter<"Review"> | number
    title?: StringNullableFilter<"Review"> | string | null
    comment?: StringFilter<"Review"> | string
    helpful?: IntFilter<"Review"> | number
    createdAt?: DateTimeFilter<"Review"> | Date | string
    variantId?: StringNullableFilter<"Review"> | string | null
    productId?: StringFilter<"Review"> | string
  }

  export type WishlistUpsertWithWhereUniqueWithoutProductInput = {
    where: WishlistWhereUniqueInput
    update: XOR<WishlistUpdateWithoutProductInput, WishlistUncheckedUpdateWithoutProductInput>
    create: XOR<WishlistCreateWithoutProductInput, WishlistUncheckedCreateWithoutProductInput>
  }

  export type WishlistUpdateWithWhereUniqueWithoutProductInput = {
    where: WishlistWhereUniqueInput
    data: XOR<WishlistUpdateWithoutProductInput, WishlistUncheckedUpdateWithoutProductInput>
  }

  export type WishlistUpdateManyWithWhereWithoutProductInput = {
    where: WishlistScalarWhereInput
    data: XOR<WishlistUpdateManyMutationInput, WishlistUncheckedUpdateManyWithoutProductInput>
  }

  export type WishlistScalarWhereInput = {
    AND?: WishlistScalarWhereInput | WishlistScalarWhereInput[]
    OR?: WishlistScalarWhereInput[]
    NOT?: WishlistScalarWhereInput | WishlistScalarWhereInput[]
    id?: StringFilter<"Wishlist"> | string
    userId?: StringFilter<"Wishlist"> | string
    productId?: StringFilter<"Wishlist"> | string
    created_at?: DateTimeFilter<"Wishlist"> | Date | string
    updated_at?: DateTimeFilter<"Wishlist"> | Date | string
  }

  export type SpecialOfferUpsertWithoutProductsInput = {
    update: XOR<SpecialOfferUpdateWithoutProductsInput, SpecialOfferUncheckedUpdateWithoutProductsInput>
    create: XOR<SpecialOfferCreateWithoutProductsInput, SpecialOfferUncheckedCreateWithoutProductsInput>
    where?: SpecialOfferWhereInput
  }

  export type SpecialOfferUpdateToOneWithWhereWithoutProductsInput = {
    where?: SpecialOfferWhereInput
    data: XOR<SpecialOfferUpdateWithoutProductsInput, SpecialOfferUncheckedUpdateWithoutProductsInput>
  }

  export type SpecialOfferUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SpecialOfferUncheckedUpdateWithoutProductsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    subtitle?: NullableStringFieldUpdateOperationsInput | string | null
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    image?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SubcategoryCreateWithoutCategoryInput = {
    id?: string
    name: string
    slug: string
    productCount?: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    products?: ProductCreateNestedManyWithoutSubcategoryInput
  }

  export type SubcategoryUncheckedCreateWithoutCategoryInput = {
    id?: string
    name: string
    slug: string
    productCount?: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    products?: ProductUncheckedCreateNestedManyWithoutSubcategoryInput
  }

  export type SubcategoryCreateOrConnectWithoutCategoryInput = {
    where: SubcategoryWhereUniqueInput
    create: XOR<SubcategoryCreateWithoutCategoryInput, SubcategoryUncheckedCreateWithoutCategoryInput>
  }

  export type SubcategoryCreateManyCategoryInputEnvelope = {
    data: SubcategoryCreateManyCategoryInput | SubcategoryCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type ProductCreateWithoutCategoryInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    subcategory: SubcategoryCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    seller: SellerCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    Wishlist?: WishlistCreateNestedManyWithoutProductInput
    SpecialOffer?: SpecialOfferCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutCategoryInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    subcategoryId: string
    brandId: string
    sellerId: string
    specialOfferId?: string | null
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput>
  }

  export type ProductCreateManyCategoryInputEnvelope = {
    data: ProductCreateManyCategoryInput | ProductCreateManyCategoryInput[]
    skipDuplicates?: boolean
  }

  export type SubcategoryUpsertWithWhereUniqueWithoutCategoryInput = {
    where: SubcategoryWhereUniqueInput
    update: XOR<SubcategoryUpdateWithoutCategoryInput, SubcategoryUncheckedUpdateWithoutCategoryInput>
    create: XOR<SubcategoryCreateWithoutCategoryInput, SubcategoryUncheckedCreateWithoutCategoryInput>
  }

  export type SubcategoryUpdateWithWhereUniqueWithoutCategoryInput = {
    where: SubcategoryWhereUniqueInput
    data: XOR<SubcategoryUpdateWithoutCategoryInput, SubcategoryUncheckedUpdateWithoutCategoryInput>
  }

  export type SubcategoryUpdateManyWithWhereWithoutCategoryInput = {
    where: SubcategoryScalarWhereInput
    data: XOR<SubcategoryUpdateManyMutationInput, SubcategoryUncheckedUpdateManyWithoutCategoryInput>
  }

  export type SubcategoryScalarWhereInput = {
    AND?: SubcategoryScalarWhereInput | SubcategoryScalarWhereInput[]
    OR?: SubcategoryScalarWhereInput[]
    NOT?: SubcategoryScalarWhereInput | SubcategoryScalarWhereInput[]
    id?: StringFilter<"Subcategory"> | string
    name?: StringFilter<"Subcategory"> | string
    slug?: StringFilter<"Subcategory"> | string
    productCount?: IntFilter<"Subcategory"> | number
    created_at?: DateTimeFilter<"Subcategory"> | Date | string
    created_by?: StringFilter<"Subcategory"> | string
    created_ip?: StringNullableFilter<"Subcategory"> | string | null
    updated_at?: DateTimeFilter<"Subcategory"> | Date | string
    updated_by?: StringNullableFilter<"Subcategory"> | string | null
    updated_ip?: StringNullableFilter<"Subcategory"> | string | null
    company_id?: StringFilter<"Subcategory"> | string
    categoryId?: StringFilter<"Subcategory"> | string
  }

  export type ProductUpsertWithWhereUniqueWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutCategoryInput, ProductUncheckedUpdateWithoutCategoryInput>
    create: XOR<ProductCreateWithoutCategoryInput, ProductUncheckedCreateWithoutCategoryInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutCategoryInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutCategoryInput, ProductUncheckedUpdateWithoutCategoryInput>
  }

  export type ProductUpdateManyWithWhereWithoutCategoryInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutCategoryInput>
  }

  export type ProductScalarWhereInput = {
    AND?: ProductScalarWhereInput | ProductScalarWhereInput[]
    OR?: ProductScalarWhereInput[]
    NOT?: ProductScalarWhereInput | ProductScalarWhereInput[]
    id?: StringFilter<"Product"> | string
    name?: StringFilter<"Product"> | string
    slug?: StringFilter<"Product"> | string
    description?: StringFilter<"Product"> | string
    price?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    priceRange?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    images?: JsonFilter<"Product">
    thumbnail?: StringFilter<"Product"> | string
    hasVariants?: BoolFilter<"Product"> | boolean
    stock?: DecimalFilter<"Product"> | Decimal | DecimalJsLike | number | string
    tags?: JsonFilter<"Product">
    rating?: FloatFilter<"Product"> | number
    reviewCount?: IntFilter<"Product"> | number
    status?: StringFilter<"Product"> | string
    isFeatured?: BoolFilter<"Product"> | boolean
    isNew?: BoolFilter<"Product"> | boolean
    onSale?: BoolFilter<"Product"> | boolean
    salePercentage?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    salePrice?: DecimalNullableFilter<"Product"> | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    saleEndDate?: DateTimeNullableFilter<"Product"> | Date | string | null
    created_at?: DateTimeFilter<"Product"> | Date | string
    created_by?: StringFilter<"Product"> | string
    created_ip?: StringNullableFilter<"Product"> | string | null
    updated_at?: DateTimeFilter<"Product"> | Date | string
    updated_by?: StringNullableFilter<"Product"> | string | null
    updated_ip?: StringNullableFilter<"Product"> | string | null
    company_id?: StringFilter<"Product"> | string
    categoryId?: StringFilter<"Product"> | string
    subcategoryId?: StringFilter<"Product"> | string
    brandId?: StringFilter<"Product"> | string
    sellerId?: StringFilter<"Product"> | string
    specialOfferId?: StringNullableFilter<"Product"> | string | null
  }

  export type CategoryCreateWithoutSubcategoriesInput = {
    id?: string
    name: string
    slug: string
    image?: string | null
    icon?: string | null
    featured?: boolean
    productCount?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    products?: ProductCreateNestedManyWithoutCategoryInput
  }

  export type CategoryUncheckedCreateWithoutSubcategoriesInput = {
    id?: string
    name: string
    slug: string
    image?: string | null
    icon?: string | null
    featured?: boolean
    productCount?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    products?: ProductUncheckedCreateNestedManyWithoutCategoryInput
  }

  export type CategoryCreateOrConnectWithoutSubcategoriesInput = {
    where: CategoryWhereUniqueInput
    create: XOR<CategoryCreateWithoutSubcategoriesInput, CategoryUncheckedCreateWithoutSubcategoriesInput>
  }

  export type ProductCreateWithoutSubcategoryInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    seller: SellerCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    Wishlist?: WishlistCreateNestedManyWithoutProductInput
    SpecialOffer?: SpecialOfferCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutSubcategoryInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    brandId: string
    sellerId: string
    specialOfferId?: string | null
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutSubcategoryInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutSubcategoryInput, ProductUncheckedCreateWithoutSubcategoryInput>
  }

  export type ProductCreateManySubcategoryInputEnvelope = {
    data: ProductCreateManySubcategoryInput | ProductCreateManySubcategoryInput[]
    skipDuplicates?: boolean
  }

  export type CategoryUpsertWithoutSubcategoriesInput = {
    update: XOR<CategoryUpdateWithoutSubcategoriesInput, CategoryUncheckedUpdateWithoutSubcategoriesInput>
    create: XOR<CategoryCreateWithoutSubcategoriesInput, CategoryUncheckedCreateWithoutSubcategoriesInput>
    where?: CategoryWhereInput
  }

  export type CategoryUpdateToOneWithWhereWithoutSubcategoriesInput = {
    where?: CategoryWhereInput
    data: XOR<CategoryUpdateWithoutSubcategoriesInput, CategoryUncheckedUpdateWithoutSubcategoriesInput>
  }

  export type CategoryUpdateWithoutSubcategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    featured?: BoolFieldUpdateOperationsInput | boolean
    productCount?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    products?: ProductUpdateManyWithoutCategoryNestedInput
  }

  export type CategoryUncheckedUpdateWithoutSubcategoriesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    icon?: NullableStringFieldUpdateOperationsInput | string | null
    featured?: BoolFieldUpdateOperationsInput | boolean
    productCount?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    products?: ProductUncheckedUpdateManyWithoutCategoryNestedInput
  }

  export type ProductUpsertWithWhereUniqueWithoutSubcategoryInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutSubcategoryInput, ProductUncheckedUpdateWithoutSubcategoryInput>
    create: XOR<ProductCreateWithoutSubcategoryInput, ProductUncheckedCreateWithoutSubcategoryInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutSubcategoryInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutSubcategoryInput, ProductUncheckedUpdateWithoutSubcategoryInput>
  }

  export type ProductUpdateManyWithWhereWithoutSubcategoryInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutSubcategoryInput>
  }

  export type ProductCreateWithoutBrandInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProductsInput
    subcategory: SubcategoryCreateNestedOneWithoutProductsInput
    seller: SellerCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    Wishlist?: WishlistCreateNestedManyWithoutProductInput
    SpecialOffer?: SpecialOfferCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutBrandInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    sellerId: string
    specialOfferId?: string | null
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutBrandInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput>
  }

  export type ProductCreateManyBrandInputEnvelope = {
    data: ProductCreateManyBrandInput | ProductCreateManyBrandInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutBrandInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutBrandInput, ProductUncheckedUpdateWithoutBrandInput>
    create: XOR<ProductCreateWithoutBrandInput, ProductUncheckedCreateWithoutBrandInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutBrandInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutBrandInput, ProductUncheckedUpdateWithoutBrandInput>
  }

  export type ProductUpdateManyWithWhereWithoutBrandInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutBrandInput>
  }

  export type ProductCreateWithoutAttributesInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProductsInput
    subcategory: SubcategoryCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    seller: SellerCreateNestedOneWithoutProductsInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    Wishlist?: WishlistCreateNestedManyWithoutProductInput
    SpecialOffer?: SpecialOfferCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutAttributesInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    brandId: string
    sellerId: string
    specialOfferId?: string | null
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutAttributesInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutAttributesInput, ProductUncheckedCreateWithoutAttributesInput>
  }

  export type ProductUpsertWithoutAttributesInput = {
    update: XOR<ProductUpdateWithoutAttributesInput, ProductUncheckedUpdateWithoutAttributesInput>
    create: XOR<ProductCreateWithoutAttributesInput, ProductUncheckedCreateWithoutAttributesInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutAttributesInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutAttributesInput, ProductUncheckedUpdateWithoutAttributesInput>
  }

  export type ProductUpdateWithoutAttributesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProductsNestedInput
    subcategory?: SubcategoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    seller?: SellerUpdateOneRequiredWithoutProductsNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUpdateManyWithoutProductNestedInput
    SpecialOffer?: SpecialOfferUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutAttributesInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateWithoutVariantsInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProductsInput
    subcategory: SubcategoryCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    seller: SellerCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    Wishlist?: WishlistCreateNestedManyWithoutProductInput
    SpecialOffer?: SpecialOfferCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutVariantsInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    brandId: string
    sellerId: string
    specialOfferId?: string | null
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutVariantsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutVariantsInput, ProductUncheckedCreateWithoutVariantsInput>
  }

  export type ProductUpsertWithoutVariantsInput = {
    update: XOR<ProductUpdateWithoutVariantsInput, ProductUncheckedUpdateWithoutVariantsInput>
    create: XOR<ProductCreateWithoutVariantsInput, ProductUncheckedCreateWithoutVariantsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutVariantsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutVariantsInput, ProductUncheckedUpdateWithoutVariantsInput>
  }

  export type ProductUpdateWithoutVariantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProductsNestedInput
    subcategory?: SubcategoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    seller?: SellerUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUpdateManyWithoutProductNestedInput
    SpecialOffer?: SpecialOfferUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutVariantsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateWithoutSellerInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProductsInput
    subcategory: SubcategoryCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    Wishlist?: WishlistCreateNestedManyWithoutProductInput
    SpecialOffer?: SpecialOfferCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutSellerInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    brandId: string
    specialOfferId?: string | null
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutSellerInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutSellerInput, ProductUncheckedCreateWithoutSellerInput>
  }

  export type ProductCreateManySellerInputEnvelope = {
    data: ProductCreateManySellerInput | ProductCreateManySellerInput[]
    skipDuplicates?: boolean
  }

  export type CompanyCreateWithoutSellerInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    is_seller?: boolean
    is_verified?: boolean
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    CompanyAdditionalInfo?: CompanyAdditionalInfoCreateNestedManyWithoutCompanyInput
  }

  export type CompanyUncheckedCreateWithoutSellerInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    is_seller?: boolean
    is_verified?: boolean
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    CompanyAdditionalInfo?: CompanyAdditionalInfoUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type CompanyCreateOrConnectWithoutSellerInput = {
    where: CompanyWhereUniqueInput
    create: XOR<CompanyCreateWithoutSellerInput, CompanyUncheckedCreateWithoutSellerInput>
  }

  export type CompanyCreateManySellerInputEnvelope = {
    data: CompanyCreateManySellerInput | CompanyCreateManySellerInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutSellerInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutSellerInput, ProductUncheckedUpdateWithoutSellerInput>
    create: XOR<ProductCreateWithoutSellerInput, ProductUncheckedCreateWithoutSellerInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutSellerInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutSellerInput, ProductUncheckedUpdateWithoutSellerInput>
  }

  export type ProductUpdateManyWithWhereWithoutSellerInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutSellerInput>
  }

  export type CompanyUpsertWithWhereUniqueWithoutSellerInput = {
    where: CompanyWhereUniqueInput
    update: XOR<CompanyUpdateWithoutSellerInput, CompanyUncheckedUpdateWithoutSellerInput>
    create: XOR<CompanyCreateWithoutSellerInput, CompanyUncheckedCreateWithoutSellerInput>
  }

  export type CompanyUpdateWithWhereUniqueWithoutSellerInput = {
    where: CompanyWhereUniqueInput
    data: XOR<CompanyUpdateWithoutSellerInput, CompanyUncheckedUpdateWithoutSellerInput>
  }

  export type CompanyUpdateManyWithWhereWithoutSellerInput = {
    where: CompanyScalarWhereInput
    data: XOR<CompanyUpdateManyMutationInput, CompanyUncheckedUpdateManyWithoutSellerInput>
  }

  export type CompanyScalarWhereInput = {
    AND?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
    OR?: CompanyScalarWhereInput[]
    NOT?: CompanyScalarWhereInput | CompanyScalarWhereInput[]
    id?: StringFilter<"Company"> | string
    company_name?: StringFilter<"Company"> | string
    company_short_name?: StringNullableFilter<"Company"> | string | null
    company_code?: StringNullableFilter<"Company"> | string | null
    registration_number?: StringFilter<"Company"> | string
    tax_id?: StringFilter<"Company"> | string
    address?: StringNullableFilter<"Company"> | string | null
    city?: StringNullableFilter<"Company"> | string | null
    state?: StringNullableFilter<"Company"> | string | null
    country?: StringNullableFilter<"Company"> | string | null
    postal_code?: StringNullableFilter<"Company"> | string | null
    phone?: StringFilter<"Company"> | string
    email?: StringFilter<"Company"> | string
    website?: StringNullableFilter<"Company"> | string | null
    is_seller?: BoolFilter<"Company"> | boolean
    is_verified?: BoolFilter<"Company"> | boolean
    seller_id?: StringNullableFilter<"Company"> | string | null
    industry?: StringNullableFilter<"Company"> | string | null
    number_of_employees?: IntNullableFilter<"Company"> | number | null
    annual_revenue?: DecimalNullableFilter<"Company"> | Decimal | DecimalJsLike | number | string | null
    description?: StringNullableFilter<"Company"> | string | null
    is_active?: BoolFilter<"Company"> | boolean
    created_at?: DateTimeFilter<"Company"> | Date | string
    created_by?: StringFilter<"Company"> | string
    created_ip?: StringNullableFilter<"Company"> | string | null
    updated_at?: DateTimeFilter<"Company"> | Date | string
    updated_by?: StringNullableFilter<"Company"> | string | null
    updated_ip?: StringNullableFilter<"Company"> | string | null
  }

  export type ProductCreateWithoutReviewsInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProductsInput
    subcategory: SubcategoryCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    seller: SellerCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    Wishlist?: WishlistCreateNestedManyWithoutProductInput
    SpecialOffer?: SpecialOfferCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutReviewsInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    brandId: string
    sellerId: string
    specialOfferId?: string | null
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutReviewsInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
  }

  export type ProductUpsertWithoutReviewsInput = {
    update: XOR<ProductUpdateWithoutReviewsInput, ProductUncheckedUpdateWithoutReviewsInput>
    create: XOR<ProductCreateWithoutReviewsInput, ProductUncheckedCreateWithoutReviewsInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutReviewsInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutReviewsInput, ProductUncheckedUpdateWithoutReviewsInput>
  }

  export type ProductUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProductsNestedInput
    subcategory?: SubcategoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    seller?: SellerUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUpdateManyWithoutProductNestedInput
    SpecialOffer?: SpecialOfferUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutReviewsInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutProductNestedInput
  }

  export type OrderCreateWithoutCustomerInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemCreateNestedManyWithoutOrderInput
    PaymentTransaction?: PaymentTransactionCreateNestedManyWithoutOrderInput
    coupon?: CouponCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCustomerInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    coupon_id?: string | null
    discount_amount?: Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    PaymentTransaction?: PaymentTransactionUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderCreateManyCustomerInputEnvelope = {
    data: OrderCreateManyCustomerInput | OrderCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type CustomerRefreshTokenCreateWithoutCustomerInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type CustomerRefreshTokenUncheckedCreateWithoutCustomerInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type CustomerRefreshTokenCreateOrConnectWithoutCustomerInput = {
    where: CustomerRefreshTokenWhereUniqueInput
    create: XOR<CustomerRefreshTokenCreateWithoutCustomerInput, CustomerRefreshTokenUncheckedCreateWithoutCustomerInput>
  }

  export type CustomerRefreshTokenCreateManyCustomerInputEnvelope = {
    data: CustomerRefreshTokenCreateManyCustomerInput | CustomerRefreshTokenCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type CustomerAddressCreateWithoutCustomerInput = {
    id?: string
    label: string
    firstName: string
    lastName: string
    phone: string
    email?: string | null
    address: string
    apartment?: string | null
    city: string
    state: string
    country: string
    postalCode: string
    isDefault?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CustomerAddressUncheckedCreateWithoutCustomerInput = {
    id?: string
    label: string
    firstName: string
    lastName: string
    phone: string
    email?: string | null
    address: string
    apartment?: string | null
    city: string
    state: string
    country: string
    postalCode: string
    isDefault?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CustomerAddressCreateOrConnectWithoutCustomerInput = {
    where: CustomerAddressWhereUniqueInput
    create: XOR<CustomerAddressCreateWithoutCustomerInput, CustomerAddressUncheckedCreateWithoutCustomerInput>
  }

  export type CustomerAddressCreateManyCustomerInputEnvelope = {
    data: CustomerAddressCreateManyCustomerInput | CustomerAddressCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type WishlistCreateWithoutUserInput = {
    id?: string
    created_at?: Date | string
    updated_at?: Date | string
    product: ProductCreateNestedOneWithoutWishlistInput
  }

  export type WishlistUncheckedCreateWithoutUserInput = {
    id?: string
    productId: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type WishlistCreateOrConnectWithoutUserInput = {
    where: WishlistWhereUniqueInput
    create: XOR<WishlistCreateWithoutUserInput, WishlistUncheckedCreateWithoutUserInput>
  }

  export type WishlistCreateManyUserInputEnvelope = {
    data: WishlistCreateManyUserInput | WishlistCreateManyUserInput[]
    skipDuplicates?: boolean
  }

  export type PendingOrderCreateWithoutCustomerInput = {
    id?: string
    transactionId: string
    addressId: string
    items: JsonNullValueInput | InputJsonValue
    couponCode?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    discount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    status: string
    paymentMethod?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    shippingChargeId?: string | null
    coupon?: CouponCreateNestedOneWithoutPendingOrderInput
  }

  export type PendingOrderUncheckedCreateWithoutCustomerInput = {
    id?: string
    transactionId: string
    addressId: string
    items: JsonNullValueInput | InputJsonValue
    couponId?: string | null
    couponCode?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    discount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    status: string
    paymentMethod?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    shippingChargeId?: string | null
  }

  export type PendingOrderCreateOrConnectWithoutCustomerInput = {
    where: PendingOrderWhereUniqueInput
    create: XOR<PendingOrderCreateWithoutCustomerInput, PendingOrderUncheckedCreateWithoutCustomerInput>
  }

  export type PendingOrderCreateManyCustomerInputEnvelope = {
    data: PendingOrderCreateManyCustomerInput | PendingOrderCreateManyCustomerInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
    create: XOR<OrderCreateWithoutCustomerInput, OrderUncheckedCreateWithoutCustomerInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutCustomerInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutCustomerInput, OrderUncheckedUpdateWithoutCustomerInput>
  }

  export type OrderUpdateManyWithWhereWithoutCustomerInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutCustomerInput>
  }

  export type OrderScalarWhereInput = {
    AND?: OrderScalarWhereInput | OrderScalarWhereInput[]
    OR?: OrderScalarWhereInput[]
    NOT?: OrderScalarWhereInput | OrderScalarWhereInput[]
    id?: StringFilter<"Order"> | string
    orderNumber?: StringFilter<"Order"> | string
    userId?: StringNullableFilter<"Order"> | string | null
    status?: EnumOrderStatusFilter<"Order"> | $Enums.OrderStatus
    totalAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    tax?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    discount?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFilter<"Order"> | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonFilter<"Order">
    billingAddress?: JsonFilter<"Order">
    paymentMethod?: StringFilter<"Order"> | string
    paymentStatus?: EnumPaymentStatusFilter<"Order"> | $Enums.PaymentStatus
    trackingNumber?: StringNullableFilter<"Order"> | string | null
    trackingStatus?: StringNullableFilter<"Order"> | string | null
    customerId?: StringNullableFilter<"Order"> | string | null
    created_at?: DateTimeFilter<"Order"> | Date | string
    created_by?: StringFilter<"Order"> | string
    created_ip?: StringNullableFilter<"Order"> | string | null
    updated_at?: DateTimeFilter<"Order"> | Date | string
    updated_by?: StringNullableFilter<"Order"> | string | null
    updated_ip?: StringNullableFilter<"Order"> | string | null
    company_id?: StringFilter<"Order"> | string
    paymentGateway?: StringNullableFilter<"Order"> | string | null
    sslcommerzTransactionId?: StringNullableFilter<"Order"> | string | null
    paypalOrderId?: StringNullableFilter<"Order"> | string | null
    paymentMetadata?: JsonNullableFilter<"Order">
    coupon_id?: StringNullableFilter<"Order"> | string | null
    discount_amount?: DecimalNullableFilter<"Order"> | Decimal | DecimalJsLike | number | string | null
  }

  export type CustomerRefreshTokenUpsertWithWhereUniqueWithoutCustomerInput = {
    where: CustomerRefreshTokenWhereUniqueInput
    update: XOR<CustomerRefreshTokenUpdateWithoutCustomerInput, CustomerRefreshTokenUncheckedUpdateWithoutCustomerInput>
    create: XOR<CustomerRefreshTokenCreateWithoutCustomerInput, CustomerRefreshTokenUncheckedCreateWithoutCustomerInput>
  }

  export type CustomerRefreshTokenUpdateWithWhereUniqueWithoutCustomerInput = {
    where: CustomerRefreshTokenWhereUniqueInput
    data: XOR<CustomerRefreshTokenUpdateWithoutCustomerInput, CustomerRefreshTokenUncheckedUpdateWithoutCustomerInput>
  }

  export type CustomerRefreshTokenUpdateManyWithWhereWithoutCustomerInput = {
    where: CustomerRefreshTokenScalarWhereInput
    data: XOR<CustomerRefreshTokenUpdateManyMutationInput, CustomerRefreshTokenUncheckedUpdateManyWithoutCustomerInput>
  }

  export type CustomerRefreshTokenScalarWhereInput = {
    AND?: CustomerRefreshTokenScalarWhereInput | CustomerRefreshTokenScalarWhereInput[]
    OR?: CustomerRefreshTokenScalarWhereInput[]
    NOT?: CustomerRefreshTokenScalarWhereInput | CustomerRefreshTokenScalarWhereInput[]
    id?: StringFilter<"CustomerRefreshToken"> | string
    token?: StringFilter<"CustomerRefreshToken"> | string
    customerId?: StringFilter<"CustomerRefreshToken"> | string
    expiresAt?: DateTimeFilter<"CustomerRefreshToken"> | Date | string
    createdAt?: DateTimeFilter<"CustomerRefreshToken"> | Date | string
    isRevoked?: BoolFilter<"CustomerRefreshToken"> | boolean
  }

  export type CustomerAddressUpsertWithWhereUniqueWithoutCustomerInput = {
    where: CustomerAddressWhereUniqueInput
    update: XOR<CustomerAddressUpdateWithoutCustomerInput, CustomerAddressUncheckedUpdateWithoutCustomerInput>
    create: XOR<CustomerAddressCreateWithoutCustomerInput, CustomerAddressUncheckedCreateWithoutCustomerInput>
  }

  export type CustomerAddressUpdateWithWhereUniqueWithoutCustomerInput = {
    where: CustomerAddressWhereUniqueInput
    data: XOR<CustomerAddressUpdateWithoutCustomerInput, CustomerAddressUncheckedUpdateWithoutCustomerInput>
  }

  export type CustomerAddressUpdateManyWithWhereWithoutCustomerInput = {
    where: CustomerAddressScalarWhereInput
    data: XOR<CustomerAddressUpdateManyMutationInput, CustomerAddressUncheckedUpdateManyWithoutCustomerInput>
  }

  export type CustomerAddressScalarWhereInput = {
    AND?: CustomerAddressScalarWhereInput | CustomerAddressScalarWhereInput[]
    OR?: CustomerAddressScalarWhereInput[]
    NOT?: CustomerAddressScalarWhereInput | CustomerAddressScalarWhereInput[]
    id?: StringFilter<"CustomerAddress"> | string
    customerId?: StringNullableFilter<"CustomerAddress"> | string | null
    label?: StringFilter<"CustomerAddress"> | string
    firstName?: StringFilter<"CustomerAddress"> | string
    lastName?: StringFilter<"CustomerAddress"> | string
    phone?: StringFilter<"CustomerAddress"> | string
    email?: StringNullableFilter<"CustomerAddress"> | string | null
    address?: StringFilter<"CustomerAddress"> | string
    apartment?: StringNullableFilter<"CustomerAddress"> | string | null
    city?: StringFilter<"CustomerAddress"> | string
    state?: StringFilter<"CustomerAddress"> | string
    country?: StringFilter<"CustomerAddress"> | string
    postalCode?: StringFilter<"CustomerAddress"> | string
    isDefault?: BoolFilter<"CustomerAddress"> | boolean
    created_at?: DateTimeFilter<"CustomerAddress"> | Date | string
    created_by?: StringFilter<"CustomerAddress"> | string
    created_ip?: StringNullableFilter<"CustomerAddress"> | string | null
    updated_at?: DateTimeFilter<"CustomerAddress"> | Date | string
    updated_by?: StringNullableFilter<"CustomerAddress"> | string | null
    updated_ip?: StringNullableFilter<"CustomerAddress"> | string | null
  }

  export type WishlistUpsertWithWhereUniqueWithoutUserInput = {
    where: WishlistWhereUniqueInput
    update: XOR<WishlistUpdateWithoutUserInput, WishlistUncheckedUpdateWithoutUserInput>
    create: XOR<WishlistCreateWithoutUserInput, WishlistUncheckedCreateWithoutUserInput>
  }

  export type WishlistUpdateWithWhereUniqueWithoutUserInput = {
    where: WishlistWhereUniqueInput
    data: XOR<WishlistUpdateWithoutUserInput, WishlistUncheckedUpdateWithoutUserInput>
  }

  export type WishlistUpdateManyWithWhereWithoutUserInput = {
    where: WishlistScalarWhereInput
    data: XOR<WishlistUpdateManyMutationInput, WishlistUncheckedUpdateManyWithoutUserInput>
  }

  export type PendingOrderUpsertWithWhereUniqueWithoutCustomerInput = {
    where: PendingOrderWhereUniqueInput
    update: XOR<PendingOrderUpdateWithoutCustomerInput, PendingOrderUncheckedUpdateWithoutCustomerInput>
    create: XOR<PendingOrderCreateWithoutCustomerInput, PendingOrderUncheckedCreateWithoutCustomerInput>
  }

  export type PendingOrderUpdateWithWhereUniqueWithoutCustomerInput = {
    where: PendingOrderWhereUniqueInput
    data: XOR<PendingOrderUpdateWithoutCustomerInput, PendingOrderUncheckedUpdateWithoutCustomerInput>
  }

  export type PendingOrderUpdateManyWithWhereWithoutCustomerInput = {
    where: PendingOrderScalarWhereInput
    data: XOR<PendingOrderUpdateManyMutationInput, PendingOrderUncheckedUpdateManyWithoutCustomerInput>
  }

  export type PendingOrderScalarWhereInput = {
    AND?: PendingOrderScalarWhereInput | PendingOrderScalarWhereInput[]
    OR?: PendingOrderScalarWhereInput[]
    NOT?: PendingOrderScalarWhereInput | PendingOrderScalarWhereInput[]
    id?: StringFilter<"PendingOrder"> | string
    transactionId?: StringFilter<"PendingOrder"> | string
    customerId?: StringNullableFilter<"PendingOrder"> | string | null
    addressId?: StringFilter<"PendingOrder"> | string
    items?: JsonFilter<"PendingOrder">
    couponId?: StringNullableFilter<"PendingOrder"> | string | null
    couponCode?: StringNullableFilter<"PendingOrder"> | string | null
    subtotal?: DecimalFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    discount?: DecimalFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    total?: DecimalFilter<"PendingOrder"> | Decimal | DecimalJsLike | number | string
    status?: StringFilter<"PendingOrder"> | string
    paymentMethod?: StringFilter<"PendingOrder"> | string
    created_at?: DateTimeFilter<"PendingOrder"> | Date | string
    created_by?: StringFilter<"PendingOrder"> | string
    created_ip?: StringNullableFilter<"PendingOrder"> | string | null
    updated_at?: DateTimeFilter<"PendingOrder"> | Date | string
    updated_by?: StringNullableFilter<"PendingOrder"> | string | null
    updated_ip?: StringNullableFilter<"PendingOrder"> | string | null
    shippingChargeId?: StringNullableFilter<"PendingOrder"> | string | null
  }

  export type CustomerCreateWithoutRefresh_tokensInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    orders?: OrderCreateNestedManyWithoutCustomerInput
    addresses?: CustomerAddressCreateNestedManyWithoutCustomerInput
    Wishlist?: WishlistCreateNestedManyWithoutUserInput
    PendingOrder?: PendingOrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutRefresh_tokensInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    addresses?: CustomerAddressUncheckedCreateNestedManyWithoutCustomerInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutUserInput
    PendingOrder?: PendingOrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutRefresh_tokensInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutRefresh_tokensInput, CustomerUncheckedCreateWithoutRefresh_tokensInput>
  }

  export type CustomerUpsertWithoutRefresh_tokensInput = {
    update: XOR<CustomerUpdateWithoutRefresh_tokensInput, CustomerUncheckedUpdateWithoutRefresh_tokensInput>
    create: XOR<CustomerCreateWithoutRefresh_tokensInput, CustomerUncheckedCreateWithoutRefresh_tokensInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutRefresh_tokensInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutRefresh_tokensInput, CustomerUncheckedUpdateWithoutRefresh_tokensInput>
  }

  export type CustomerUpdateWithoutRefresh_tokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutCustomerNestedInput
    addresses?: CustomerAddressUpdateManyWithoutCustomerNestedInput
    Wishlist?: WishlistUpdateManyWithoutUserNestedInput
    PendingOrder?: PendingOrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutRefresh_tokensInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    addresses?: CustomerAddressUncheckedUpdateManyWithoutCustomerNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutUserNestedInput
    PendingOrder?: PendingOrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type OrderItemCreateWithoutOrderInput = {
    id?: string
    productId: string
    variantId?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type OrderItemUncheckedCreateWithoutOrderInput = {
    id?: string
    productId: string
    variantId?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type OrderItemCreateOrConnectWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemCreateManyOrderInputEnvelope = {
    data: OrderItemCreateManyOrderInput | OrderItemCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type CustomerCreateWithoutOrdersInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    refresh_tokens?: CustomerRefreshTokenCreateNestedManyWithoutCustomerInput
    addresses?: CustomerAddressCreateNestedManyWithoutCustomerInput
    Wishlist?: WishlistCreateNestedManyWithoutUserInput
    PendingOrder?: PendingOrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutOrdersInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    refresh_tokens?: CustomerRefreshTokenUncheckedCreateNestedManyWithoutCustomerInput
    addresses?: CustomerAddressUncheckedCreateNestedManyWithoutCustomerInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutUserInput
    PendingOrder?: PendingOrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutOrdersInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutOrdersInput, CustomerUncheckedCreateWithoutOrdersInput>
  }

  export type PaymentTransactionCreateWithoutOrderInput = {
    id?: string
    transactionId: string
    gateway: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type PaymentTransactionUncheckedCreateWithoutOrderInput = {
    id?: string
    transactionId: string
    gateway: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type PaymentTransactionCreateOrConnectWithoutOrderInput = {
    where: PaymentTransactionWhereUniqueInput
    create: XOR<PaymentTransactionCreateWithoutOrderInput, PaymentTransactionUncheckedCreateWithoutOrderInput>
  }

  export type PaymentTransactionCreateManyOrderInputEnvelope = {
    data: PaymentTransactionCreateManyOrderInput | PaymentTransactionCreateManyOrderInput[]
    skipDuplicates?: boolean
  }

  export type CouponCreateWithoutOrderInput = {
    id?: string
    code: string
    description?: string | null
    discount_type?: string
    discount_amount: Decimal | DecimalJsLike | number | string
    minimum_purchase?: Decimal | DecimalJsLike | number | string | null
    maximum_discount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date: Date | string
    usage_limit?: number | null
    used_count?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    PendingOrder?: PendingOrderCreateNestedManyWithoutCouponInput
  }

  export type CouponUncheckedCreateWithoutOrderInput = {
    id?: string
    code: string
    description?: string | null
    discount_type?: string
    discount_amount: Decimal | DecimalJsLike | number | string
    minimum_purchase?: Decimal | DecimalJsLike | number | string | null
    maximum_discount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date: Date | string
    usage_limit?: number | null
    used_count?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    PendingOrder?: PendingOrderUncheckedCreateNestedManyWithoutCouponInput
  }

  export type CouponCreateOrConnectWithoutOrderInput = {
    where: CouponWhereUniqueInput
    create: XOR<CouponCreateWithoutOrderInput, CouponUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemUpsertWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    update: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
    create: XOR<OrderItemCreateWithoutOrderInput, OrderItemUncheckedCreateWithoutOrderInput>
  }

  export type OrderItemUpdateWithWhereUniqueWithoutOrderInput = {
    where: OrderItemWhereUniqueInput
    data: XOR<OrderItemUpdateWithoutOrderInput, OrderItemUncheckedUpdateWithoutOrderInput>
  }

  export type OrderItemUpdateManyWithWhereWithoutOrderInput = {
    where: OrderItemScalarWhereInput
    data: XOR<OrderItemUpdateManyMutationInput, OrderItemUncheckedUpdateManyWithoutOrderInput>
  }

  export type OrderItemScalarWhereInput = {
    AND?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    OR?: OrderItemScalarWhereInput[]
    NOT?: OrderItemScalarWhereInput | OrderItemScalarWhereInput[]
    id?: StringFilter<"OrderItem"> | string
    orderId?: StringFilter<"OrderItem"> | string
    productId?: StringFilter<"OrderItem"> | string
    variantId?: StringNullableFilter<"OrderItem"> | string | null
    quantity?: IntFilter<"OrderItem"> | number
    unitPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFilter<"OrderItem"> | Decimal | DecimalJsLike | number | string
    productName?: StringFilter<"OrderItem"> | string
    variantAttributes?: JsonNullableFilter<"OrderItem">
    created_at?: DateTimeFilter<"OrderItem"> | Date | string
    created_by?: StringFilter<"OrderItem"> | string
    created_ip?: StringNullableFilter<"OrderItem"> | string | null
    updated_at?: DateTimeFilter<"OrderItem"> | Date | string
    updated_by?: StringNullableFilter<"OrderItem"> | string | null
    updated_ip?: StringNullableFilter<"OrderItem"> | string | null
    company_id?: StringFilter<"OrderItem"> | string
  }

  export type CustomerUpsertWithoutOrdersInput = {
    update: XOR<CustomerUpdateWithoutOrdersInput, CustomerUncheckedUpdateWithoutOrdersInput>
    create: XOR<CustomerCreateWithoutOrdersInput, CustomerUncheckedCreateWithoutOrdersInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutOrdersInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutOrdersInput, CustomerUncheckedUpdateWithoutOrdersInput>
  }

  export type CustomerUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_tokens?: CustomerRefreshTokenUpdateManyWithoutCustomerNestedInput
    addresses?: CustomerAddressUpdateManyWithoutCustomerNestedInput
    Wishlist?: WishlistUpdateManyWithoutUserNestedInput
    PendingOrder?: PendingOrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutOrdersInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    refresh_tokens?: CustomerRefreshTokenUncheckedUpdateManyWithoutCustomerNestedInput
    addresses?: CustomerAddressUncheckedUpdateManyWithoutCustomerNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutUserNestedInput
    PendingOrder?: PendingOrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type PaymentTransactionUpsertWithWhereUniqueWithoutOrderInput = {
    where: PaymentTransactionWhereUniqueInput
    update: XOR<PaymentTransactionUpdateWithoutOrderInput, PaymentTransactionUncheckedUpdateWithoutOrderInput>
    create: XOR<PaymentTransactionCreateWithoutOrderInput, PaymentTransactionUncheckedCreateWithoutOrderInput>
  }

  export type PaymentTransactionUpdateWithWhereUniqueWithoutOrderInput = {
    where: PaymentTransactionWhereUniqueInput
    data: XOR<PaymentTransactionUpdateWithoutOrderInput, PaymentTransactionUncheckedUpdateWithoutOrderInput>
  }

  export type PaymentTransactionUpdateManyWithWhereWithoutOrderInput = {
    where: PaymentTransactionScalarWhereInput
    data: XOR<PaymentTransactionUpdateManyMutationInput, PaymentTransactionUncheckedUpdateManyWithoutOrderInput>
  }

  export type PaymentTransactionScalarWhereInput = {
    AND?: PaymentTransactionScalarWhereInput | PaymentTransactionScalarWhereInput[]
    OR?: PaymentTransactionScalarWhereInput[]
    NOT?: PaymentTransactionScalarWhereInput | PaymentTransactionScalarWhereInput[]
    id?: StringFilter<"PaymentTransaction"> | string
    orderId?: StringNullableFilter<"PaymentTransaction"> | string | null
    transactionId?: StringFilter<"PaymentTransaction"> | string
    gateway?: StringFilter<"PaymentTransaction"> | string
    amount?: DecimalFilter<"PaymentTransaction"> | Decimal | DecimalJsLike | number | string
    currency?: StringFilter<"PaymentTransaction"> | string
    status?: StringFilter<"PaymentTransaction"> | string
    metadata?: JsonNullableFilter<"PaymentTransaction">
    created_at?: DateTimeFilter<"PaymentTransaction"> | Date | string
    created_by?: StringFilter<"PaymentTransaction"> | string
    created_ip?: StringNullableFilter<"PaymentTransaction"> | string | null
    updated_at?: DateTimeFilter<"PaymentTransaction"> | Date | string
    updated_by?: StringNullableFilter<"PaymentTransaction"> | string | null
    updated_ip?: StringNullableFilter<"PaymentTransaction"> | string | null
  }

  export type CouponUpsertWithoutOrderInput = {
    update: XOR<CouponUpdateWithoutOrderInput, CouponUncheckedUpdateWithoutOrderInput>
    create: XOR<CouponCreateWithoutOrderInput, CouponUncheckedCreateWithoutOrderInput>
    where?: CouponWhereInput
  }

  export type CouponUpdateToOneWithWhereWithoutOrderInput = {
    where?: CouponWhereInput
    data: XOR<CouponUpdateWithoutOrderInput, CouponUncheckedUpdateWithoutOrderInput>
  }

  export type CouponUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    discount_type?: StringFieldUpdateOperationsInput | string
    discount_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimum_purchase?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maximum_discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    used_count?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    PendingOrder?: PendingOrderUpdateManyWithoutCouponNestedInput
  }

  export type CouponUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    discount_type?: StringFieldUpdateOperationsInput | string
    discount_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimum_purchase?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maximum_discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    used_count?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    PendingOrder?: PendingOrderUncheckedUpdateManyWithoutCouponNestedInput
  }

  export type OrderCreateWithoutOrderItemsInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: Decimal | DecimalJsLike | number | string | null
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    PaymentTransaction?: PaymentTransactionCreateNestedManyWithoutOrderInput
    coupon?: CouponCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutOrderItemsInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    customerId?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    coupon_id?: string | null
    discount_amount?: Decimal | DecimalJsLike | number | string | null
    PaymentTransaction?: PaymentTransactionUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutOrderItemsInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutOrderItemsInput, OrderUncheckedCreateWithoutOrderItemsInput>
  }

  export type OrderUpsertWithoutOrderItemsInput = {
    update: XOR<OrderUpdateWithoutOrderItemsInput, OrderUncheckedUpdateWithoutOrderItemsInput>
    create: XOR<OrderCreateWithoutOrderItemsInput, OrderUncheckedCreateWithoutOrderItemsInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutOrderItemsInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutOrderItemsInput, OrderUncheckedUpdateWithoutOrderItemsInput>
  }

  export type OrderUpdateWithoutOrderItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    PaymentTransaction?: PaymentTransactionUpdateManyWithoutOrderNestedInput
    coupon?: CouponUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutOrderItemsInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    coupon_id?: NullableStringFieldUpdateOperationsInput | string | null
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    PaymentTransaction?: PaymentTransactionUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type UserCreateWithoutUserSettingsInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupCreateNestedManyWithoutUserInput
    RefreshToken?: RefreshTokenCreateNestedManyWithoutUserInput
  }

  export type UserUncheckedCreateWithoutUserSettingsInput = {
    id?: string
    fullname: string
    username: string
    email: string
    password: string
    address?: string | null
    phone: string
    is_active?: boolean | null
    is_admin?: boolean | null
    is_password_reset?: boolean | null
    user_type: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    UserGroups?: UserGroupUncheckedCreateNestedManyWithoutUserInput
    RefreshToken?: RefreshTokenUncheckedCreateNestedManyWithoutUserInput
  }

  export type UserCreateOrConnectWithoutUserSettingsInput = {
    where: UserWhereUniqueInput
    create: XOR<UserCreateWithoutUserSettingsInput, UserUncheckedCreateWithoutUserSettingsInput>
  }

  export type UserUpsertWithoutUserSettingsInput = {
    update: XOR<UserUpdateWithoutUserSettingsInput, UserUncheckedUpdateWithoutUserSettingsInput>
    create: XOR<UserCreateWithoutUserSettingsInput, UserUncheckedCreateWithoutUserSettingsInput>
    where?: UserWhereInput
  }

  export type UserUpdateToOneWithWhereWithoutUserSettingsInput = {
    where?: UserWhereInput
    data: XOR<UserUpdateWithoutUserSettingsInput, UserUncheckedUpdateWithoutUserSettingsInput>
  }

  export type UserUpdateWithoutUserSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUpdateManyWithoutUserNestedInput
    RefreshToken?: RefreshTokenUpdateManyWithoutUserNestedInput
  }

  export type UserUncheckedUpdateWithoutUserSettingsInput = {
    id?: StringFieldUpdateOperationsInput | string
    fullname?: StringFieldUpdateOperationsInput | string
    username?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    is_active?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_admin?: NullableBoolFieldUpdateOperationsInput | boolean | null
    is_password_reset?: NullableBoolFieldUpdateOperationsInput | boolean | null
    user_type?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    UserGroups?: UserGroupUncheckedUpdateManyWithoutUserNestedInput
    RefreshToken?: RefreshTokenUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CustomerCreateWithoutAddressesInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    orders?: OrderCreateNestedManyWithoutCustomerInput
    refresh_tokens?: CustomerRefreshTokenCreateNestedManyWithoutCustomerInput
    Wishlist?: WishlistCreateNestedManyWithoutUserInput
    PendingOrder?: PendingOrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutAddressesInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    refresh_tokens?: CustomerRefreshTokenUncheckedCreateNestedManyWithoutCustomerInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutUserInput
    PendingOrder?: PendingOrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutAddressesInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutAddressesInput, CustomerUncheckedCreateWithoutAddressesInput>
  }

  export type CustomerUpsertWithoutAddressesInput = {
    update: XOR<CustomerUpdateWithoutAddressesInput, CustomerUncheckedUpdateWithoutAddressesInput>
    create: XOR<CustomerCreateWithoutAddressesInput, CustomerUncheckedCreateWithoutAddressesInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutAddressesInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutAddressesInput, CustomerUncheckedUpdateWithoutAddressesInput>
  }

  export type CustomerUpdateWithoutAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutCustomerNestedInput
    refresh_tokens?: CustomerRefreshTokenUpdateManyWithoutCustomerNestedInput
    Wishlist?: WishlistUpdateManyWithoutUserNestedInput
    PendingOrder?: PendingOrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutAddressesInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    refresh_tokens?: CustomerRefreshTokenUncheckedUpdateManyWithoutCustomerNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutUserNestedInput
    PendingOrder?: PendingOrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerCreateWithoutPendingOrderInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    orders?: OrderCreateNestedManyWithoutCustomerInput
    refresh_tokens?: CustomerRefreshTokenCreateNestedManyWithoutCustomerInput
    addresses?: CustomerAddressCreateNestedManyWithoutCustomerInput
    Wishlist?: WishlistCreateNestedManyWithoutUserInput
  }

  export type CustomerUncheckedCreateWithoutPendingOrderInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    refresh_tokens?: CustomerRefreshTokenUncheckedCreateNestedManyWithoutCustomerInput
    addresses?: CustomerAddressUncheckedCreateNestedManyWithoutCustomerInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutUserInput
  }

  export type CustomerCreateOrConnectWithoutPendingOrderInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutPendingOrderInput, CustomerUncheckedCreateWithoutPendingOrderInput>
  }

  export type CouponCreateWithoutPendingOrderInput = {
    id?: string
    code: string
    description?: string | null
    discount_type?: string
    discount_amount: Decimal | DecimalJsLike | number | string
    minimum_purchase?: Decimal | DecimalJsLike | number | string | null
    maximum_discount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date: Date | string
    usage_limit?: number | null
    used_count?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    Order?: OrderCreateNestedManyWithoutCouponInput
  }

  export type CouponUncheckedCreateWithoutPendingOrderInput = {
    id?: string
    code: string
    description?: string | null
    discount_type?: string
    discount_amount: Decimal | DecimalJsLike | number | string
    minimum_purchase?: Decimal | DecimalJsLike | number | string | null
    maximum_discount?: Decimal | DecimalJsLike | number | string | null
    start_date: Date | string
    end_date: Date | string
    usage_limit?: number | null
    used_count?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    Order?: OrderUncheckedCreateNestedManyWithoutCouponInput
  }

  export type CouponCreateOrConnectWithoutPendingOrderInput = {
    where: CouponWhereUniqueInput
    create: XOR<CouponCreateWithoutPendingOrderInput, CouponUncheckedCreateWithoutPendingOrderInput>
  }

  export type CustomerUpsertWithoutPendingOrderInput = {
    update: XOR<CustomerUpdateWithoutPendingOrderInput, CustomerUncheckedUpdateWithoutPendingOrderInput>
    create: XOR<CustomerCreateWithoutPendingOrderInput, CustomerUncheckedCreateWithoutPendingOrderInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutPendingOrderInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutPendingOrderInput, CustomerUncheckedUpdateWithoutPendingOrderInput>
  }

  export type CustomerUpdateWithoutPendingOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutCustomerNestedInput
    refresh_tokens?: CustomerRefreshTokenUpdateManyWithoutCustomerNestedInput
    addresses?: CustomerAddressUpdateManyWithoutCustomerNestedInput
    Wishlist?: WishlistUpdateManyWithoutUserNestedInput
  }

  export type CustomerUncheckedUpdateWithoutPendingOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    refresh_tokens?: CustomerRefreshTokenUncheckedUpdateManyWithoutCustomerNestedInput
    addresses?: CustomerAddressUncheckedUpdateManyWithoutCustomerNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutUserNestedInput
  }

  export type CouponUpsertWithoutPendingOrderInput = {
    update: XOR<CouponUpdateWithoutPendingOrderInput, CouponUncheckedUpdateWithoutPendingOrderInput>
    create: XOR<CouponCreateWithoutPendingOrderInput, CouponUncheckedCreateWithoutPendingOrderInput>
    where?: CouponWhereInput
  }

  export type CouponUpdateToOneWithWhereWithoutPendingOrderInput = {
    where?: CouponWhereInput
    data: XOR<CouponUpdateWithoutPendingOrderInput, CouponUncheckedUpdateWithoutPendingOrderInput>
  }

  export type CouponUpdateWithoutPendingOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    discount_type?: StringFieldUpdateOperationsInput | string
    discount_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimum_purchase?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maximum_discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    used_count?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    Order?: OrderUpdateManyWithoutCouponNestedInput
  }

  export type CouponUncheckedUpdateWithoutPendingOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    code?: StringFieldUpdateOperationsInput | string
    description?: NullableStringFieldUpdateOperationsInput | string | null
    discount_type?: StringFieldUpdateOperationsInput | string
    discount_amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    minimum_purchase?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    maximum_discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    start_date?: DateTimeFieldUpdateOperationsInput | Date | string
    end_date?: DateTimeFieldUpdateOperationsInput | Date | string
    usage_limit?: NullableIntFieldUpdateOperationsInput | number | null
    used_count?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    Order?: OrderUncheckedUpdateManyWithoutCouponNestedInput
  }

  export type OrderCreateWithoutPaymentTransactionInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    coupon?: CouponCreateNestedOneWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutPaymentTransactionInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    customerId?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    coupon_id?: string | null
    discount_amount?: Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutPaymentTransactionInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutPaymentTransactionInput, OrderUncheckedCreateWithoutPaymentTransactionInput>
  }

  export type OrderUpsertWithoutPaymentTransactionInput = {
    update: XOR<OrderUpdateWithoutPaymentTransactionInput, OrderUncheckedUpdateWithoutPaymentTransactionInput>
    create: XOR<OrderCreateWithoutPaymentTransactionInput, OrderUncheckedCreateWithoutPaymentTransactionInput>
    where?: OrderWhereInput
  }

  export type OrderUpdateToOneWithWhereWithoutPaymentTransactionInput = {
    where?: OrderWhereInput
    data: XOR<OrderUpdateWithoutPaymentTransactionInput, OrderUncheckedUpdateWithoutPaymentTransactionInput>
  }

  export type OrderUpdateWithoutPaymentTransactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    coupon?: CouponUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutPaymentTransactionInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    coupon_id?: NullableStringFieldUpdateOperationsInput | string | null
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type CustomerCreateWithoutWishlistInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    orders?: OrderCreateNestedManyWithoutCustomerInput
    refresh_tokens?: CustomerRefreshTokenCreateNestedManyWithoutCustomerInput
    addresses?: CustomerAddressCreateNestedManyWithoutCustomerInput
    PendingOrder?: PendingOrderCreateNestedManyWithoutCustomerInput
  }

  export type CustomerUncheckedCreateWithoutWishlistInput = {
    id?: string
    first_name: string
    last_name: string
    email: string
    phone?: string | null
    password: string
    is_active?: boolean
    remember_token?: string | null
    email_verified?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    orders?: OrderUncheckedCreateNestedManyWithoutCustomerInput
    refresh_tokens?: CustomerRefreshTokenUncheckedCreateNestedManyWithoutCustomerInput
    addresses?: CustomerAddressUncheckedCreateNestedManyWithoutCustomerInput
    PendingOrder?: PendingOrderUncheckedCreateNestedManyWithoutCustomerInput
  }

  export type CustomerCreateOrConnectWithoutWishlistInput = {
    where: CustomerWhereUniqueInput
    create: XOR<CustomerCreateWithoutWishlistInput, CustomerUncheckedCreateWithoutWishlistInput>
  }

  export type ProductCreateWithoutWishlistInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProductsInput
    subcategory: SubcategoryCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    seller: SellerCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    SpecialOffer?: SpecialOfferCreateNestedOneWithoutProductsInput
  }

  export type ProductUncheckedCreateWithoutWishlistInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    brandId: string
    sellerId: string
    specialOfferId?: string | null
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutWishlistInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutWishlistInput, ProductUncheckedCreateWithoutWishlistInput>
  }

  export type CustomerUpsertWithoutWishlistInput = {
    update: XOR<CustomerUpdateWithoutWishlistInput, CustomerUncheckedUpdateWithoutWishlistInput>
    create: XOR<CustomerCreateWithoutWishlistInput, CustomerUncheckedCreateWithoutWishlistInput>
    where?: CustomerWhereInput
  }

  export type CustomerUpdateToOneWithWhereWithoutWishlistInput = {
    where?: CustomerWhereInput
    data: XOR<CustomerUpdateWithoutWishlistInput, CustomerUncheckedUpdateWithoutWishlistInput>
  }

  export type CustomerUpdateWithoutWishlistInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUpdateManyWithoutCustomerNestedInput
    refresh_tokens?: CustomerRefreshTokenUpdateManyWithoutCustomerNestedInput
    addresses?: CustomerAddressUpdateManyWithoutCustomerNestedInput
    PendingOrder?: PendingOrderUpdateManyWithoutCustomerNestedInput
  }

  export type CustomerUncheckedUpdateWithoutWishlistInput = {
    id?: StringFieldUpdateOperationsInput | string
    first_name?: StringFieldUpdateOperationsInput | string
    last_name?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    phone?: NullableStringFieldUpdateOperationsInput | string | null
    password?: StringFieldUpdateOperationsInput | string
    is_active?: BoolFieldUpdateOperationsInput | boolean
    remember_token?: NullableStringFieldUpdateOperationsInput | string | null
    email_verified?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    orders?: OrderUncheckedUpdateManyWithoutCustomerNestedInput
    refresh_tokens?: CustomerRefreshTokenUncheckedUpdateManyWithoutCustomerNestedInput
    addresses?: CustomerAddressUncheckedUpdateManyWithoutCustomerNestedInput
    PendingOrder?: PendingOrderUncheckedUpdateManyWithoutCustomerNestedInput
  }

  export type ProductUpsertWithoutWishlistInput = {
    update: XOR<ProductUpdateWithoutWishlistInput, ProductUncheckedUpdateWithoutWishlistInput>
    create: XOR<ProductCreateWithoutWishlistInput, ProductUncheckedCreateWithoutWishlistInput>
    where?: ProductWhereInput
  }

  export type ProductUpdateToOneWithWhereWithoutWishlistInput = {
    where?: ProductWhereInput
    data: XOR<ProductUpdateWithoutWishlistInput, ProductUncheckedUpdateWithoutWishlistInput>
  }

  export type ProductUpdateWithoutWishlistInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProductsNestedInput
    subcategory?: SubcategoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    seller?: SellerUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    SpecialOffer?: SpecialOfferUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutWishlistInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductCreateWithoutSpecialOfferInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    category: CategoryCreateNestedOneWithoutProductsInput
    subcategory: SubcategoryCreateNestedOneWithoutProductsInput
    brand: BrandCreateNestedOneWithoutProductsInput
    seller: SellerCreateNestedOneWithoutProductsInput
    attributes?: ProductAttributeCreateNestedManyWithoutProductInput
    variants?: ProductVariantCreateNestedManyWithoutProductInput
    reviews?: ReviewCreateNestedManyWithoutProductInput
    Wishlist?: WishlistCreateNestedManyWithoutProductInput
  }

  export type ProductUncheckedCreateWithoutSpecialOfferInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    brandId: string
    sellerId: string
    attributes?: ProductAttributeUncheckedCreateNestedManyWithoutProductInput
    variants?: ProductVariantUncheckedCreateNestedManyWithoutProductInput
    reviews?: ReviewUncheckedCreateNestedManyWithoutProductInput
    Wishlist?: WishlistUncheckedCreateNestedManyWithoutProductInput
  }

  export type ProductCreateOrConnectWithoutSpecialOfferInput = {
    where: ProductWhereUniqueInput
    create: XOR<ProductCreateWithoutSpecialOfferInput, ProductUncheckedCreateWithoutSpecialOfferInput>
  }

  export type ProductCreateManySpecialOfferInputEnvelope = {
    data: ProductCreateManySpecialOfferInput | ProductCreateManySpecialOfferInput[]
    skipDuplicates?: boolean
  }

  export type ProductUpsertWithWhereUniqueWithoutSpecialOfferInput = {
    where: ProductWhereUniqueInput
    update: XOR<ProductUpdateWithoutSpecialOfferInput, ProductUncheckedUpdateWithoutSpecialOfferInput>
    create: XOR<ProductCreateWithoutSpecialOfferInput, ProductUncheckedCreateWithoutSpecialOfferInput>
  }

  export type ProductUpdateWithWhereUniqueWithoutSpecialOfferInput = {
    where: ProductWhereUniqueInput
    data: XOR<ProductUpdateWithoutSpecialOfferInput, ProductUncheckedUpdateWithoutSpecialOfferInput>
  }

  export type ProductUpdateManyWithWhereWithoutSpecialOfferInput = {
    where: ProductScalarWhereInput
    data: XOR<ProductUpdateManyMutationInput, ProductUncheckedUpdateManyWithoutSpecialOfferInput>
  }

  export type OrderCreateWithoutCouponInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemCreateNestedManyWithoutOrderInput
    customer?: CustomerCreateNestedOneWithoutOrdersInput
    PaymentTransaction?: PaymentTransactionCreateNestedManyWithoutOrderInput
  }

  export type OrderUncheckedCreateWithoutCouponInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    customerId?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemUncheckedCreateNestedManyWithoutOrderInput
    PaymentTransaction?: PaymentTransactionUncheckedCreateNestedManyWithoutOrderInput
  }

  export type OrderCreateOrConnectWithoutCouponInput = {
    where: OrderWhereUniqueInput
    create: XOR<OrderCreateWithoutCouponInput, OrderUncheckedCreateWithoutCouponInput>
  }

  export type OrderCreateManyCouponInputEnvelope = {
    data: OrderCreateManyCouponInput | OrderCreateManyCouponInput[]
    skipDuplicates?: boolean
  }

  export type PendingOrderCreateWithoutCouponInput = {
    id?: string
    transactionId: string
    addressId: string
    items: JsonNullValueInput | InputJsonValue
    couponCode?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    discount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    status: string
    paymentMethod?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    shippingChargeId?: string | null
    customer?: CustomerCreateNestedOneWithoutPendingOrderInput
  }

  export type PendingOrderUncheckedCreateWithoutCouponInput = {
    id?: string
    transactionId: string
    customerId?: string | null
    addressId: string
    items: JsonNullValueInput | InputJsonValue
    couponCode?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    discount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    status: string
    paymentMethod?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    shippingChargeId?: string | null
  }

  export type PendingOrderCreateOrConnectWithoutCouponInput = {
    where: PendingOrderWhereUniqueInput
    create: XOR<PendingOrderCreateWithoutCouponInput, PendingOrderUncheckedCreateWithoutCouponInput>
  }

  export type PendingOrderCreateManyCouponInputEnvelope = {
    data: PendingOrderCreateManyCouponInput | PendingOrderCreateManyCouponInput[]
    skipDuplicates?: boolean
  }

  export type OrderUpsertWithWhereUniqueWithoutCouponInput = {
    where: OrderWhereUniqueInput
    update: XOR<OrderUpdateWithoutCouponInput, OrderUncheckedUpdateWithoutCouponInput>
    create: XOR<OrderCreateWithoutCouponInput, OrderUncheckedCreateWithoutCouponInput>
  }

  export type OrderUpdateWithWhereUniqueWithoutCouponInput = {
    where: OrderWhereUniqueInput
    data: XOR<OrderUpdateWithoutCouponInput, OrderUncheckedUpdateWithoutCouponInput>
  }

  export type OrderUpdateManyWithWhereWithoutCouponInput = {
    where: OrderScalarWhereInput
    data: XOR<OrderUpdateManyMutationInput, OrderUncheckedUpdateManyWithoutCouponInput>
  }

  export type PendingOrderUpsertWithWhereUniqueWithoutCouponInput = {
    where: PendingOrderWhereUniqueInput
    update: XOR<PendingOrderUpdateWithoutCouponInput, PendingOrderUncheckedUpdateWithoutCouponInput>
    create: XOR<PendingOrderCreateWithoutCouponInput, PendingOrderUncheckedCreateWithoutCouponInput>
  }

  export type PendingOrderUpdateWithWhereUniqueWithoutCouponInput = {
    where: PendingOrderWhereUniqueInput
    data: XOR<PendingOrderUpdateWithoutCouponInput, PendingOrderUncheckedUpdateWithoutCouponInput>
  }

  export type PendingOrderUpdateManyWithWhereWithoutCouponInput = {
    where: PendingOrderScalarWhereInput
    data: XOR<PendingOrderUpdateManyMutationInput, PendingOrderUncheckedUpdateManyWithoutCouponInput>
  }

  export type PageSectionCreateWithoutPageInput = {
    id?: string
    title: string
    content: string
    image?: string | null
    sequence_no?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type PageSectionUncheckedCreateWithoutPageInput = {
    id?: string
    title: string
    content: string
    image?: string | null
    sequence_no?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type PageSectionCreateOrConnectWithoutPageInput = {
    where: PageSectionWhereUniqueInput
    create: XOR<PageSectionCreateWithoutPageInput, PageSectionUncheckedCreateWithoutPageInput>
  }

  export type PageSectionCreateManyPageInputEnvelope = {
    data: PageSectionCreateManyPageInput | PageSectionCreateManyPageInput[]
    skipDuplicates?: boolean
  }

  export type PageSectionUpsertWithWhereUniqueWithoutPageInput = {
    where: PageSectionWhereUniqueInput
    update: XOR<PageSectionUpdateWithoutPageInput, PageSectionUncheckedUpdateWithoutPageInput>
    create: XOR<PageSectionCreateWithoutPageInput, PageSectionUncheckedCreateWithoutPageInput>
  }

  export type PageSectionUpdateWithWhereUniqueWithoutPageInput = {
    where: PageSectionWhereUniqueInput
    data: XOR<PageSectionUpdateWithoutPageInput, PageSectionUncheckedUpdateWithoutPageInput>
  }

  export type PageSectionUpdateManyWithWhereWithoutPageInput = {
    where: PageSectionScalarWhereInput
    data: XOR<PageSectionUpdateManyMutationInput, PageSectionUncheckedUpdateManyWithoutPageInput>
  }

  export type PageSectionScalarWhereInput = {
    AND?: PageSectionScalarWhereInput | PageSectionScalarWhereInput[]
    OR?: PageSectionScalarWhereInput[]
    NOT?: PageSectionScalarWhereInput | PageSectionScalarWhereInput[]
    id?: StringFilter<"PageSection"> | string
    page_id?: StringFilter<"PageSection"> | string
    title?: StringFilter<"PageSection"> | string
    content?: StringFilter<"PageSection"> | string
    image?: StringNullableFilter<"PageSection"> | string | null
    sequence_no?: IntFilter<"PageSection"> | number
    is_active?: BoolFilter<"PageSection"> | boolean
    created_at?: DateTimeFilter<"PageSection"> | Date | string
    created_by?: StringFilter<"PageSection"> | string
    created_ip?: StringNullableFilter<"PageSection"> | string | null
    updated_at?: DateTimeFilter<"PageSection"> | Date | string
    updated_by?: StringNullableFilter<"PageSection"> | string | null
    updated_ip?: StringNullableFilter<"PageSection"> | string | null
    company_id?: StringFilter<"PageSection"> | string
  }

  export type PageCreateWithoutSectionsInput = {
    id?: string
    title: string
    slug: string
    content: string
    meta_title?: string | null
    meta_desc?: string | null
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type PageUncheckedCreateWithoutSectionsInput = {
    id?: string
    title: string
    slug: string
    content: string
    meta_title?: string | null
    meta_desc?: string | null
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type PageCreateOrConnectWithoutSectionsInput = {
    where: PageWhereUniqueInput
    create: XOR<PageCreateWithoutSectionsInput, PageUncheckedCreateWithoutSectionsInput>
  }

  export type PageUpsertWithoutSectionsInput = {
    update: XOR<PageUpdateWithoutSectionsInput, PageUncheckedUpdateWithoutSectionsInput>
    create: XOR<PageCreateWithoutSectionsInput, PageUncheckedCreateWithoutSectionsInput>
    where?: PageWhereInput
  }

  export type PageUpdateToOneWithWhereWithoutSectionsInput = {
    where?: PageWhereInput
    data: XOR<PageUpdateWithoutSectionsInput, PageUncheckedUpdateWithoutSectionsInput>
  }

  export type PageUpdateWithoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    meta_title?: NullableStringFieldUpdateOperationsInput | string | null
    meta_desc?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type PageUncheckedUpdateWithoutSectionsInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    meta_title?: NullableStringFieldUpdateOperationsInput | string | null
    meta_desc?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type CompanyAdditionalInfoCreateManyCompanyInput = {
    id?: string
    short_description?: string | null
    facebook_link?: string | null
    twitter_link?: string | null
    instagram_link?: string | null
    linkedin_link?: string | null
    youtube_link?: string | null
    whatsapp_number?: string | null
    google_map_link?: string | null
    vision?: string | null
    mission?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type CompanyAdditionalInfoUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyAdditionalInfoUncheckedUpdateWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyAdditionalInfoUncheckedUpdateManyWithoutCompanyInput = {
    id?: StringFieldUpdateOperationsInput | string
    short_description?: NullableStringFieldUpdateOperationsInput | string | null
    facebook_link?: NullableStringFieldUpdateOperationsInput | string | null
    twitter_link?: NullableStringFieldUpdateOperationsInput | string | null
    instagram_link?: NullableStringFieldUpdateOperationsInput | string | null
    linkedin_link?: NullableStringFieldUpdateOperationsInput | string | null
    youtube_link?: NullableStringFieldUpdateOperationsInput | string | null
    whatsapp_number?: NullableStringFieldUpdateOperationsInput | string | null
    google_map_link?: NullableStringFieldUpdateOperationsInput | string | null
    vision?: NullableStringFieldUpdateOperationsInput | string | null
    mission?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type UserGroupCreateManyUserInput = {
    id?: string
    group_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserSettingsCreateManyUserInput = {
    id?: string
    settings: JsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type RefreshTokenCreateManyUserInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type UserGroupUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    security_group?: SecurityGroupUpdateOneRequiredWithoutUserGroupsNestedInput
  }

  export type UserGroupUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserGroupUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserSettingsUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserSettingsUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserSettingsUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    settings?: JsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type RefreshTokenUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RefreshTokenUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type RefreshTokenUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type SecurityRuleWiseMenuPermissionCreateManySecurity_ruleInput = {
    id?: string
    menu_id: number
    can_view: boolean
    can_create: boolean
    can_update: boolean
    can_delete: boolean
    can_report: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupRuleCreateManySecurity_ruleInput = {
    id?: string
    group_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityRuleWiseMenuPermissionUpdateWithoutSecurity_ruleInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityRuleWiseMenuPermissionUncheckedUpdateWithoutSecurity_ruleInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityRuleWiseMenuPermissionUncheckedUpdateManyWithoutSecurity_ruleInput = {
    id?: StringFieldUpdateOperationsInput | string
    menu_id?: IntFieldUpdateOperationsInput | number
    can_view?: BoolFieldUpdateOperationsInput | boolean
    can_create?: BoolFieldUpdateOperationsInput | boolean
    can_update?: BoolFieldUpdateOperationsInput | boolean
    can_delete?: BoolFieldUpdateOperationsInput | boolean
    can_report?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleUpdateWithoutSecurity_ruleInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    security_group?: SecurityGroupUpdateOneRequiredWithoutSecurityGroupRulesNestedInput
  }

  export type SecurityGroupRuleUncheckedUpdateWithoutSecurity_ruleInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_ruleInput = {
    id?: StringFieldUpdateOperationsInput | string
    group_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleCreateManySecurity_groupInput = {
    id?: string
    rule_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type UserGroupCreateManySecurity_groupInput = {
    id?: string
    user_id: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type SecurityGroupRuleUpdateWithoutSecurity_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    security_rule?: SecurityRuleUpdateOneRequiredWithoutSecurityGroupRulesNestedInput
  }

  export type SecurityGroupRuleUncheckedUpdateWithoutSecurity_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    rule_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type SecurityGroupRuleUncheckedUpdateManyWithoutSecurity_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    rule_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserGroupUpdateWithoutSecurity_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    user?: UserUpdateOneRequiredWithoutUserGroupsNestedInput
  }

  export type UserGroupUncheckedUpdateWithoutSecurity_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type UserGroupUncheckedUpdateManyWithoutSecurity_groupInput = {
    id?: StringFieldUpdateOperationsInput | string
    user_id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProductAttributeCreateManyProductInput = {
    id?: string
    name: string
    type: string
    value: string
    unit?: string | null
    displayValue?: string | null
    options?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductVariantCreateManyProductInput = {
    id?: string
    sku: string
    price: Decimal | DecimalJsLike | number | string
    stock: Decimal | DecimalJsLike | number | string
    attributes: JsonNullValueInput | InputJsonValue
    images: JsonNullValueInput | InputJsonValue
    sequence_no?: number
  }

  export type ReviewCreateManyProductInput = {
    id?: string
    userId: string
    userName: string
    userAvatar?: string | null
    rating: number
    title?: string | null
    comment: string
    helpful?: number
    createdAt?: Date | string
    variantId?: string | null
  }

  export type WishlistCreateManyProductInput = {
    id?: string
    userId: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type ProductAttributeUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    displayValue?: NullableStringFieldUpdateOperationsInput | string | null
    options?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductAttributeUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    displayValue?: NullableStringFieldUpdateOperationsInput | string | null
    options?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductAttributeUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    type?: StringFieldUpdateOperationsInput | string
    value?: StringFieldUpdateOperationsInput | string
    unit?: NullableStringFieldUpdateOperationsInput | string | null
    displayValue?: NullableStringFieldUpdateOperationsInput | string | null
    options?: NullableJsonNullValueInput | InputJsonValue
  }

  export type ProductVariantUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    images?: JsonNullValueInput | InputJsonValue
    sequence_no?: IntFieldUpdateOperationsInput | number
  }

  export type ProductVariantUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    images?: JsonNullValueInput | InputJsonValue
    sequence_no?: IntFieldUpdateOperationsInput | number
  }

  export type ProductVariantUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    sku?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    attributes?: JsonNullValueInput | InputJsonValue
    images?: JsonNullValueInput | InputJsonValue
    sequence_no?: IntFieldUpdateOperationsInput | number
  }

  export type ReviewUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: StringFieldUpdateOperationsInput | string
    helpful?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReviewUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: StringFieldUpdateOperationsInput | string
    helpful?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ReviewUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    userName?: StringFieldUpdateOperationsInput | string
    userAvatar?: NullableStringFieldUpdateOperationsInput | string | null
    rating?: FloatFieldUpdateOperationsInput | number
    title?: NullableStringFieldUpdateOperationsInput | string | null
    comment?: StringFieldUpdateOperationsInput | string
    helpful?: IntFieldUpdateOperationsInput | number
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WishlistUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    user?: CustomerUpdateOneRequiredWithoutWishlistNestedInput
  }

  export type WishlistUncheckedUpdateWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WishlistUncheckedUpdateManyWithoutProductInput = {
    id?: StringFieldUpdateOperationsInput | string
    userId?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type SubcategoryCreateManyCategoryInput = {
    id?: string
    name: string
    slug: string
    productCount?: number
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type ProductCreateManyCategoryInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    subcategoryId: string
    brandId: string
    sellerId: string
    specialOfferId?: string | null
  }

  export type SubcategoryUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    productCount?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    products?: ProductUpdateManyWithoutSubcategoryNestedInput
  }

  export type SubcategoryUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    productCount?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    products?: ProductUncheckedUpdateManyWithoutSubcategoryNestedInput
  }

  export type SubcategoryUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    productCount?: IntFieldUpdateOperationsInput | number
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type ProductUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    subcategory?: SubcategoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    seller?: SellerUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUpdateManyWithoutProductNestedInput
    SpecialOffer?: SpecialOfferUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutCategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCreateManySubcategoryInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    brandId: string
    sellerId: string
    specialOfferId?: string | null
  }

  export type ProductUpdateWithoutSubcategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    seller?: SellerUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUpdateManyWithoutProductNestedInput
    SpecialOffer?: SpecialOfferUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutSubcategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutSubcategoryInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCreateManyBrandInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    sellerId: string
    specialOfferId?: string | null
  }

  export type ProductUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProductsNestedInput
    subcategory?: SubcategoryUpdateOneRequiredWithoutProductsNestedInput
    seller?: SellerUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUpdateManyWithoutProductNestedInput
    SpecialOffer?: SpecialOfferUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutBrandInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCreateManySellerInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    brandId: string
    specialOfferId?: string | null
  }

  export type CompanyCreateManySellerInput = {
    id?: string
    company_name: string
    company_short_name?: string | null
    company_code?: string | null
    registration_number: string
    tax_id: string
    address?: string | null
    city?: string | null
    state?: string | null
    country?: string | null
    postal_code?: string | null
    phone: string
    email: string
    website?: string | null
    is_seller?: boolean
    is_verified?: boolean
    industry?: string | null
    number_of_employees?: number | null
    annual_revenue?: Decimal | DecimalJsLike | number | string | null
    description?: string | null
    is_active: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type ProductUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProductsNestedInput
    subcategory?: SubcategoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUpdateManyWithoutProductNestedInput
    SpecialOffer?: SpecialOfferUpdateOneWithoutProductsNestedInput
  }

  export type ProductUncheckedUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    specialOfferId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CompanyUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    is_seller?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyAdditionalInfo?: CompanyAdditionalInfoUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    is_seller?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    CompanyAdditionalInfo?: CompanyAdditionalInfoUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type CompanyUncheckedUpdateManyWithoutSellerInput = {
    id?: StringFieldUpdateOperationsInput | string
    company_name?: StringFieldUpdateOperationsInput | string
    company_short_name?: NullableStringFieldUpdateOperationsInput | string | null
    company_code?: NullableStringFieldUpdateOperationsInput | string | null
    registration_number?: StringFieldUpdateOperationsInput | string
    tax_id?: StringFieldUpdateOperationsInput | string
    address?: NullableStringFieldUpdateOperationsInput | string | null
    city?: NullableStringFieldUpdateOperationsInput | string | null
    state?: NullableStringFieldUpdateOperationsInput | string | null
    country?: NullableStringFieldUpdateOperationsInput | string | null
    postal_code?: NullableStringFieldUpdateOperationsInput | string | null
    phone?: StringFieldUpdateOperationsInput | string
    email?: StringFieldUpdateOperationsInput | string
    website?: NullableStringFieldUpdateOperationsInput | string | null
    is_seller?: BoolFieldUpdateOperationsInput | boolean
    is_verified?: BoolFieldUpdateOperationsInput | boolean
    industry?: NullableStringFieldUpdateOperationsInput | string | null
    number_of_employees?: NullableIntFieldUpdateOperationsInput | number | null
    annual_revenue?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    description?: NullableStringFieldUpdateOperationsInput | string | null
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderCreateManyCustomerInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    coupon_id?: string | null
    discount_amount?: Decimal | DecimalJsLike | number | string | null
  }

  export type CustomerRefreshTokenCreateManyCustomerInput = {
    id?: string
    token: string
    expiresAt: Date | string
    createdAt?: Date | string
    isRevoked?: boolean
  }

  export type CustomerAddressCreateManyCustomerInput = {
    id?: string
    label: string
    firstName: string
    lastName: string
    phone: string
    email?: string | null
    address: string
    apartment?: string | null
    city: string
    state: string
    country: string
    postalCode: string
    isDefault?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type WishlistCreateManyUserInput = {
    id?: string
    productId: string
    created_at?: Date | string
    updated_at?: Date | string
  }

  export type PendingOrderCreateManyCustomerInput = {
    id?: string
    transactionId: string
    addressId: string
    items: JsonNullValueInput | InputJsonValue
    couponId?: string | null
    couponCode?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    discount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    status: string
    paymentMethod?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    shippingChargeId?: string | null
  }

  export type OrderUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemUpdateManyWithoutOrderNestedInput
    PaymentTransaction?: PaymentTransactionUpdateManyWithoutOrderNestedInput
    coupon?: CouponUpdateOneWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    coupon_id?: NullableStringFieldUpdateOperationsInput | string | null
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    PaymentTransaction?: PaymentTransactionUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    coupon_id?: NullableStringFieldUpdateOperationsInput | string | null
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type CustomerRefreshTokenUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CustomerRefreshTokenUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CustomerRefreshTokenUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    token?: StringFieldUpdateOperationsInput | string
    expiresAt?: DateTimeFieldUpdateOperationsInput | Date | string
    createdAt?: DateTimeFieldUpdateOperationsInput | Date | string
    isRevoked?: BoolFieldUpdateOperationsInput | boolean
  }

  export type CustomerAddressUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    apartment?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CustomerAddressUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    apartment?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type CustomerAddressUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    label?: StringFieldUpdateOperationsInput | string
    firstName?: StringFieldUpdateOperationsInput | string
    lastName?: StringFieldUpdateOperationsInput | string
    phone?: StringFieldUpdateOperationsInput | string
    email?: NullableStringFieldUpdateOperationsInput | string | null
    address?: StringFieldUpdateOperationsInput | string
    apartment?: NullableStringFieldUpdateOperationsInput | string | null
    city?: StringFieldUpdateOperationsInput | string
    state?: StringFieldUpdateOperationsInput | string
    country?: StringFieldUpdateOperationsInput | string
    postalCode?: StringFieldUpdateOperationsInput | string
    isDefault?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type WishlistUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    product?: ProductUpdateOneRequiredWithoutWishlistNestedInput
  }

  export type WishlistUncheckedUpdateWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type WishlistUncheckedUpdateManyWithoutUserInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
  }

  export type PendingOrderUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    items?: JsonNullValueInput | InputJsonValue
    couponCode?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    shippingChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    coupon?: CouponUpdateOneWithoutPendingOrderNestedInput
  }

  export type PendingOrderUncheckedUpdateWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    items?: JsonNullValueInput | InputJsonValue
    couponId?: NullableStringFieldUpdateOperationsInput | string | null
    couponCode?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    shippingChargeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PendingOrderUncheckedUpdateManyWithoutCustomerInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    items?: JsonNullValueInput | InputJsonValue
    couponId?: NullableStringFieldUpdateOperationsInput | string | null
    couponCode?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    shippingChargeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type OrderItemCreateManyOrderInput = {
    id?: string
    productId: string
    variantId?: string | null
    quantity: number
    unitPrice: Decimal | DecimalJsLike | number | string
    totalPrice: Decimal | DecimalJsLike | number | string
    productName: string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type PaymentTransactionCreateManyOrderInput = {
    id?: string
    transactionId: string
    gateway: string
    amount: Decimal | DecimalJsLike | number | string
    currency: string
    status: string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
  }

  export type OrderItemUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type OrderItemUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type OrderItemUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    productId?: StringFieldUpdateOperationsInput | string
    variantId?: NullableStringFieldUpdateOperationsInput | string | null
    quantity?: IntFieldUpdateOperationsInput | number
    unitPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    totalPrice?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    productName?: StringFieldUpdateOperationsInput | string
    variantAttributes?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type PaymentTransactionUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentTransactionUncheckedUpdateWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PaymentTransactionUncheckedUpdateManyWithoutOrderInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    gateway?: StringFieldUpdateOperationsInput | string
    amount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    currency?: StringFieldUpdateOperationsInput | string
    status?: StringFieldUpdateOperationsInput | string
    metadata?: NullableJsonNullValueInput | InputJsonValue
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type ProductCreateManySpecialOfferInput = {
    id?: string
    name: string
    slug: string
    description: string
    price: Decimal | DecimalJsLike | number | string
    priceRange?: Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: Decimal | DecimalJsLike | number | string | null
    images: JsonNullValueInput | InputJsonValue
    thumbnail: string
    hasVariants?: boolean
    stock: Decimal | DecimalJsLike | number | string
    tags: JsonNullValueInput | InputJsonValue
    rating: number
    reviewCount: number
    status: string
    isFeatured?: boolean
    isNew?: boolean
    onSale?: boolean
    salePercentage?: Decimal | DecimalJsLike | number | string | null
    salePrice?: Decimal | DecimalJsLike | number | string | null
    saleStartDate?: Date | string | null
    saleEndDate?: Date | string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    categoryId: string
    subcategoryId: string
    brandId: string
    sellerId: string
  }

  export type ProductUpdateWithoutSpecialOfferInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    category?: CategoryUpdateOneRequiredWithoutProductsNestedInput
    subcategory?: SubcategoryUpdateOneRequiredWithoutProductsNestedInput
    brand?: BrandUpdateOneRequiredWithoutProductsNestedInput
    seller?: SellerUpdateOneRequiredWithoutProductsNestedInput
    attributes?: ProductAttributeUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUpdateManyWithoutProductNestedInput
    reviews?: ReviewUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateWithoutSpecialOfferInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
    attributes?: ProductAttributeUncheckedUpdateManyWithoutProductNestedInput
    variants?: ProductVariantUncheckedUpdateManyWithoutProductNestedInput
    reviews?: ReviewUncheckedUpdateManyWithoutProductNestedInput
    Wishlist?: WishlistUncheckedUpdateManyWithoutProductNestedInput
  }

  export type ProductUncheckedUpdateManyWithoutSpecialOfferInput = {
    id?: StringFieldUpdateOperationsInput | string
    name?: StringFieldUpdateOperationsInput | string
    slug?: StringFieldUpdateOperationsInput | string
    description?: StringFieldUpdateOperationsInput | string
    price?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    priceRange?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    compareAtPrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    images?: JsonNullValueInput | InputJsonValue
    thumbnail?: StringFieldUpdateOperationsInput | string
    hasVariants?: BoolFieldUpdateOperationsInput | boolean
    stock?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tags?: JsonNullValueInput | InputJsonValue
    rating?: FloatFieldUpdateOperationsInput | number
    reviewCount?: IntFieldUpdateOperationsInput | number
    status?: StringFieldUpdateOperationsInput | string
    isFeatured?: BoolFieldUpdateOperationsInput | boolean
    isNew?: BoolFieldUpdateOperationsInput | boolean
    onSale?: BoolFieldUpdateOperationsInput | boolean
    salePercentage?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    salePrice?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    saleStartDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    saleEndDate?: NullableDateTimeFieldUpdateOperationsInput | Date | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    categoryId?: StringFieldUpdateOperationsInput | string
    subcategoryId?: StringFieldUpdateOperationsInput | string
    brandId?: StringFieldUpdateOperationsInput | string
    sellerId?: StringFieldUpdateOperationsInput | string
  }

  export type OrderCreateManyCouponInput = {
    id?: string
    orderNumber: string
    userId?: string | null
    status: $Enums.OrderStatus
    totalAmount: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    tax: Decimal | DecimalJsLike | number | string
    discount?: Decimal | DecimalJsLike | number | string | null
    finalAmount: Decimal | DecimalJsLike | number | string
    shippingAddress: JsonNullValueInput | InputJsonValue
    billingAddress: JsonNullValueInput | InputJsonValue
    paymentMethod: string
    paymentStatus: $Enums.PaymentStatus
    trackingNumber?: string | null
    trackingStatus?: string | null
    customerId?: string | null
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
    paymentGateway?: string | null
    sslcommerzTransactionId?: string | null
    paypalOrderId?: string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: Decimal | DecimalJsLike | number | string | null
  }

  export type PendingOrderCreateManyCouponInput = {
    id?: string
    transactionId: string
    customerId?: string | null
    addressId: string
    items: JsonNullValueInput | InputJsonValue
    couponCode?: string | null
    subtotal: Decimal | DecimalJsLike | number | string
    shippingCost: Decimal | DecimalJsLike | number | string
    discount: Decimal | DecimalJsLike | number | string
    total: Decimal | DecimalJsLike | number | string
    status: string
    paymentMethod?: string
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    shippingChargeId?: string | null
  }

  export type OrderUpdateWithoutCouponInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemUpdateManyWithoutOrderNestedInput
    customer?: CustomerUpdateOneWithoutOrdersNestedInput
    PaymentTransaction?: PaymentTransactionUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateWithoutCouponInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    orderItems?: OrderItemUncheckedUpdateManyWithoutOrderNestedInput
    PaymentTransaction?: PaymentTransactionUncheckedUpdateManyWithoutOrderNestedInput
  }

  export type OrderUncheckedUpdateManyWithoutCouponInput = {
    id?: StringFieldUpdateOperationsInput | string
    orderNumber?: StringFieldUpdateOperationsInput | string
    userId?: NullableStringFieldUpdateOperationsInput | string | null
    status?: EnumOrderStatusFieldUpdateOperationsInput | $Enums.OrderStatus
    totalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    tax?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
    finalAmount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingAddress?: JsonNullValueInput | InputJsonValue
    billingAddress?: JsonNullValueInput | InputJsonValue
    paymentMethod?: StringFieldUpdateOperationsInput | string
    paymentStatus?: EnumPaymentStatusFieldUpdateOperationsInput | $Enums.PaymentStatus
    trackingNumber?: NullableStringFieldUpdateOperationsInput | string | null
    trackingStatus?: NullableStringFieldUpdateOperationsInput | string | null
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
    paymentGateway?: NullableStringFieldUpdateOperationsInput | string | null
    sslcommerzTransactionId?: NullableStringFieldUpdateOperationsInput | string | null
    paypalOrderId?: NullableStringFieldUpdateOperationsInput | string | null
    paymentMetadata?: NullableJsonNullValueInput | InputJsonValue
    discount_amount?: NullableDecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string | null
  }

  export type PendingOrderUpdateWithoutCouponInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    addressId?: StringFieldUpdateOperationsInput | string
    items?: JsonNullValueInput | InputJsonValue
    couponCode?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    shippingChargeId?: NullableStringFieldUpdateOperationsInput | string | null
    customer?: CustomerUpdateOneWithoutPendingOrderNestedInput
  }

  export type PendingOrderUncheckedUpdateWithoutCouponInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    items?: JsonNullValueInput | InputJsonValue
    couponCode?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    shippingChargeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PendingOrderUncheckedUpdateManyWithoutCouponInput = {
    id?: StringFieldUpdateOperationsInput | string
    transactionId?: StringFieldUpdateOperationsInput | string
    customerId?: NullableStringFieldUpdateOperationsInput | string | null
    addressId?: StringFieldUpdateOperationsInput | string
    items?: JsonNullValueInput | InputJsonValue
    couponCode?: NullableStringFieldUpdateOperationsInput | string | null
    subtotal?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    shippingCost?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    discount?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    total?: DecimalFieldUpdateOperationsInput | Decimal | DecimalJsLike | number | string
    status?: StringFieldUpdateOperationsInput | string
    paymentMethod?: StringFieldUpdateOperationsInput | string
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    shippingChargeId?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type PageSectionCreateManyPageInput = {
    id?: string
    title: string
    content: string
    image?: string | null
    sequence_no?: number
    is_active?: boolean
    created_at?: Date | string
    created_by: string
    created_ip?: string | null
    updated_at?: Date | string
    updated_by?: string | null
    updated_ip?: string | null
    company_id: string
  }

  export type PageSectionUpdateWithoutPageInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type PageSectionUncheckedUpdateWithoutPageInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }

  export type PageSectionUncheckedUpdateManyWithoutPageInput = {
    id?: StringFieldUpdateOperationsInput | string
    title?: StringFieldUpdateOperationsInput | string
    content?: StringFieldUpdateOperationsInput | string
    image?: NullableStringFieldUpdateOperationsInput | string | null
    sequence_no?: IntFieldUpdateOperationsInput | number
    is_active?: BoolFieldUpdateOperationsInput | boolean
    created_at?: DateTimeFieldUpdateOperationsInput | Date | string
    created_by?: StringFieldUpdateOperationsInput | string
    created_ip?: NullableStringFieldUpdateOperationsInput | string | null
    updated_at?: DateTimeFieldUpdateOperationsInput | Date | string
    updated_by?: NullableStringFieldUpdateOperationsInput | string | null
    updated_ip?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: StringFieldUpdateOperationsInput | string
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CompanyCountOutputTypeDefaultArgs instead
     */
    export type CompanyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserCountOutputTypeDefaultArgs instead
     */
    export type UserCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityRuleCountOutputTypeDefaultArgs instead
     */
    export type SecurityRuleCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityRuleCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityGroupCountOutputTypeDefaultArgs instead
     */
    export type SecurityGroupCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityGroupCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductCountOutputTypeDefaultArgs instead
     */
    export type ProductCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoryCountOutputTypeDefaultArgs instead
     */
    export type CategoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubcategoryCountOutputTypeDefaultArgs instead
     */
    export type SubcategoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubcategoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BrandCountOutputTypeDefaultArgs instead
     */
    export type BrandCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BrandCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SellerCountOutputTypeDefaultArgs instead
     */
    export type SellerCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SellerCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CustomerCountOutputTypeDefaultArgs instead
     */
    export type CustomerCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CustomerCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderCountOutputTypeDefaultArgs instead
     */
    export type OrderCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SpecialOfferCountOutputTypeDefaultArgs instead
     */
    export type SpecialOfferCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SpecialOfferCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CouponCountOutputTypeDefaultArgs instead
     */
    export type CouponCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CouponCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PageCountOutputTypeDefaultArgs instead
     */
    export type PageCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PageCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ApplicationLogDefaultArgs instead
     */
    export type ApplicationLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ApplicationLogDefaultArgs<ExtArgs>
    /**
     * @deprecated Use AuditLogDefaultArgs instead
     */
    export type AuditLogArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = AuditLogDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CompanyDefaultArgs instead
     */
    export type CompanyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CompanyAdditionalInfoDefaultArgs instead
     */
    export type CompanyAdditionalInfoArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyAdditionalInfoDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserDefaultArgs instead
     */
    export type UserArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserDefaultArgs<ExtArgs>
    /**
     * @deprecated Use RefreshTokenDefaultArgs instead
     */
    export type RefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = RefreshTokenDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityRuleDefaultArgs instead
     */
    export type SecurityRuleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityRuleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityRuleWiseMenuPermissionDefaultArgs instead
     */
    export type SecurityRuleWiseMenuPermissionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityRuleWiseMenuPermissionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityGroupDefaultArgs instead
     */
    export type SecurityGroupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityGroupDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SecurityGroupRuleDefaultArgs instead
     */
    export type SecurityGroupRuleArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SecurityGroupRuleDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserGroupDefaultArgs instead
     */
    export type UserGroupArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserGroupDefaultArgs<ExtArgs>
    /**
     * @deprecated Use MenuDefaultArgs instead
     */
    export type MenuArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = MenuDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductDefaultArgs instead
     */
    export type ProductArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CategoryDefaultArgs instead
     */
    export type CategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SubcategoryDefaultArgs instead
     */
    export type SubcategoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SubcategoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BrandDefaultArgs instead
     */
    export type BrandArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BrandDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductAttributeDefaultArgs instead
     */
    export type ProductAttributeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductAttributeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ProductVariantDefaultArgs instead
     */
    export type ProductVariantArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ProductVariantDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SellerDefaultArgs instead
     */
    export type SellerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SellerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ReviewDefaultArgs instead
     */
    export type ReviewArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ReviewDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CustomerDefaultArgs instead
     */
    export type CustomerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CustomerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CustomerRefreshTokenDefaultArgs instead
     */
    export type CustomerRefreshTokenArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CustomerRefreshTokenDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderDefaultArgs instead
     */
    export type OrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderDefaultArgs<ExtArgs>
    /**
     * @deprecated Use OrderItemDefaultArgs instead
     */
    export type OrderItemArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = OrderItemDefaultArgs<ExtArgs>
    /**
     * @deprecated Use StockMovementDefaultArgs instead
     */
    export type StockMovementArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = StockMovementDefaultArgs<ExtArgs>
    /**
     * @deprecated Use UserSettingsDefaultArgs instead
     */
    export type UserSettingsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = UserSettingsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CustomerAddressDefaultArgs instead
     */
    export type CustomerAddressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CustomerAddressDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PendingOrderDefaultArgs instead
     */
    export type PendingOrderArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PendingOrderDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PaymentTransactionDefaultArgs instead
     */
    export type PaymentTransactionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PaymentTransactionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use WishlistDefaultArgs instead
     */
    export type WishlistArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = WishlistDefaultArgs<ExtArgs>
    /**
     * @deprecated Use BannerDefaultArgs instead
     */
    export type BannerArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = BannerDefaultArgs<ExtArgs>
    /**
     * @deprecated Use SpecialOfferDefaultArgs instead
     */
    export type SpecialOfferArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = SpecialOfferDefaultArgs<ExtArgs>
    /**
     * @deprecated Use CouponDefaultArgs instead
     */
    export type CouponArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CouponDefaultArgs<ExtArgs>
    /**
     * @deprecated Use ShippingChargeDefaultArgs instead
     */
    export type ShippingChargeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = ShippingChargeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PageDefaultArgs instead
     */
    export type PageArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PageDefaultArgs<ExtArgs>
    /**
     * @deprecated Use PageSectionDefaultArgs instead
     */
    export type PageSectionArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = PageSectionDefaultArgs<ExtArgs>
    /**
     * @deprecated Use FaqDefaultArgs instead
     */
    export type FaqArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = FaqDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}